{"version":3,"sources":["webpack:///./src/views/sound-record-2.vue?5a05","webpack:///./src/views/sound-record-2.vue?fab0","webpack:///./src/views/sound-record-2.vue?9fbd","webpack:///./src/views/sound-record-2.vue","webpack:///./src/views/sound-record-2.vue?8f2e","webpack:///./src/views/sound-record-2.vue?f2d8"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","class","$style","inner","attrs","volume","_v","_s","recordingTime","on","$event","leftAudioData","length","record","stopRecord","playAudio","downloadToLocal","staticRenderFns","timer","rightAudioData","currentFile","navigator","mediaDevices","getUserMedia","audio","sampleRate","channelCount","video","stream","mediaStream","ac","AudioContext","mediaNode","createMediaStreamSource","creator","createScriptProcessor","bind","jsNode","connect","destination","onaudioprocess","e","audioBuffer","inputBuffer","leftData","getChannelData","rightData","push","slice","setInterval","console","log","name","alert","tracks","getTracks","clearInterval","forEach","track","stop","disconnect","left","mergeArray","right","audioData","mergedProvincialHighway","createAudioFile","components","RealVolume","data","Float32Array","i","j","bufferLength","buffer","ArrayBuffer","view","DataView","index","writeUTFBytes","setUint32","setUint16","setInt16","File","Date","toISOString","replace","type","offset","string","setUint8","charCodeAt","arr","floatArray","item","set","injectStyles","context","locals","component","VBtn"],"mappings":"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","file":"js/sound-record-2.639477e5.js","sourcesContent":["export { default } from  \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-0-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-0-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sound-record-2.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&module=true&\"; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-0-0!../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-0-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-0-2!../../node_modules/stylus-loader/index.js??ref--11-oneOf-0-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sound-record-2.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&module=true&\"","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inner\":\"sound-record-2_inner_2L0tL\"};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:_vm.$style.inner},[_c('RealVolume',{attrs:{\"volume\":_vm.volume}}),_c('div',[_vm._v(_vm._s(_vm.recordingTime)+\"s\")]),_c('v-btn',{on:{\"click\":function($event){_vm.leftAudioData.length===0?_vm.record():_vm.stopRecord()}}},[_vm._v(_vm._s(_vm.leftAudioData.length===0?'录制':'停止录制'))]),_c('v-btn',{on:{\"click\":_vm.playAudio}},[_vm._v(\"播放录音\")]),_c('v-btn',{on:{\"click\":_vm.downloadToLocal}},[_vm._v(\"保存为本地音乐文件\")])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from 'vue-property-decorator'\r\nimport RealVolume from '@/components/real-volume.vue'\r\nimport { downloadToLocal, playAudio } from '@/utils/record'\r\n\r\nlet timer = 0\r\n\r\n@Component({\r\n  components: { RealVolume }\r\n})\r\nexport default class SoundRecord2 extends Vue {\r\n  leftAudioData: Array<Float32Array> = []// 左声道音频数据\r\n  rightAudioData: Array<Float32Array> = []// 右声道音频数据\r\n  mediaStream!: MediaStream// 媒体流\r\n  currentFile: File | null = null// 当前录制音频文件流\r\n  jsNode!: ScriptProcessorNode\r\n  mediaNode!: MediaStreamAudioSourceNode\r\n  recordingTime = 0\r\n  // 实时音量\r\n  volume = 0\r\n\r\n  /**\r\n   * 录制\r\n   * @returns {Promise<void>}\r\n   */\r\n  async record (): Promise<void> {\r\n    try {\r\n      // 获取麦克风媒体流\r\n      const stream = this.mediaStream = await navigator.mediaDevices.getUserMedia({\r\n        audio: {\r\n          sampleRate: 48000,\r\n          channelCount: 2\r\n        },\r\n        video: false\r\n      })\r\n\r\n      // 通过WebAudio保存录音\r\n      const ac = new AudioContext()\r\n      // 通过媒体流创建一个audioNode\r\n      const mediaNode = this.mediaNode = ac.createMediaStreamSource(stream)\r\n\r\n      // 绑定createScriptProcessor的this为AudioContext，然后创建一个处理了音频的节点\r\n      const creator = ac.createScriptProcessor.bind(ac)\r\n      const jsNode = this.jsNode = creator(16384, 2, 2)// 设置的更小的话会造成有杂音\r\n\r\n      // 连接到AudioContext\r\n      jsNode.connect(ac.destination)\r\n      // audioNode连接到jsNode\r\n      mediaNode.connect(jsNode)\r\n      // 添加音频流入事件\r\n      jsNode.onaudioprocess = (e: AudioProcessingEvent) => {\r\n        const audioBuffer = e.inputBuffer\r\n        const leftData = audioBuffer.getChannelData(0)\r\n        const rightData = audioBuffer.getChannelData(1)\r\n        this.volume = rightData[rightData.length - 1] + 1\r\n        // 这里有个坑，如果不进行深拷贝的话，录制出来的音频会有问题\r\n        this.leftAudioData.push(leftData.slice(0))\r\n        this.rightAudioData.push(rightData.slice(0))\r\n      }\r\n      timer = setInterval(() => {\r\n        this.recordingTime++\r\n      }, 1000)\r\n    } catch (e) {\r\n      console.log(e)\r\n      if (e.name === 'TypeError') {\r\n        alert('当前环境不支持视频通话')\r\n      } else if (e.name === 'NotAllowedError') {\r\n        alert('请允许使用麦克风')\r\n      } else if (e.name === 'AbortError') {\r\n        console.log('中止')\r\n      } else if (e.name === 'NotFoundError') {\r\n        console.log('找不到')\r\n      } else if (e.name === 'OverConstrainedError') {\r\n        console.log('设备无法满足要求')\r\n      } else if (e.name === 'SecurityError') {\r\n        console.log('由于安全原因，被禁止')\r\n      }\r\n    }\r\n  }\r\n\r\n  stopRecord (): void {\r\n    const { mediaStream } = this\r\n    // 获取所有的媒体通道并停止他们\r\n    const tracks = mediaStream.getTracks()\r\n\r\n    clearInterval(timer)\r\n\r\n    tracks.forEach(track => {\r\n      track.stop()\r\n    })\r\n    // 停止录音\r\n    this.jsNode.disconnect()\r\n    this.mediaNode.disconnect()\r\n\r\n    // 合并数据\r\n    const left = mergeArray(this.leftAudioData)\r\n    const right = mergeArray(this.rightAudioData)\r\n    const audioData = mergedProvincialHighway(left, right)\r\n    this.currentFile = createAudioFile(audioData)\r\n    this.leftAudioData = []\r\n    this.rightAudioData = []\r\n  }\r\n\r\n  /**\r\n   * 下载至本地\r\n   */\r\n  async downloadToLocal (): Promise<void> {\r\n    try {\r\n      const { currentFile } = this\r\n      await downloadToLocal(currentFile as File, '请先录制完成，再下载')\r\n    } catch (e) {\r\n      alert(e)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 播放当前录制的音频\r\n   */\r\n  async playAudio (): Promise<void> {\r\n    try {\r\n      const { currentFile } = this\r\n      await playAudio(currentFile as File, '请先录制完成，再播放')\r\n    } catch (e) {\r\n      alert(e)\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n *交叉合并两个声道\r\n * @param {Float32Array} left 左声道\r\n * @param {Float32Array} right 右声道\r\n */\r\nfunction mergedProvincialHighway (left: Float32Array, right: Float32Array): Float32Array {\r\n  const length = left.length + right.length\r\n  const data = new Float32Array(length)\r\n  for (let i = 0; i < left.length; i++) {\r\n    const j = i * 2\r\n    data[j] = left[i]\r\n    data[j + 1] = right[i]\r\n  }\r\n  return data\r\n}\r\n\r\n/**\r\n * 根据合成的录音数据创建文件\r\n * @param {Float32Array} audioData 合成的数据\r\n * @returns {File} 创建的文件\r\n */\r\nfunction createAudioFile (audioData: Float32Array) {\r\n  const bufferLength = audioData.length * 2 + 44\r\n  const buffer = new ArrayBuffer(bufferLength)\r\n  const view = new DataView(buffer)\r\n  let index = 44\r\n  // 下面的操作是创建文件头\r\n  writeUTFBytes(view, 0, 'RIFF')\r\n  // RIFF块长度\r\n  view.setUint32(4, 44 + audioData.length * 2, true)\r\n  // RIFF类型\r\n  writeUTFBytes(view, 8, 'WAVE')\r\n  // 格式块标识符\r\n  // FMT子块\r\n  writeUTFBytes(view, 12, 'fmt ')\r\n  // 格式块长度\r\n  view.setUint32(16, 16, true)\r\n  // 样本格式（原始）\r\n  view.setUint16(20, 1, true)\r\n  // 立体声（2声道）\r\n  view.setUint16(22, 2, true)\r\n  // 采样率\r\n  view.setUint32(24, 44100, true)\r\n  // 字节率（采样率*块对齐）\r\n  view.setUint32(28, 44100 * 2, true)\r\n  // 块对齐（通道数*每个样本字节）\r\n  view.setUint16(32, 2 * 2, true)\r\n  // 每个样本位数\r\n  view.setUint16(34, 16, true)\r\n  // 数据子块\r\n  // 数据块标识符\r\n  writeUTFBytes(view, 36, 'data')\r\n  // 数据块长度\r\n  view.setUint32(40, audioData.length * 2, true)\r\n\r\n  // 下面的操作是填入数据\r\n  for (const data of audioData) {\r\n    view.setInt16(index, data * (0x7FFF * 1), true)\r\n    index += 2\r\n  }\r\n  return new File(\r\n    [buffer],\r\n    (new Date()).toISOString().replace('T', ' '),\r\n    {\r\n      type: 'audio/wave'\r\n    }\r\n  )\r\n}\r\n\r\n/**\r\n * 写入字节\r\n * @param {DataView} view\r\n * @param {number} offset\r\n * @param {string} string\r\n */\r\nfunction writeUTFBytes (view: DataView, offset: number, string: string) {\r\n  for (let i = 0; i < string.length; i++) {\r\n    view.setUint8(offset + i, string.charCodeAt(i))\r\n  }\r\n}\r\n\r\n/**\r\n * 合并单声道数据片段。因为Float32Array长度不能够动态调节，所以需要根据最终数据合成一个整体的Float32Array\r\n * @param {Array<Float32Array>} arr 数据片段数组\r\n * @returns {Float32Array} 返回一个包含所有片段的数组\r\n */\r\nfunction mergeArray (arr: Array<Float32Array>): Float32Array {\r\n  const length = arr.length * arr[0].length\r\n  const floatArray = new Float32Array(length)\r\n  let offset = 0\r\n  for (const item of arr) {\r\n    floatArray.set(item, offset)\r\n    offset += item.length\r\n  }\r\n  return floatArray\r\n}\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sound-record-2.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./sound-record-2.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./sound-record-2.vue?vue&type=template&id=228e06d4&lang=pug&\"\nimport script from \"./sound-record-2.vue?vue&type=script&lang=ts&\"\nexport * from \"./sound-record-2.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./sound-record-2.vue?vue&type=style&index=0&lang=stylus&rel=stylesheet%2Fstylus&module=true&\"\n\n\n\n\nfunction injectStyles (context) {\n  \n  this[\"$style\"] = (style0.locals || style0)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\ninstallComponents(component, {VBtn})\n"],"sourceRoot":""}