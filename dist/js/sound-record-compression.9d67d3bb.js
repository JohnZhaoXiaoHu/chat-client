(window.webpackJsonp = window.webpackJsonp || []).push([['sound-record-compression'], { '0a93': function (e, t, n) { 'use strict'; var r = n('29090'); var a = n.n(r); n.d(t, 'default', function () { return a.a }) }, 29090: function (e, t, n) { e.exports = { inner: 'sound-record-compression_inner_34vjn' } }, '65c8': function (e, t, n) { 'use strict'; n.r(t); var r = function () { var e = this; var t = e.$createElement; var n = e._self._c || t; return n('div', { class: e.$style.inner }, [n('RealVolume', { attrs: { volume: e.volume } }), n('div', [e._v(e._s(e.recordingTime / 10) + 's')]), n('v-btn', { on: { click: function (t) { e.audioData.length === 0 ? e.record() : e.stopRecord() } } }, [e._v(e._s(e.audioData.length === 0 ? '录制' : '停止录制'))]), n('v-btn', { on: { click: e.playAudio } }, [e._v('播放录音')]), n('v-btn', { on: { click: e.downloadToLocal } }, [e._v('保存为本地音乐文件')])], 1) }; var a = []; var c = (n('4160'), n('fb6a'), n('c19f'), n('b0c0'), n('d3b7'), n('ac1f'), n('5319'), n('cfc3'), n('9a8c'), n('a975'), n('735e'), n('c1ac'), n('d139'), n('3a7b'), n('d5d6'), n('82f8'), n('e91f'), n('60bd0'), n('5f96'), n('3280'), n('3fcc'), n('ca91'), n('25a1'), n('cd26'), n('3c5d'), n('2954'), n('649e'), n('219c'), n('170b'), n('b39a'), n('72f7'), n('159b'), n('b85c')); var o = (n('96cf'), n('1da1')); var i = n('d4ec'); var s = n('bee2'); var u = n('262e'); var l = n('2caf'); var d = n('9ab4'); var v = n('1b40'); var f = n('c93d'); var h = n('1ee0'); var p = 0; var m = 22050; var b = 44100; var g = (function (e) { Object(u.a)(n, e); var t = Object(l.a)(n); function n () { var e; return Object(i.a)(this, n), e = t.apply(this, arguments), e.audioData = [], e.currentFile = null, e.recordingTime = 0, e.volume = 0, e } return Object(s.a)(n, [{ key: 'record', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; var n; var r; var a; var c; var o = this; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, e.next = 3, navigator.mediaDevices.getUserMedia({ audio: { sampleRate: b, channelCount: 2 }, video: !1 }); case 3:t = this.mediaStream = e.sent, n = new AudioContext(), r = this.mediaNode = n.createMediaStreamSource(t), a = n.createScriptProcessor.bind(n), c = this.jsNode = a(16384, 1, 1), this.recordingTime = 0, c.connect(n.destination), c.onaudioprocess = function (e) { var t = e.inputBuffer; var n = t.getChannelData(0); o.volume = n[n.length - 1] + 1, o.audioData.push(n.slice(0)) }, r.connect(c), p = setInterval(function () { o.recordingTime++ }, 100), e.next = 19; break; case 15:e.prev = 15, e.t0 = e.catch(0), console.log(e.t0), e.t0.name === 'TypeError' ? alert('当前环境不支持视频通话') : e.t0.name === 'NotAllowedError' ? alert('请允许使用麦克风') : e.t0.name === 'AbortError' ? console.log('中止') : e.t0.name === 'NotFoundError' ? console.log('找不到') : e.t0.name === 'OverConstrainedError' ? console.log('设备无法满足要求') : e.t0.name === 'SecurityError' && console.log('由于安全原因，被禁止'); case 19:case 'end':return e.stop() } }, e, this, [[0, 15]]) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'stopRecord', value: function () { var e = this.mediaStream; var t = e.getTracks(); clearInterval(p), t.forEach(function (e) { e.stop() }), this.jsNode.disconnect(), this.mediaNode.disconnect(); var n = k(this.audioData); this.currentFile = y(O(n, 11025)), this.audioData = [] } }, { key: 'downloadToLocal', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, t = this.currentFile, e.next = 4, Object(h.a)(t, '请先录制完成，再下载'); case 4:e.next = 9; break; case 6:e.prev = 6, e.t0 = e.catch(0), alert(e.t0); case 9:case 'end':return e.stop() } }, e, this, [[0, 6]]) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'playAudio', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, t = this.currentFile, e.next = 4, Object(h.b)(t, '请先录制完成，再播放'); case 4:e.next = 9; break; case 6:e.prev = 6, e.t0 = e.catch(0), alert(e.t0); case 9:case 'end':return e.stop() } }, e, this, [[0, 6]]) })); function t () { return e.apply(this, arguments) } return t }()) }]), n }(v.d)); g = Object(d.a)([Object(v.a)({ components: { RealVolume: f.a } })], g); var w = g; function y (e) { var t = 1; var n = 8; var r = m; var a = e.length * (n / 8) + 44; var o = new ArrayBuffer(a); var i = new DataView(o); var s = 44; j(i, 0, 'RIFF'), i.setUint32(4, 44 + 2 * e.length, !0), j(i, 8, 'WAVE'), j(i, 12, 'fmt '), i.setUint32(16, 16, !0), i.setUint16(20, 1, !0), i.setUint16(22, t, !0), i.setUint32(24, r, !0), i.setUint32(28, 2 * r * t * (n / 8), !0), i.setUint16(32, n / 8 * t, !0), i.setUint16(34, n, !0), j(i, 36, 'data'), i.setUint32(40, 2 * e.length, !0); var u; var l = Object(c.a)(e); try { for (l.s(); !(u = l.n()).done;) { var d = u.value; var v = Math.max(-1, Math.min(1, d)); var f = v < 0 ? 32768 * v : 32767 * v; f = parseInt(String(255 / (65535 / (f + 32768)))), i.setInt8(s++, f) } } catch (h) { l.e(h) } finally { l.f() } return new File([o], (new Date()).toISOString().replace('T', ' '), { type: 'audio/mpeg' }) } function j (e, t, n) { for (var r = 0; r < n.length; r++)e.setUint8(t + r, n.charCodeAt(r)) } function k (e) { var t; var n = e.length * e[0].length; var r = new Float32Array(n); var a = 0; var o = Object(c.a)(e); try { for (o.s(); !(t = o.n()).done;) { var i = t.value; r.set(i, a), a += i.length } } catch (s) { o.e(s) } finally { o.f() } return r } function O (e, t) { var n = b / t; var r = e.length / n; var a = new Float32Array(r); var c = 0; m = t; for (var o = 0; o < r; o++, c += n)a[o] = e[c]; return a } var x = w; var R = n('0a93'); var U = n('2877'); var A = n('6544'); var D = n.n(A); var F = n('8336'); function _ (e) { this.$style = R.default.locals || R.default } var E = Object(U.a)(x, r, a, !1, _, null, null); t.default = E.exports; D()(E, { VBtn: F.a }) } }])
// # sourceMappingURL=sound-record-compression.9d67d3bb.js.map
