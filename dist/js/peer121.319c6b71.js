(window.webpackJsonp = window.webpackJsonp || []).push([['peer121'], { '1b87': function (e, t, n) { 'use strict'; var r = n('aa20'); var i = n.n(r); n.d(t, 'default', function () { return i.a }) }, '368e': function (e, t, n) {}, '3c93': function (e, t, n) {}, '5e11': function (e, t) { function n (e) { var t = new Error("Cannot find module '" + e + "'"); throw t.code = 'MODULE_NOT_FOUND', t }n.keys = function () { return [] }, n.resolve = n, e.exports = n, n.id = '5e11' }, '615b': function (e, t, n) {}, 7496: function (e, t, n) { 'use strict'; var r = n('5530'); var i = (n('df86'), n('7560')); var o = n('58df'); t.a = Object(o.a)(i.a).extend({ name: 'v-app', props: { dark: { type: Boolean, default: void 0 }, id: { type: String, default: 'app' }, light: { type: Boolean, default: void 0 } }, computed: { isDark: function () { return this.$vuetify.theme.dark } }, beforeCreate: function () { if (!this.$vuetify || this.$vuetify === this.$root) throw new Error('Vuetify is not properly initialized, see https://vuetifyjs.com/getting-started/quick-start#bootstrapping-the-vuetify-object') }, render: function (e) { var t = e('div', { staticClass: 'v-application--wrap' }, this.$slots.default); return e('div', { staticClass: 'v-application', class: Object(r.a)({ 'v-application--is-rtl': this.$vuetify.rtl, 'v-application--is-ltr': !this.$vuetify.rtl }, this.themeClasses), attrs: { 'data-app': !0 }, domProps: { id: this.id } }, [t]) } }) }, '99d9': function (e, t, n) { 'use strict'; n.d(t, 'a', function () { return a }), n.d(t, 'b', function () { return s }), n.d(t, 'c', function () { return c }); var r = n('b0af'); var i = n('80d2'); var o = Object(i.g)('v-card__actions'); var a = Object(i.g)('v-card__subtitle'); var s = Object(i.g)('v-card__text'); var c = Object(i.g)('v-card__title'); r.a }, a0bc: function (e, t, n) { parcelRequire = (function (t, r, i, o) { var a; var s = typeof parcelRequire === 'function' && parcelRequire; function c (e, i) { if (!r[e]) { if (!t[e]) { var o = typeof parcelRequire === 'function' && parcelRequire; if (!i && o) return o(e, !0); if (s) return s(e, !0); if (typeof e === 'string') return n('5e11')(e); var a = new Error("Cannot find module '" + e + "'"); throw a.code = 'MODULE_NOT_FOUND', a }d.resolve = function (n) { return t[e][1][n] || n }, d.cache = {}; var u = r[e] = new c.Module(e); t[e][0].call(u.exports, d, u, u.exports, this) } return r[e].exports; function d (e) { return c(d.resolve(e)) } }c.isParcelRequire = !0, c.Module = function (e) { this.id = e, this.bundle = c, this.exports = {} }, c.modules = t, c.cache = r, c.parent = s, c.register = function (e, n) { t[e] = [function (e, t) { t.exports = n }, {}] }; for (var u = 0; u < i.length; u++) try { c(i[u]) } catch (t) { a || (a = t) } if (i.length) { var d = c(i[i.length - 1]); e.exports = d } if (parcelRequire = c, a) throw a; return c }({ EgBh: [function (e, t, n) { var r = {}; r.useBlobBuilder = (function () { try { return new Blob([]), !1 } catch (r) { return !0 } }()), r.useArrayBufferView = !r.useBlobBuilder && (function () { try { return new Blob([new Uint8Array([])]).size === 0 } catch (r) { return !0 } }()), t.exports.binaryFeatures = r; var i = t.exports.BlobBuilder; function o () { this._pieces = [], this._parts = [] } typeof window !== 'undefined' && (i = t.exports.BlobBuilder = window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder), o.prototype.append = function (e) { typeof e === 'number' ? this._pieces.push(e) : (this.flush(), this._parts.push(e)) }, o.prototype.flush = function () { if (this._pieces.length > 0) { var e = new Uint8Array(this._pieces); r.useArrayBufferView || (e = e.buffer), this._parts.push(e), this._pieces = [] } }, o.prototype.getBuffer = function () { if (this.flush(), r.useBlobBuilder) { for (var e = new i(), t = 0, n = this._parts.length; t < n; t++)e.append(this._parts[t]); return e.getBlob() } return new Blob(this._parts) }, t.exports.BufferBuilder = o }, {}], kdPp: [function (e, t, n) { var r = e('./bufferbuilder').BufferBuilder; var i = e('./bufferbuilder').binaryFeatures; var o = { unpack: function (e) { return new a(e).unpack() }, pack: function (e) { var t = new s(); return t.pack(e), t.getBuffer() } }; function a (e) { this.index = 0, this.dataBuffer = e, this.dataView = new Uint8Array(this.dataBuffer), this.length = this.dataBuffer.byteLength } function s () { this.bufferBuilder = new r() } function c (e) { var t = e.charCodeAt(0); return t <= 2047 ? '00' : t <= 65535 ? '000' : t <= 2097151 ? '0000' : t <= 67108863 ? '00000' : '000000' } function u (e) { return e.length > 600 ? new Blob([e]).size : e.replace(/[^\u0000-\u007F]/g, c).length }t.exports = o, a.prototype.unpack = function () { var e; var t = this.unpack_uint8(); if (t < 128) return t; if ((224 ^ t) < 32) return (224 ^ t) - 32; if ((e = 160 ^ t) <= 15) return this.unpack_raw(e); if ((e = 176 ^ t) <= 15) return this.unpack_string(e); if ((e = 144 ^ t) <= 15) return this.unpack_array(e); if ((e = 128 ^ t) <= 15) return this.unpack_map(e); switch (t) { case 192:return null; case 193:return; case 194:return !1; case 195:return !0; case 202:return this.unpack_float(); case 203:return this.unpack_double(); case 204:return this.unpack_uint8(); case 205:return this.unpack_uint16(); case 206:return this.unpack_uint32(); case 207:return this.unpack_uint64(); case 208:return this.unpack_int8(); case 209:return this.unpack_int16(); case 210:return this.unpack_int32(); case 211:return this.unpack_int64(); case 212:case 213:case 214:case 215:return; case 216:return e = this.unpack_uint16(), this.unpack_string(e); case 217:return e = this.unpack_uint32(), this.unpack_string(e); case 218:return e = this.unpack_uint16(), this.unpack_raw(e); case 219:return e = this.unpack_uint32(), this.unpack_raw(e); case 220:return e = this.unpack_uint16(), this.unpack_array(e); case 221:return e = this.unpack_uint32(), this.unpack_array(e); case 222:return e = this.unpack_uint16(), this.unpack_map(e); case 223:return e = this.unpack_uint32(), this.unpack_map(e) } }, a.prototype.unpack_uint8 = function () { var e = 255 & this.dataView[this.index]; return this.index++, e }, a.prototype.unpack_uint16 = function () { var e = this.read(2); var t = 256 * (255 & e[0]) + (255 & e[1]); return this.index += 2, t }, a.prototype.unpack_uint32 = function () { var e = this.read(4); var t = 256 * (256 * (256 * e[0] + e[1]) + e[2]) + e[3]; return this.index += 4, t }, a.prototype.unpack_uint64 = function () { var e = this.read(8); var t = 256 * (256 * (256 * (256 * (256 * (256 * (256 * e[0] + e[1]) + e[2]) + e[3]) + e[4]) + e[5]) + e[6]) + e[7]; return this.index += 8, t }, a.prototype.unpack_int8 = function () { var e = this.unpack_uint8(); return e < 128 ? e : e - 256 }, a.prototype.unpack_int16 = function () { var e = this.unpack_uint16(); return e < 32768 ? e : e - 65536 }, a.prototype.unpack_int32 = function () { var e = this.unpack_uint32(); return e < Math.pow(2, 31) ? e : e - Math.pow(2, 32) }, a.prototype.unpack_int64 = function () { var e = this.unpack_uint64(); return e < Math.pow(2, 63) ? e : e - Math.pow(2, 64) }, a.prototype.unpack_raw = function (e) { if (this.length < this.index + e) throw new Error('BinaryPackFailure: index is out of range ' + this.index + ' ' + e + ' ' + this.length); var t = this.dataBuffer.slice(this.index, this.index + e); return this.index += e, t }, a.prototype.unpack_string = function (e) { for (var t, n, r = this.read(e), i = 0, o = ''; i < e;)(t = r[i]) < 128 ? (o += String.fromCharCode(t), i++) : (192 ^ t) < 32 ? (n = (192 ^ t) << 6 | 63 & r[i + 1], o += String.fromCharCode(n), i += 2) : (n = (15 & t) << 12 | (63 & r[i + 1]) << 6 | 63 & r[i + 2], o += String.fromCharCode(n), i += 3); return this.index += e, o }, a.prototype.unpack_array = function (e) { for (var t = new Array(e), n = 0; n < e; n++)t[n] = this.unpack(); return t }, a.prototype.unpack_map = function (e) { for (var t = {}, n = 0; n < e; n++) { var r = this.unpack(); var i = this.unpack(); t[r] = i } return t }, a.prototype.unpack_float = function () { var e = this.unpack_uint32(); var t = (e >> 23 & 255) - 127; return (e >> 31 === 0 ? 1 : -1) * (8388607 & e | 8388608) * Math.pow(2, t - 23) }, a.prototype.unpack_double = function () { var e = this.unpack_uint32(); var t = this.unpack_uint32(); var n = (e >> 20 & 2047) - 1023; return (e >> 31 === 0 ? 1 : -1) * ((1048575 & e | 1048576) * Math.pow(2, n - 20) + t * Math.pow(2, n - 52)) }, a.prototype.read = function (e) { var t = this.index; if (t + e <= this.length) return this.dataView.subarray(t, t + e); throw new Error('BinaryPackFailure: read index out of range') }, s.prototype.getBuffer = function () { return this.bufferBuilder.getBuffer() }, s.prototype.pack = function (e) { var t = typeof e; if (t === 'string') this.pack_string(e); else if (t === 'number')Math.floor(e) === e ? this.pack_integer(e) : this.pack_double(e); else if (t === 'boolean')!0 === e ? this.bufferBuilder.append(195) : !1 === e && this.bufferBuilder.append(194); else if (t === 'undefined') this.bufferBuilder.append(192); else { if (t !== 'object') throw new Error('Type "' + t + '" not yet supported'); if (e === null) this.bufferBuilder.append(192); else { var n = e.constructor; if (n == Array) this.pack_array(e); else if (n == Blob || n == File || e instanceof Blob || e instanceof File) this.pack_bin(e); else if (n == ArrayBuffer)i.useArrayBufferView ? this.pack_bin(new Uint8Array(e)) : this.pack_bin(e); else if ('BYTES_PER_ELEMENT' in e)i.useArrayBufferView ? this.pack_bin(new Uint8Array(e.buffer)) : this.pack_bin(e.buffer); else if (n == Object || n.toString().startsWith('class')) this.pack_object(e); else if (n == Date) this.pack_string(e.toString()); else { if (typeof e.toBinaryPack !== 'function') throw new Error('Type "' + n.toString() + '" not yet supported'); this.bufferBuilder.append(e.toBinaryPack()) } } } this.bufferBuilder.flush() }, s.prototype.pack_bin = function (e) { var t = e.length || e.byteLength || e.size; if (t <= 15) this.pack_uint8(160 + t); else if (t <= 65535) this.bufferBuilder.append(218), this.pack_uint16(t); else { if (!(t <= 4294967295)) throw new Error('Invalid length'); this.bufferBuilder.append(219), this.pack_uint32(t) } this.bufferBuilder.append(e) }, s.prototype.pack_string = function (e) { var t = u(e); if (t <= 15) this.pack_uint8(176 + t); else if (t <= 65535) this.bufferBuilder.append(216), this.pack_uint16(t); else { if (!(t <= 4294967295)) throw new Error('Invalid length'); this.bufferBuilder.append(217), this.pack_uint32(t) } this.bufferBuilder.append(e) }, s.prototype.pack_array = function (e) { var t = e.length; if (t <= 15) this.pack_uint8(144 + t); else if (t <= 65535) this.bufferBuilder.append(220), this.pack_uint16(t); else { if (!(t <= 4294967295)) throw new Error('Invalid length'); this.bufferBuilder.append(221), this.pack_uint32(t) } for (var n = 0; n < t; n++) this.pack(e[n]) }, s.prototype.pack_integer = function (e) { if (e >= -32 && e <= 127) this.bufferBuilder.append(255 & e); else if (e >= 0 && e <= 255) this.bufferBuilder.append(204), this.pack_uint8(e); else if (e >= -128 && e <= 127) this.bufferBuilder.append(208), this.pack_int8(e); else if (e >= 0 && e <= 65535) this.bufferBuilder.append(205), this.pack_uint16(e); else if (e >= -32768 && e <= 32767) this.bufferBuilder.append(209), this.pack_int16(e); else if (e >= 0 && e <= 4294967295) this.bufferBuilder.append(206), this.pack_uint32(e); else if (e >= -2147483648 && e <= 2147483647) this.bufferBuilder.append(210), this.pack_int32(e); else if (e >= -0x8000000000000000 && e <= 0x8000000000000000) this.bufferBuilder.append(211), this.pack_int64(e); else { if (!(e >= 0 && e <= 0x10000000000000000)) throw new Error('Invalid integer'); this.bufferBuilder.append(207), this.pack_uint64(e) } }, s.prototype.pack_double = function (e) { var t = 0; e < 0 && (t = 1, e = -e); var n = Math.floor(Math.log(e) / Math.LN2); var r = e / Math.pow(2, n) - 1; var i = Math.floor(r * Math.pow(2, 52)); var o = Math.pow(2, 32); var a = t << 31 | n + 1023 << 20 | i / o & 1048575; var s = i % o; this.bufferBuilder.append(203), this.pack_int32(a), this.pack_int32(s) }, s.prototype.pack_object = function (e) { var t = Object.keys(e).length; if (t <= 15) this.pack_uint8(128 + t); else if (t <= 65535) this.bufferBuilder.append(222), this.pack_uint16(t); else { if (!(t <= 4294967295)) throw new Error('Invalid length'); this.bufferBuilder.append(223), this.pack_uint32(t) } for (var n in e)e.hasOwnProperty(n) && (this.pack(n), this.pack(e[n])) }, s.prototype.pack_uint8 = function (e) { this.bufferBuilder.append(e) }, s.prototype.pack_uint16 = function (e) { this.bufferBuilder.append(e >> 8), this.bufferBuilder.append(255 & e) }, s.prototype.pack_uint32 = function (e) { var t = 4294967295 & e; this.bufferBuilder.append((4278190080 & t) >>> 24), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t) }, s.prototype.pack_uint64 = function (e) { var t = e / Math.pow(2, 32); var n = e % Math.pow(2, 32); this.bufferBuilder.append((4278190080 & t) >>> 24), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t), this.bufferBuilder.append((4278190080 & n) >>> 24), this.bufferBuilder.append((16711680 & n) >>> 16), this.bufferBuilder.append((65280 & n) >>> 8), this.bufferBuilder.append(255 & n) }, s.prototype.pack_int8 = function (e) { this.bufferBuilder.append(255 & e) }, s.prototype.pack_int16 = function (e) { this.bufferBuilder.append((65280 & e) >> 8), this.bufferBuilder.append(255 & e) }, s.prototype.pack_int32 = function (e) { this.bufferBuilder.append(e >>> 24 & 255), this.bufferBuilder.append((16711680 & e) >>> 16), this.bufferBuilder.append((65280 & e) >>> 8), this.bufferBuilder.append(255 & e) }, s.prototype.pack_int64 = function (e) { var t = Math.floor(e / Math.pow(2, 32)); var n = e % Math.pow(2, 32); this.bufferBuilder.append((4278190080 & t) >>> 24), this.bufferBuilder.append((16711680 & t) >>> 16), this.bufferBuilder.append((65280 & t) >>> 8), this.bufferBuilder.append(255 & t), this.bufferBuilder.append((4278190080 & n) >>> 24), this.bufferBuilder.append((16711680 & n) >>> 16), this.bufferBuilder.append((65280 & n) >>> 8), this.bufferBuilder.append(255 & n) } }, { './bufferbuilder': 'EgBh' }], iSxC: [function (e, t, n) { 'use strict'; function r (e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function i (e) { return (i = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) }Object.defineProperty(n, '__esModule', { value: !0 }), n.extractVersion = s, n.wrapPeerConnectionEvent = c, n.disableLog = u, n.disableWarnings = d, n.log = p, n.deprecated = l, n.detectBrowser = f, n.compactObject = v, n.walkStats = m, n.filterStats = y; var o = !0; var a = !0; function s (e, t, n) { var r = e.match(t); return r && r.length >= n && parseInt(r[n], 10) } function c (e, t, n) { if (e.RTCPeerConnection) { var r = e.RTCPeerConnection.prototype; var i = r.addEventListener; r.addEventListener = function (e, r) { if (e !== t) return i.apply(this, arguments); var o = function (e) { var t = n(e); t && r(t) }; return this._eventMap = this._eventMap || {}, this._eventMap[r] = o, i.apply(this, [e, o]) }; var o = r.removeEventListener; r.removeEventListener = function (e, n) { if (e !== t || !this._eventMap || !this._eventMap[n]) return o.apply(this, arguments); var r = this._eventMap[n]; return delete this._eventMap[n], o.apply(this, [e, r]) }, Object.defineProperty(r, 'on' + t, { get: function () { return this['_on' + t] }, set: function (e) { this['_on' + t] && (this.removeEventListener(t, this['_on' + t]), delete this['_on' + t]), e && this.addEventListener(t, this['_on' + t] = e) }, enumerable: !0, configurable: !0 }) } } function u (e) { return typeof e !== 'boolean' ? new Error('Argument type: ' + i(e) + '. Please use a boolean.') : (o = e, e ? 'adapter.js logging disabled' : 'adapter.js logging enabled') } function d (e) { return typeof e !== 'boolean' ? new Error('Argument type: ' + i(e) + '. Please use a boolean.') : (a = !e, 'adapter.js deprecation warnings ' + (e ? 'disabled' : 'enabled')) } function p () { if ((typeof window === 'undefined' ? 'undefined' : i(window)) === 'object') { if (o) return; typeof console !== 'undefined' && typeof console.log === 'function' && console.log.apply(console, arguments) } } function l (e, t) { a && console.warn(e + ' is deprecated, please use ' + t + ' instead.') } function f (e) { var { navigator: t } = e; var n = { browser: null, version: null }; if (void 0 === e || !e.navigator) return n.browser = 'Not a browser.', n; if (t.mozGetUserMedia)n.browser = 'firefox', n.version = s(t.userAgent, /Firefox\/(\d+)\./, 1); else if (t.webkitGetUserMedia || !1 === e.isSecureContext && e.webkitRTCPeerConnection && !e.RTCIceGatherer)n.browser = 'chrome', n.version = s(t.userAgent, /Chrom(e|ium)\/(\d+)\./, 2); else if (t.mediaDevices && t.userAgent.match(/Edge\/(\d+).(\d+)$/))n.browser = 'edge', n.version = s(t.userAgent, /Edge\/(\d+).(\d+)$/, 2); else { if (!e.RTCPeerConnection || !t.userAgent.match(/AppleWebKit\/(\d+)\./)) return n.browser = 'Not a supported browser.', n; n.browser = 'safari', n.version = s(t.userAgent, /AppleWebKit\/(\d+)\./, 1), n.supportsUnifiedPlan = e.RTCRtpTransceiver && 'currentDirection' in e.RTCRtpTransceiver.prototype } return n } function h (e) { return Object.prototype.toString.call(e) === '[object Object]' } function v (e) { return h(e) ? Object.keys(e).reduce(function (t, n) { var i = h(e[n]); var o = i ? v(e[n]) : e[n]; var a = i && !Object.keys(o).length; return void 0 === o || a ? t : Object.assign(t, r({}, n, o)) }, {}) : e } function m (e, t, n) { t && !n.has(t.id) && (n.set(t.id, t), Object.keys(t).forEach(function (r) { r.endsWith('Id') ? m(e, e.get(t[r]), n) : r.endsWith('Ids') && t[r].forEach(function (t) { m(e, e.get(t), n) }) })) } function y (e, t, n) { var r = n ? 'outbound-rtp' : 'inbound-rtp'; var i = new Map(); if (t === null) return i; var o = []; return e.forEach(function (e) { e.type === 'track' && e.trackIdentifier === t.id && o.push(e) }), o.forEach(function (t) { e.forEach(function (n) { n.type === r && n.trackId === t.id && m(e, n, i) }) }), i } }, {}], s6SN: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetUserMedia = c; var r = o(e('../utils.js')); function i () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return i = function () { return e }, e } function o (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = i(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var o in e) if (Object.prototype.hasOwnProperty.call(e, o)) { var a = r ? Object.getOwnPropertyDescriptor(e, o) : null; a && (a.get || a.set) ? Object.defineProperty(n, o, a) : n[o] = e[o] } return n.default = e, t && t.set(e, n), n } function a (e) { return (a = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } var s = r.log; function c (e) { var t = e && e.navigator; if (t.mediaDevices) { var n = r.detectBrowser(e); var i = function (e) { if (a(e) !== 'object' || e.mandatory || e.optional) return e; var t = {}; return Object.keys(e).forEach(function (n) { if (n !== 'require' && n !== 'advanced' && n !== 'mediaSource') { var r = a(e[n]) === 'object' ? e[n] : { ideal: e[n] }; void 0 !== r.exact && typeof r.exact === 'number' && (r.min = r.max = r.exact); var i = function (e, t) { return e ? e + t.charAt(0).toUpperCase() + t.slice(1) : t === 'deviceId' ? 'sourceId' : t }; if (void 0 !== r.ideal) { t.optional = t.optional || []; var o = {}; typeof r.ideal === 'number' ? (o[i('min', n)] = r.ideal, t.optional.push(o), (o = {})[i('max', n)] = r.ideal, t.optional.push(o)) : (o[i('', n)] = r.ideal, t.optional.push(o)) } void 0 !== r.exact && typeof r.exact !== 'number' ? (t.mandatory = t.mandatory || {}, t.mandatory[i('', n)] = r.exact) : ['min', 'max'].forEach(function (e) { void 0 !== r[e] && (t.mandatory = t.mandatory || {}, t.mandatory[i(e, n)] = r[e]) }) } }), e.advanced && (t.optional = (t.optional || []).concat(e.advanced)), t }; var o = function (e, r) { if (n.version >= 61) return r(e); if ((e = JSON.parse(JSON.stringify(e))) && a(e.audio) === 'object') { var o = function (e, t, n) { t in e && !(n in e) && (e[n] = e[t], delete e[t]) }; o((e = JSON.parse(JSON.stringify(e))).audio, 'autoGainControl', 'googAutoGainControl'), o(e.audio, 'noiseSuppression', 'googNoiseSuppression'), e.audio = i(e.audio) } if (e && a(e.video) === 'object') { var c = e.video.facingMode; c = c && (a(c) === 'object' ? c : { ideal: c }); var u; var d = n.version < 66; if (c && (c.exact === 'user' || c.exact === 'environment' || c.ideal === 'user' || c.ideal === 'environment') && (!t.mediaDevices.getSupportedConstraints || !t.mediaDevices.getSupportedConstraints().facingMode || d) && (delete e.video.facingMode, c.exact === 'environment' || c.ideal === 'environment' ? u = ['back', 'rear'] : c.exact !== 'user' && c.ideal !== 'user' || (u = ['front']), u)) return t.mediaDevices.enumerateDevices().then(function (t) { var n = (t = t.filter(function (e) { return e.kind === 'videoinput' })).find(function (e) { return u.some(function (t) { return e.label.toLowerCase().includes(t) }) }); return !n && t.length && u.includes('back') && (n = t[t.length - 1]), n && (e.video.deviceId = c.exact ? { exact: n.deviceId } : { ideal: n.deviceId }), e.video = i(e.video), s('chrome: ' + JSON.stringify(e)), r(e) }); e.video = i(e.video) } return s('chrome: ' + JSON.stringify(e)), r(e) }; var c = function (e) { return n.version >= 64 ? e : { name: { PermissionDeniedError: 'NotAllowedError', PermissionDismissedError: 'NotAllowedError', InvalidStateError: 'NotAllowedError', DevicesNotFoundError: 'NotFoundError', ConstraintNotSatisfiedError: 'OverconstrainedError', TrackStartError: 'NotReadableError', MediaDeviceFailedDueToShutdown: 'NotAllowedError', MediaDeviceKillSwitchOn: 'NotAllowedError', TabCaptureError: 'AbortError', ScreenCaptureError: 'AbortError', DeviceCaptureError: 'AbortError' }[e.name] || e.name, message: e.message, constraint: e.constraint || e.constraintName, toString: function () { return this.name + (this.message && ': ') + this.message } } }; if (t.getUserMedia = function (e, n, r) { o(e, function (e) { t.webkitGetUserMedia(e, n, function (e) { r && r(c(e)) }) }) }, t.mediaDevices.getUserMedia) { var u = t.mediaDevices.getUserMedia.bind(t.mediaDevices); t.mediaDevices.getUserMedia = function (e) { return o(e, function (e) { return u(e).then(function (t) { if (e.audio && !t.getAudioTracks().length || e.video && !t.getVideoTracks().length) throw t.getTracks().forEach(function (e) { e.stop() }), new DOMException('', 'NotFoundError'); return t }, function (e) { return Promise.reject(c(e)) }) }) } } } } }, { '../utils.js': 'iSxC' }], VHa8: [function (e, t, n) { 'use strict'; function r (e, t) { e.navigator.mediaDevices && 'getDisplayMedia' in e.navigator.mediaDevices || e.navigator.mediaDevices && (typeof t === 'function' ? e.navigator.mediaDevices.getDisplayMedia = function (n) { return t(n).then(function (t) { var r = n.video && n.video.width; var i = n.video && n.video.height; var o = n.video && n.video.frameRate; return n.video = { mandatory: { chromeMediaSource: 'desktop', chromeMediaSourceId: t, maxFrameRate: o || 3 } }, r && (n.video.mandatory.maxWidth = r), i && (n.video.mandatory.maxHeight = i), e.navigator.mediaDevices.getUserMedia(n) }) } : console.error('shimGetDisplayMedia: getSourceId argument is not a function')) }Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetDisplayMedia = r }, {}], uI5X: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimMediaStream = d, n.shimOnTrack = p, n.shimGetSendersWithDtmf = l, n.shimGetStats = f, n.shimSenderReceiverGetStats = h, n.shimAddTrackRemoveTrackWithNative = v, n.shimAddTrackRemoveTrack = m, n.shimPeerConnection = y, n.fixNegotiationNeeded = g, Object.defineProperty(n, 'shimGetUserMedia', { enumerable: !0, get: function () { return i.shimGetUserMedia } }), Object.defineProperty(n, 'shimGetDisplayMedia', { enumerable: !0, get: function () { return o.shimGetDisplayMedia } }); var r = s(e('../utils.js')); var i = e('./getusermedia'); var o = e('./getdisplaymedia'); function a () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return a = function () { return e }, e } function s (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = a(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var i in e) if (Object.prototype.hasOwnProperty.call(e, i)) { var o = r ? Object.getOwnPropertyDescriptor(e, i) : null; o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i] } return n.default = e, t && t.set(e, n), n } function c (e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function u (e) { return (u = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function d (e) { e.MediaStream = e.MediaStream || e.webkitMediaStream } function p (e) { if (u(e) !== 'object' || !e.RTCPeerConnection || 'ontrack' in e.RTCPeerConnection.prototype)r.wrapPeerConnectionEvent(e, 'track', function (e) { return e.transceiver || Object.defineProperty(e, 'transceiver', { value: { receiver: e.receiver } }), e }); else { Object.defineProperty(e.RTCPeerConnection.prototype, 'ontrack', { get: function () { return this._ontrack }, set: function (e) { this._ontrack && this.removeEventListener('track', this._ontrack), this.addEventListener('track', this._ontrack = e) }, enumerable: !0, configurable: !0 }); var t = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { var n = this; return this._ontrackpoly || (this._ontrackpoly = function (t) { t.stream.addEventListener('addtrack', function (r) { var i; i = e.RTCPeerConnection.prototype.getReceivers ? n.getReceivers().find(function (e) { return e.track && e.track.id === r.track.id }) : { track: r.track }; var o = new Event('track'); o.track = r.track, o.receiver = i, o.transceiver = { receiver: i }, o.streams = [t.stream], n.dispatchEvent(o) }), t.stream.getTracks().forEach(function (r) { var i; i = e.RTCPeerConnection.prototype.getReceivers ? n.getReceivers().find(function (e) { return e.track && e.track.id === r.id }) : { track: r }; var o = new Event('track'); o.track = r, o.receiver = i, o.transceiver = { receiver: i }, o.streams = [t.stream], n.dispatchEvent(o) }) }, this.addEventListener('addstream', this._ontrackpoly)), t.apply(this, arguments) } } } function l (e) { if (u(e) === 'object' && e.RTCPeerConnection && !('getSenders' in e.RTCPeerConnection.prototype) && 'createDTMFSender' in e.RTCPeerConnection.prototype) { var t = function (e, t) { return { track: t, get dtmf () { return void 0 === this._dtmf && (t.kind === 'audio' ? this._dtmf = e.createDTMFSender(t) : this._dtmf = null), this._dtmf }, _pc: e } }; if (!e.RTCPeerConnection.prototype.getSenders) { e.RTCPeerConnection.prototype.getSenders = function () { return this._senders = this._senders || [], this._senders.slice() }; var n = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addTrack = function (e, r) { var i = n.apply(this, arguments); return i || (i = t(this, e), this._senders.push(i)), i }; var r = e.RTCPeerConnection.prototype.removeTrack; e.RTCPeerConnection.prototype.removeTrack = function (e) { r.apply(this, arguments); var t = this._senders.indexOf(e); t !== -1 && this._senders.splice(t, 1) } } var i = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (e) { var n = this; this._senders = this._senders || [], i.apply(this, [e]), e.getTracks().forEach(function (e) { n._senders.push(t(n, e)) }) }; var o = e.RTCPeerConnection.prototype.removeStream; e.RTCPeerConnection.prototype.removeStream = function (e) { var t = this; this._senders = this._senders || [], o.apply(this, [e]), e.getTracks().forEach(function (e) { var n = t._senders.find(function (t) { return t.track === e }); n && t._senders.splice(t._senders.indexOf(n), 1) }) } } else if (u(e) === 'object' && e.RTCPeerConnection && 'getSenders' in e.RTCPeerConnection.prototype && 'createDTMFSender' in e.RTCPeerConnection.prototype && e.RTCRtpSender && !('dtmf' in e.RTCRtpSender.prototype)) { var a = e.RTCPeerConnection.prototype.getSenders; e.RTCPeerConnection.prototype.getSenders = function () { var e = this; var t = a.apply(this, []); return t.forEach(function (t) { return t._pc = e }), t }, Object.defineProperty(e.RTCRtpSender.prototype, 'dtmf', { get: function () { return void 0 === this._dtmf && (this.track.kind === 'audio' ? this._dtmf = this._pc.createDTMFSender(this.track) : this._dtmf = null), this._dtmf } }) } } function f (e) { if (e.RTCPeerConnection) { var t = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { var e = this; var [n, r, i] = arguments; if (arguments.length > 0 && typeof n === 'function') return t.apply(this, arguments); if (t.length === 0 && (arguments.length === 0 || typeof n !== 'function')) return t.apply(this, []); var o = function (e) { var t = {}; return e.result().forEach(function (e) { var n = { id: e.id, timestamp: e.timestamp, type: { localcandidate: 'local-candidate', remotecandidate: 'remote-candidate' }[e.type] || e.type }; e.names().forEach(function (t) { n[t] = e.stat(t) }), t[n.id] = n }), t }; var a = function (e) { return new Map(Object.keys(e).map(function (t) { return [t, e[t]] })) }; return arguments.length >= 2 ? t.apply(this, [function (e) { r(a(o(e))) }, n]) : new Promise(function (n, r) { t.apply(e, [function (e) { n(a(o(e))) }, r]) }).then(r, i) } } } function h (e) { if (u(e) === 'object' && e.RTCPeerConnection && e.RTCRtpSender && e.RTCRtpReceiver) { if (!('getStats' in e.RTCRtpSender.prototype)) { var t = e.RTCPeerConnection.prototype.getSenders; t && (e.RTCPeerConnection.prototype.getSenders = function () { var e = this; var n = t.apply(this, []); return n.forEach(function (t) { return t._pc = e }), n }); var n = e.RTCPeerConnection.prototype.addTrack; n && (e.RTCPeerConnection.prototype.addTrack = function () { var e = n.apply(this, arguments); return e._pc = this, e }), e.RTCRtpSender.prototype.getStats = function () { var e = this; return this._pc.getStats().then(function (t) { return r.filterStats(t, e.track, !0) }) } } if (!('getStats' in e.RTCRtpReceiver.prototype)) { var i = e.RTCPeerConnection.prototype.getReceivers; i && (e.RTCPeerConnection.prototype.getReceivers = function () { var e = this; var t = i.apply(this, []); return t.forEach(function (t) { return t._pc = e }), t }), r.wrapPeerConnectionEvent(e, 'track', function (e) { return e.receiver._pc = e.srcElement, e }), e.RTCRtpReceiver.prototype.getStats = function () { var e = this; return this._pc.getStats().then(function (t) { return r.filterStats(t, e.track, !1) }) } } if ('getStats' in e.RTCRtpSender.prototype && 'getStats' in e.RTCRtpReceiver.prototype) { var o = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { if (arguments.length > 0 && arguments[0] instanceof e.MediaStreamTrack) { var t; var n; var r; var i = arguments[0]; return this.getSenders().forEach(function (e) { e.track === i && (t ? r = !0 : t = e) }), this.getReceivers().forEach(function (e) { return e.track === i && (n ? r = !0 : n = e), e.track === i }), r || t && n ? Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError')) : t ? t.getStats() : n ? n.getStats() : Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError')) } return o.apply(this, arguments) } } } } function v (e) { e.RTCPeerConnection.prototype.getLocalStreams = function () { var e = this; return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, Object.keys(this._shimmedLocalStreams).map(function (t) { return e._shimmedLocalStreams[t][0] }) }; var t = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addTrack = function (e, n) { if (!n) return t.apply(this, arguments); this._shimmedLocalStreams = this._shimmedLocalStreams || {}; var r = t.apply(this, arguments); return this._shimmedLocalStreams[n.id] ? this._shimmedLocalStreams[n.id].indexOf(r) === -1 && this._shimmedLocalStreams[n.id].push(r) : this._shimmedLocalStreams[n.id] = [n, r], r }; var n = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (e) { var t = this; this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e.getTracks().forEach(function (e) { if (t.getSenders().find(function (t) { return t.track === e })) throw new DOMException('Track already exists.', 'InvalidAccessError') }); var r = this.getSenders(); n.apply(this, arguments); var i = this.getSenders().filter(function (e) { return r.indexOf(e) === -1 }); this._shimmedLocalStreams[e.id] = [e].concat(i) }; var r = e.RTCPeerConnection.prototype.removeStream; e.RTCPeerConnection.prototype.removeStream = function (e) { return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, delete this._shimmedLocalStreams[e.id], r.apply(this, arguments) }; var i = e.RTCPeerConnection.prototype.removeTrack; e.RTCPeerConnection.prototype.removeTrack = function (e) { var t = this; return this._shimmedLocalStreams = this._shimmedLocalStreams || {}, e && Object.keys(this._shimmedLocalStreams).forEach(function (n) { var r = t._shimmedLocalStreams[n].indexOf(e); r !== -1 && t._shimmedLocalStreams[n].splice(r, 1), t._shimmedLocalStreams[n].length === 1 && delete t._shimmedLocalStreams[n] }), i.apply(this, arguments) } } function m (e) { if (e.RTCPeerConnection) { var t = r.detectBrowser(e); if (e.RTCPeerConnection.prototype.addTrack && t.version >= 65) return v(e); var n = e.RTCPeerConnection.prototype.getLocalStreams; e.RTCPeerConnection.prototype.getLocalStreams = function () { var e = this; var t = n.apply(this); return this._reverseStreams = this._reverseStreams || {}, t.map(function (t) { return e._reverseStreams[t.id] }) }; var i = e.RTCPeerConnection.prototype.addStream; e.RTCPeerConnection.prototype.addStream = function (t) { var n = this; if (this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, t.getTracks().forEach(function (e) { if (n.getSenders().find(function (t) { return t.track === e })) throw new DOMException('Track already exists.', 'InvalidAccessError') }), !this._reverseStreams[t.id]) { var r = new e.MediaStream(t.getTracks()); this._streams[t.id] = r, this._reverseStreams[r.id] = t, t = r }i.apply(this, [t]) }; var o = e.RTCPeerConnection.prototype.removeStream; e.RTCPeerConnection.prototype.removeStream = function (e) { this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}, o.apply(this, [this._streams[e.id] || e]), delete this._reverseStreams[this._streams[e.id] ? this._streams[e.id].id : e.id], delete this._streams[e.id] }, e.RTCPeerConnection.prototype.addTrack = function (t, n) { var r = this; if (this.signalingState === 'closed') throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", 'InvalidStateError'); var i = [].slice.call(arguments, 1); if (i.length !== 1 || !i[0].getTracks().find(function (e) { return e === t })) throw new DOMException('The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.', 'NotSupportedError'); if (this.getSenders().find(function (e) { return e.track === t })) throw new DOMException('Track already exists.', 'InvalidAccessError'); this._streams = this._streams || {}, this._reverseStreams = this._reverseStreams || {}; var o = this._streams[n.id]; if (o)o.addTrack(t), Promise.resolve().then(function () { r.dispatchEvent(new Event('negotiationneeded')) }); else { var a = new e.MediaStream([t]); this._streams[n.id] = a, this._reverseStreams[a.id] = n, this.addStream(a) } return this.getSenders().find(function (e) { return e.track === t }) }, ['createOffer', 'createAnswer'].forEach(function (t) { var n = e.RTCPeerConnection.prototype[t]; var r = c({}, t, function () { var e = this; var t = arguments; return arguments.length && typeof arguments[0] === 'function' ? n.apply(this, [function (n) { var r = u(e, n); t[0].apply(null, [r]) }, function (e) { t[1] && t[1].apply(null, e) }, arguments[2]]) : n.apply(this, arguments).then(function (t) { return u(e, t) }) }); e.RTCPeerConnection.prototype[t] = r[t] }); var a = e.RTCPeerConnection.prototype.setLocalDescription; e.RTCPeerConnection.prototype.setLocalDescription = function () { return arguments.length && arguments[0].type ? (arguments[0] = (e = this, t = arguments[0], n = t.sdp, Object.keys(e._reverseStreams || []).forEach(function (t) { var r = e._reverseStreams[t]; var i = e._streams[r.id]; n = n.replace(new RegExp(r.id, 'g'), i.id) }), new RTCSessionDescription({ type: t.type, sdp: n })), a.apply(this, arguments)) : a.apply(this, arguments); var e, t, n }; var s = Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype, 'localDescription'); Object.defineProperty(e.RTCPeerConnection.prototype, 'localDescription', { get: function () { var e = s.get.apply(this); return e.type === '' ? e : u(this, e) } }), e.RTCPeerConnection.prototype.removeTrack = function (e) { var t; var n = this; if (this.signalingState === 'closed') throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", 'InvalidStateError'); if (!e._pc) throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.', 'TypeError'); if (e._pc !== this) throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError'); this._streams = this._streams || {}, Object.keys(this._streams).forEach(function (r) { n._streams[r].getTracks().find(function (t) { return e.track === t }) && (t = n._streams[r]) }), t && (t.getTracks().length === 1 ? this.removeStream(this._reverseStreams[t.id]) : t.removeTrack(e.track), this.dispatchEvent(new Event('negotiationneeded'))) } } function u (e, t) { var n = t.sdp; return Object.keys(e._reverseStreams || []).forEach(function (t) { var r = e._reverseStreams[t]; var i = e._streams[r.id]; n = n.replace(new RegExp(i.id, 'g'), r.id) }), new RTCSessionDescription({ type: t.type, sdp: n }) } } function y (e) { var t = r.detectBrowser(e); if (!e.RTCPeerConnection && e.webkitRTCPeerConnection && (e.RTCPeerConnection = e.webkitRTCPeerConnection), e.RTCPeerConnection) { t.version < 53 && ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (t) { var n = e.RTCPeerConnection.prototype[t]; var r = c({}, t, function () { return arguments[0] = new (t === 'addIceCandidate' ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]), n.apply(this, arguments) }); e.RTCPeerConnection.prototype[t] = r[t] }); var n = e.RTCPeerConnection.prototype.addIceCandidate; e.RTCPeerConnection.prototype.addIceCandidate = function () { return arguments[0] ? t.version < 78 && arguments[0] && arguments[0].candidate === '' ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve()) } } } function g (e) { r.wrapPeerConnectionEvent(e, 'negotiationneeded', function (e) { if (e.target.signalingState === 'stable') return e }) } }, { '../utils.js': 'iSxC', './getusermedia': 's6SN', './getdisplaymedia': 'VHa8' }], NZ1C: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.filterIceServers = a; var r = o(e('../utils')); function i () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return i = function () { return e }, e } function o (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = i(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var o in e) if (Object.prototype.hasOwnProperty.call(e, o)) { var a = r ? Object.getOwnPropertyDescriptor(e, o) : null; a && (a.get || a.set) ? Object.defineProperty(n, o, a) : n[o] = e[o] } return n.default = e, t && t.set(e, n), n } function a (e, t) { var n = !1; return (e = JSON.parse(JSON.stringify(e))).filter(function (e) { if (e && (e.urls || e.url)) { var t = e.urls || e.url; e.url && !e.urls && r.deprecated('RTCIceServer.url', 'RTCIceServer.urls'); var i = typeof t === 'string'; return i && (t = [t]), t = t.filter(function (e) { if (e.indexOf('stun:') === 0) return !1; var t = e.startsWith('turn') && !e.startsWith('turn:[') && e.includes('transport=udp'); return t && !n ? (n = !0, !0) : t && !n }), delete e.url, e.urls = i ? t[0] : t, !!t.length } }) } }, { '../utils': 'iSxC' }], YHvh: [function (e, t, n) { 'use strict'; var r = { generateIdentifier: function () { return Math.random().toString(36).substr(2, 10) } }; r.localCName = r.generateIdentifier(), r.splitLines = function (e) { return e.trim().split('\n').map(function (e) { return e.trim() }) }, r.splitSections = function (e) { return e.split('\nm=').map(function (e, t) { return (t > 0 ? 'm=' + e : e).trim() + '\r\n' }) }, r.getDescription = function (e) { var t = r.splitSections(e); return t && t[0] }, r.getMediaSections = function (e) { var t = r.splitSections(e); return t.shift(), t }, r.matchPrefix = function (e, t) { return r.splitLines(e).filter(function (e) { return e.indexOf(t) === 0 }) }, r.parseCandidate = function (e) { for (var t, n = { foundation: (t = e.indexOf('a=candidate:') === 0 ? e.substring(12).split(' ') : e.substring(10).split(' '))[0], component: parseInt(t[1], 10), protocol: t[2].toLowerCase(), priority: parseInt(t[3], 10), ip: t[4], address: t[4], port: parseInt(t[5], 10), type: t[7] }, r = 8; r < t.length; r += 2) switch (t[r]) { case 'raddr':n.relatedAddress = t[r + 1]; break; case 'rport':n.relatedPort = parseInt(t[r + 1], 10); break; case 'tcptype':n.tcpType = t[r + 1]; break; case 'ufrag':n.ufrag = t[r + 1], n.usernameFragment = t[r + 1]; break; default:n[t[r]] = t[r + 1] } return n }, r.writeCandidate = function (e) { var t = []; t.push(e.foundation), t.push(e.component), t.push(e.protocol.toUpperCase()), t.push(e.priority), t.push(e.address || e.ip), t.push(e.port); var n = e.type; return t.push('typ'), t.push(n), n !== 'host' && e.relatedAddress && e.relatedPort && (t.push('raddr'), t.push(e.relatedAddress), t.push('rport'), t.push(e.relatedPort)), e.tcpType && e.protocol.toLowerCase() === 'tcp' && (t.push('tcptype'), t.push(e.tcpType)), (e.usernameFragment || e.ufrag) && (t.push('ufrag'), t.push(e.usernameFragment || e.ufrag)), 'candidate:' + t.join(' ') }, r.parseIceOptions = function (e) { return e.substr(14).split(' ') }, r.parseRtpMap = function (e) { var t = e.substr(9).split(' '); var n = { payloadType: parseInt(t.shift(), 10) }; return t = t[0].split('/'), n.name = t[0], n.clockRate = parseInt(t[1], 10), n.channels = t.length === 3 ? parseInt(t[2], 10) : 1, n.numChannels = n.channels, n }, r.writeRtpMap = function (e) { var t = e.payloadType; void 0 !== e.preferredPayloadType && (t = e.preferredPayloadType); var n = e.channels || e.numChannels || 1; return 'a=rtpmap:' + t + ' ' + e.name + '/' + e.clockRate + (n !== 1 ? '/' + n : '') + '\r\n' }, r.parseExtmap = function (e) { var t = e.substr(9).split(' '); return { id: parseInt(t[0], 10), direction: t[0].indexOf('/') > 0 ? t[0].split('/')[1] : 'sendrecv', uri: t[1] } }, r.writeExtmap = function (e) { return 'a=extmap:' + (e.id || e.preferredId) + (e.direction && e.direction !== 'sendrecv' ? '/' + e.direction : '') + ' ' + e.uri + '\r\n' }, r.parseFmtp = function (e) { for (var t, n = {}, r = e.substr(e.indexOf(' ') + 1).split(';'), i = 0; i < r.length; i++)n[(t = r[i].trim().split('='))[0].trim()] = t[1]; return n }, r.writeFmtp = function (e) { var t = ''; var n = e.payloadType; if (void 0 !== e.preferredPayloadType && (n = e.preferredPayloadType), e.parameters && Object.keys(e.parameters).length) { var r = []; Object.keys(e.parameters).forEach(function (t) { e.parameters[t] ? r.push(t + '=' + e.parameters[t]) : r.push(t) }), t += 'a=fmtp:' + n + ' ' + r.join(';') + '\r\n' } return t }, r.parseRtcpFb = function (e) { var t = e.substr(e.indexOf(' ') + 1).split(' '); return { type: t.shift(), parameter: t.join(' ') } }, r.writeRtcpFb = function (e) { var t = ''; var n = e.payloadType; return void 0 !== e.preferredPayloadType && (n = e.preferredPayloadType), e.rtcpFeedback && e.rtcpFeedback.length && e.rtcpFeedback.forEach(function (e) { t += 'a=rtcp-fb:' + n + ' ' + e.type + (e.parameter && e.parameter.length ? ' ' + e.parameter : '') + '\r\n' }), t }, r.parseSsrcMedia = function (e) { var t = e.indexOf(' '); var n = { ssrc: parseInt(e.substr(7, t - 7), 10) }; var r = e.indexOf(':', t); return r > -1 ? (n.attribute = e.substr(t + 1, r - t - 1), n.value = e.substr(r + 1)) : n.attribute = e.substr(t + 1), n }, r.parseSsrcGroup = function (e) { var t = e.substr(13).split(' '); return { semantics: t.shift(), ssrcs: t.map(function (e) { return parseInt(e, 10) }) } }, r.getMid = function (e) { var t = r.matchPrefix(e, 'a=mid:')[0]; if (t) return t.substr(6) }, r.parseFingerprint = function (e) { var t = e.substr(14).split(' '); return { algorithm: t[0].toLowerCase(), value: t[1] } }, r.getDtlsParameters = function (e, t) { return { role: 'auto', fingerprints: r.matchPrefix(e + t, 'a=fingerprint:').map(r.parseFingerprint) } }, r.writeDtlsParameters = function (e, t) { var n = 'a=setup:' + t + '\r\n'; return e.fingerprints.forEach(function (e) { n += 'a=fingerprint:' + e.algorithm + ' ' + e.value + '\r\n' }), n }, r.getIceParameters = function (e, t) { var n = r.splitLines(e); return { usernameFragment: (n = n.concat(r.splitLines(t))).filter(function (e) { return e.indexOf('a=ice-ufrag:') === 0 })[0].substr(12), password: n.filter(function (e) { return e.indexOf('a=ice-pwd:') === 0 })[0].substr(10) } }, r.writeIceParameters = function (e) { return 'a=ice-ufrag:' + e.usernameFragment + '\r\na=ice-pwd:' + e.password + '\r\n' }, r.parseRtpParameters = function (e) { for (var t = { codecs: [], headerExtensions: [], fecMechanisms: [], rtcp: [] }, n = r.splitLines(e)[0].split(' '), i = 3; i < n.length; i++) { var o = n[i]; var a = r.matchPrefix(e, 'a=rtpmap:' + o + ' ')[0]; if (a) { var s = r.parseRtpMap(a); var c = r.matchPrefix(e, 'a=fmtp:' + o + ' '); switch (s.parameters = c.length ? r.parseFmtp(c[0]) : {}, s.rtcpFeedback = r.matchPrefix(e, 'a=rtcp-fb:' + o + ' ').map(r.parseRtcpFb), t.codecs.push(s), s.name.toUpperCase()) { case 'RED':case 'ULPFEC':t.fecMechanisms.push(s.name.toUpperCase()) } } } return r.matchPrefix(e, 'a=extmap:').forEach(function (e) { t.headerExtensions.push(r.parseExtmap(e)) }), t }, r.writeRtpDescription = function (e, t) { var n = ''; n += 'm=' + e + ' ', n += t.codecs.length > 0 ? '9' : '0', n += ' UDP/TLS/RTP/SAVPF ', n += t.codecs.map(function (e) { return void 0 !== e.preferredPayloadType ? e.preferredPayloadType : e.payloadType }).join(' ') + '\r\n', n += 'c=IN IP4 0.0.0.0\r\n', n += 'a=rtcp:9 IN IP4 0.0.0.0\r\n', t.codecs.forEach(function (e) { n += r.writeRtpMap(e), n += r.writeFmtp(e), n += r.writeRtcpFb(e) }); var i = 0; return t.codecs.forEach(function (e) { e.maxptime > i && (i = e.maxptime) }), i > 0 && (n += 'a=maxptime:' + i + '\r\n'), n += 'a=rtcp-mux\r\n', t.headerExtensions && t.headerExtensions.forEach(function (e) { n += r.writeExtmap(e) }), n }, r.parseRtpEncodingParameters = function (e) { var t; var n = []; var i = r.parseRtpParameters(e); var o = i.fecMechanisms.indexOf('RED') !== -1; var a = i.fecMechanisms.indexOf('ULPFEC') !== -1; var s = r.matchPrefix(e, 'a=ssrc:').map(function (e) { return r.parseSsrcMedia(e) }).filter(function (e) { return e.attribute === 'cname' }); var c = s.length > 0 && s[0].ssrc; var u = r.matchPrefix(e, 'a=ssrc-group:FID').map(function (e) { return e.substr(17).split(' ').map(function (e) { return parseInt(e, 10) }) }); u.length > 0 && u[0].length > 1 && u[0][0] === c && (t = u[0][1]), i.codecs.forEach(function (e) { if (e.name.toUpperCase() === 'RTX' && e.parameters.apt) { var r = { ssrc: c, codecPayloadType: parseInt(e.parameters.apt, 10) }; c && t && (r.rtx = { ssrc: t }), n.push(r), o && ((r = JSON.parse(JSON.stringify(r))).fec = { ssrc: c, mechanism: a ? 'red+ulpfec' : 'red' }, n.push(r)) } }), n.length === 0 && c && n.push({ ssrc: c }); var d = r.matchPrefix(e, 'b='); return d.length && (d = d[0].indexOf('b=TIAS:') === 0 ? parseInt(d[0].substr(7), 10) : d[0].indexOf('b=AS:') === 0 ? 1e3 * parseInt(d[0].substr(5), 10) * 0.95 - 16e3 : void 0, n.forEach(function (e) { e.maxBitrate = d })), n }, r.parseRtcpParameters = function (e) { var t = {}; var n = r.matchPrefix(e, 'a=ssrc:').map(function (e) { return r.parseSsrcMedia(e) }).filter(function (e) { return e.attribute === 'cname' })[0]; n && (t.cname = n.value, t.ssrc = n.ssrc); var i = r.matchPrefix(e, 'a=rtcp-rsize'); t.reducedSize = i.length > 0, t.compound = i.length === 0; var o = r.matchPrefix(e, 'a=rtcp-mux'); return t.mux = o.length > 0, t }, r.parseMsid = function (e) { var t; var n = r.matchPrefix(e, 'a=msid:'); if (n.length === 1) return { stream: (t = n[0].substr(7).split(' '))[0], track: t[1] }; var i = r.matchPrefix(e, 'a=ssrc:').map(function (e) { return r.parseSsrcMedia(e) }).filter(function (e) { return e.attribute === 'msid' }); return i.length > 0 ? { stream: (t = i[0].value.split(' '))[0], track: t[1] } : void 0 }, r.parseSctpDescription = function (e) { var t; var n = r.parseMLine(e); var i = r.matchPrefix(e, 'a=max-message-size:'); i.length > 0 && (t = parseInt(i[0].substr(19), 10)), isNaN(t) && (t = 65536); var o = r.matchPrefix(e, 'a=sctp-port:'); if (o.length > 0) return { port: parseInt(o[0].substr(12), 10), protocol: n.fmt, maxMessageSize: t }; if (r.matchPrefix(e, 'a=sctpmap:').length > 0) { var a = r.matchPrefix(e, 'a=sctpmap:')[0].substr(10).split(' '); return { port: parseInt(a[0], 10), protocol: a[1], maxMessageSize: t } } }, r.writeSctpDescription = function (e, t) { var n = []; return n = e.protocol !== 'DTLS/SCTP' ? ['m=' + e.kind + ' 9 ' + e.protocol + ' ' + t.protocol + '\r\n', 'c=IN IP4 0.0.0.0\r\n', 'a=sctp-port:' + t.port + '\r\n'] : ['m=' + e.kind + ' 9 ' + e.protocol + ' ' + t.port + '\r\n', 'c=IN IP4 0.0.0.0\r\n', 'a=sctpmap:' + t.port + ' ' + t.protocol + ' 65535\r\n'], void 0 !== t.maxMessageSize && n.push('a=max-message-size:' + t.maxMessageSize + '\r\n'), n.join('') }, r.generateSessionId = function () { return Math.random().toString().substr(2, 21) }, r.writeSessionBoilerplate = function (e, t, n) { var i = void 0 !== t ? t : 2; return 'v=0\r\no=' + (n || 'thisisadapterortc') + ' ' + (e || r.generateSessionId()) + ' ' + i + ' IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n' }, r.writeMediaSection = function (e, t, n, i) { var o = r.writeRtpDescription(e.kind, t); if (o += r.writeIceParameters(e.iceGatherer.getLocalParameters()), o += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), n === 'offer' ? 'actpass' : 'active'), o += 'a=mid:' + e.mid + '\r\n', e.direction ? o += 'a=' + e.direction + '\r\n' : e.rtpSender && e.rtpReceiver ? o += 'a=sendrecv\r\n' : e.rtpSender ? o += 'a=sendonly\r\n' : e.rtpReceiver ? o += 'a=recvonly\r\n' : o += 'a=inactive\r\n', e.rtpSender) { var a = 'msid:' + i.id + ' ' + e.rtpSender.track.id + '\r\n'; o += 'a=' + a, o += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' ' + a, e.sendEncodingParameters[0].rtx && (o += 'a=ssrc:' + e.sendEncodingParameters[0].rtx.ssrc + ' ' + a, o += 'a=ssrc-group:FID ' + e.sendEncodingParameters[0].ssrc + ' ' + e.sendEncodingParameters[0].rtx.ssrc + '\r\n') } return o += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' cname:' + r.localCName + '\r\n', e.rtpSender && e.sendEncodingParameters[0].rtx && (o += 'a=ssrc:' + e.sendEncodingParameters[0].rtx.ssrc + ' cname:' + r.localCName + '\r\n'), o }, r.getDirection = function (e, t) { for (var n = r.splitLines(e), i = 0; i < n.length; i++) switch (n[i]) { case 'a=sendrecv':case 'a=sendonly':case 'a=recvonly':case 'a=inactive':return n[i].substr(2) } return t ? r.getDirection(t) : 'sendrecv' }, r.getKind = function (e) { return r.splitLines(e)[0].split(' ')[0].substr(2) }, r.isRejected = function (e) { return e.split(' ', 2)[1] === '0' }, r.parseMLine = function (e) { var t = r.splitLines(e)[0].substr(2).split(' '); return { kind: t[0], port: parseInt(t[1], 10), protocol: t[2], fmt: t.slice(3).join(' ') } }, r.parseOLine = function (e) { var t = r.matchPrefix(e, 'o=')[0].substr(2).split(' '); return { username: t[0], sessionId: t[1], sessionVersion: parseInt(t[2], 10), netType: t[3], addressType: t[4], address: t[5] } }, r.isValidSDP = function (e) { if (typeof e !== 'string' || e.length === 0) return !1; for (var t = r.splitLines(e), n = 0; n < t.length; n++) if (t[n].length < 2 || t[n].charAt(1) !== '=') return !1; return !0 }, typeof t === 'object' && (t.exports = r) }, {}], NJ2u: [function (e, t, n) { 'use strict'; var r = e('sdp'); function i (e) { return { inboundrtp: 'inbound-rtp', outboundrtp: 'outbound-rtp', candidatepair: 'candidate-pair', localcandidate: 'local-candidate', remotecandidate: 'remote-candidate' }[e.type] || e.type } function o (e, t, n, i, o) { var a = r.writeRtpDescription(e.kind, t); if (a += r.writeIceParameters(e.iceGatherer.getLocalParameters()), a += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), n === 'offer' ? 'actpass' : o || 'active'), a += 'a=mid:' + e.mid + '\r\n', e.rtpSender && e.rtpReceiver ? a += 'a=sendrecv\r\n' : e.rtpSender ? a += 'a=sendonly\r\n' : e.rtpReceiver ? a += 'a=recvonly\r\n' : a += 'a=inactive\r\n', e.rtpSender) { var s = e.rtpSender._initialTrackId || e.rtpSender.track.id; e.rtpSender._initialTrackId = s; var c = 'msid:' + (i ? i.id : '-') + ' ' + s + '\r\n'; a += 'a=' + c, a += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' ' + c, e.sendEncodingParameters[0].rtx && (a += 'a=ssrc:' + e.sendEncodingParameters[0].rtx.ssrc + ' ' + c, a += 'a=ssrc-group:FID ' + e.sendEncodingParameters[0].ssrc + ' ' + e.sendEncodingParameters[0].rtx.ssrc + '\r\n') } return a += 'a=ssrc:' + e.sendEncodingParameters[0].ssrc + ' cname:' + r.localCName + '\r\n', e.rtpSender && e.sendEncodingParameters[0].rtx && (a += 'a=ssrc:' + e.sendEncodingParameters[0].rtx.ssrc + ' cname:' + r.localCName + '\r\n'), a } function a (e, t) { var n = !1; return (e = JSON.parse(JSON.stringify(e))).filter(function (e) { if (e && (e.urls || e.url)) { var r = e.urls || e.url; e.url && !e.urls && console.warn('RTCIceServer.url is deprecated! Use urls instead.'); var i = typeof r === 'string'; return i && (r = [r]), r = r.filter(function (e) { return e.indexOf('turn:') !== 0 || e.indexOf('transport=udp') === -1 || e.indexOf('turn:[') !== -1 || n ? e.indexOf('stun:') === 0 && t >= 14393 && e.indexOf('?transport=udp') === -1 : (n = !0, !0) }), delete e.url, e.urls = i ? r[0] : r, !!r.length } }) } function s (e, t) { var n = { codecs: [], headerExtensions: [], fecMechanisms: [] }; var r = function (e, t) { e = parseInt(e, 10); for (var n = 0; n < t.length; n++) if (t[n].payloadType === e || t[n].preferredPayloadType === e) return t[n] }; var i = function (e, t, n, i) { var o = r(e.parameters.apt, n); var a = r(t.parameters.apt, i); return o && a && o.name.toLowerCase() === a.name.toLowerCase() }; return e.codecs.forEach(function (r) { for (var o = 0; o < t.codecs.length; o++) { var a = t.codecs[o]; if (r.name.toLowerCase() === a.name.toLowerCase() && r.clockRate === a.clockRate) { if (r.name.toLowerCase() === 'rtx' && r.parameters && a.parameters.apt && !i(r, a, e.codecs, t.codecs)) continue; (a = JSON.parse(JSON.stringify(a))).numChannels = Math.min(r.numChannels, a.numChannels), n.codecs.push(a), a.rtcpFeedback = a.rtcpFeedback.filter(function (e) { for (var t = 0; t < r.rtcpFeedback.length; t++) if (r.rtcpFeedback[t].type === e.type && r.rtcpFeedback[t].parameter === e.parameter) return !0; return !1 }); break } } }), e.headerExtensions.forEach(function (e) { for (var r = 0; r < t.headerExtensions.length; r++) { var i = t.headerExtensions[r]; if (e.uri === i.uri) { n.headerExtensions.push(i); break } } }), n } function c (e, t, n) { return { offer: { setLocalDescription: ['stable', 'have-local-offer'], setRemoteDescription: ['stable', 'have-remote-offer'] }, answer: { setLocalDescription: ['have-remote-offer', 'have-local-pranswer'], setRemoteDescription: ['have-local-offer', 'have-remote-pranswer'] } }[t][e].indexOf(n) !== -1 } function u (e, t) { var n = e.getRemoteCandidates().find(function (e) { return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type }); return n || e.addRemoteCandidate(t), !n } function d (e, t) { var n = new Error(t); return n.name = e, n.code = { NotSupportedError: 9, InvalidStateError: 11, InvalidAccessError: 15, TypeError: void 0, OperationError: void 0 }[e], n }t.exports = function (e, t) { function n (t, n) { n.addTrack(t), n.dispatchEvent(new e.MediaStreamTrackEvent('addtrack', { track: t })) } function p (t, n, r, i) { var o = new Event('track'); o.track = n, o.receiver = r, o.transceiver = { receiver: r }, o.streams = i, e.setTimeout(function () { t._dispatchEvent('track', o) }) } var l = function (n) { var i = this; var o = document.createDocumentFragment(); if (['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (e) { i[e] = o[e].bind(o) }), this.canTrickleIceCandidates = null, this.needNegotiation = !1, this.localStreams = [], this.remoteStreams = [], this._localDescription = null, this._remoteDescription = null, this.signalingState = 'stable', this.iceConnectionState = 'new', this.connectionState = 'new', this.iceGatheringState = 'new', n = JSON.parse(JSON.stringify(n || {})), this.usingBundle = n.bundlePolicy === 'max-bundle', n.rtcpMuxPolicy === 'negotiate') throw d('NotSupportedError', "rtcpMuxPolicy 'negotiate' is not supported"); switch (n.rtcpMuxPolicy || (n.rtcpMuxPolicy = 'require'), n.iceTransportPolicy) { case 'all':case 'relay':break; default:n.iceTransportPolicy = 'all' } switch (n.bundlePolicy) { case 'balanced':case 'max-compat':case 'max-bundle':break; default:n.bundlePolicy = 'balanced' } if (n.iceServers = a(n.iceServers || [], t), this._iceGatherers = [], n.iceCandidatePoolSize) for (var s = n.iceCandidatePoolSize; s > 0; s--) this._iceGatherers.push(new e.RTCIceGatherer({ iceServers: n.iceServers, gatherPolicy: n.iceTransportPolicy })); else n.iceCandidatePoolSize = 0; this._config = n, this.transceivers = [], this._sdpSessionId = r.generateSessionId(), this._sdpSessionVersion = 0, this._dtlsRole = void 0, this._isClosed = !1 }; Object.defineProperty(l.prototype, 'localDescription', { configurable: !0, get: function () { return this._localDescription } }), Object.defineProperty(l.prototype, 'remoteDescription', { configurable: !0, get: function () { return this._remoteDescription } }), l.prototype.onicecandidate = null, l.prototype.onaddstream = null, l.prototype.ontrack = null, l.prototype.onremovestream = null, l.prototype.onsignalingstatechange = null, l.prototype.oniceconnectionstatechange = null, l.prototype.onconnectionstatechange = null, l.prototype.onicegatheringstatechange = null, l.prototype.onnegotiationneeded = null, l.prototype.ondatachannel = null, l.prototype._dispatchEvent = function (e, t) { this._isClosed || (this.dispatchEvent(t), typeof this['on' + e] === 'function' && this['on' + e](t)) }, l.prototype._emitGatheringStateChange = function () { var e = new Event('icegatheringstatechange'); this._dispatchEvent('icegatheringstatechange', e) }, l.prototype.getConfiguration = function () { return this._config }, l.prototype.getLocalStreams = function () { return this.localStreams }, l.prototype.getRemoteStreams = function () { return this.remoteStreams }, l.prototype._createTransceiver = function (e, t) { var n = this.transceivers.length > 0; var r = { track: null, iceGatherer: null, iceTransport: null, dtlsTransport: null, localCapabilities: null, remoteCapabilities: null, rtpSender: null, rtpReceiver: null, kind: e, mid: null, sendEncodingParameters: null, recvEncodingParameters: null, stream: null, associatedRemoteMediaStreams: [], wantReceive: !0 }; if (this.usingBundle && n)r.iceTransport = this.transceivers[0].iceTransport, r.dtlsTransport = this.transceivers[0].dtlsTransport; else { var i = this._createIceAndDtlsTransports(); r.iceTransport = i.iceTransport, r.dtlsTransport = i.dtlsTransport } return t || this.transceivers.push(r), r }, l.prototype.addTrack = function (t, n) { if (this._isClosed) throw d('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.'); var r; if (this.transceivers.find(function (e) { return e.track === t })) throw d('InvalidAccessError', 'Track already exists.'); for (var i = 0; i < this.transceivers.length; i++) this.transceivers[i].track || this.transceivers[i].kind !== t.kind || (r = this.transceivers[i]); return r || (r = this._createTransceiver(t.kind)), this._maybeFireNegotiationNeeded(), this.localStreams.indexOf(n) === -1 && this.localStreams.push(n), r.track = t, r.stream = n, r.rtpSender = new e.RTCRtpSender(t, r.dtlsTransport), r.rtpSender }, l.prototype.addStream = function (e) { var n = this; if (t >= 15025)e.getTracks().forEach(function (t) { n.addTrack(t, e) }); else { var r = e.clone(); e.getTracks().forEach(function (e, t) { var n = r.getTracks()[t]; e.addEventListener('enabled', function (e) { n.enabled = e.enabled }) }), r.getTracks().forEach(function (e) { n.addTrack(e, r) }) } }, l.prototype.removeTrack = function (t) { if (this._isClosed) throw d('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.'); if (!(t instanceof e.RTCRtpSender)) throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.'); var n = this.transceivers.find(function (e) { return e.rtpSender === t }); if (!n) throw d('InvalidAccessError', 'Sender was not created by this connection.'); var r = n.stream; n.rtpSender.stop(), n.rtpSender = null, n.track = null, n.stream = null, this.transceivers.map(function (e) { return e.stream }).indexOf(r) === -1 && this.localStreams.indexOf(r) > -1 && this.localStreams.splice(this.localStreams.indexOf(r), 1), this._maybeFireNegotiationNeeded() }, l.prototype.removeStream = function (e) { var t = this; e.getTracks().forEach(function (e) { var n = t.getSenders().find(function (t) { return t.track === e }); n && t.removeTrack(n) }) }, l.prototype.getSenders = function () { return this.transceivers.filter(function (e) { return !!e.rtpSender }).map(function (e) { return e.rtpSender }) }, l.prototype.getReceivers = function () { return this.transceivers.filter(function (e) { return !!e.rtpReceiver }).map(function (e) { return e.rtpReceiver }) }, l.prototype._createIceGatherer = function (t, n) { var r = this; if (n && t > 0) return this.transceivers[0].iceGatherer; if (this._iceGatherers.length) return this._iceGatherers.shift(); var i = new e.RTCIceGatherer({ iceServers: this._config.iceServers, gatherPolicy: this._config.iceTransportPolicy }); return Object.defineProperty(i, 'state', { value: 'new', writable: !0 }), this.transceivers[t].bufferedCandidateEvents = [], this.transceivers[t].bufferCandidates = function (e) { var n = !e.candidate || Object.keys(e.candidate).length === 0; i.state = n ? 'completed' : 'gathering', r.transceivers[t].bufferedCandidateEvents !== null && r.transceivers[t].bufferedCandidateEvents.push(e) }, i.addEventListener('localcandidate', this.transceivers[t].bufferCandidates), i }, l.prototype._gather = function (t, n) { var i = this; var o = this.transceivers[n].iceGatherer; if (!o.onlocalcandidate) { var a = this.transceivers[n].bufferedCandidateEvents; this.transceivers[n].bufferedCandidateEvents = null, o.removeEventListener('localcandidate', this.transceivers[n].bufferCandidates), o.onlocalcandidate = function (e) { if (!(i.usingBundle && n > 0)) { var a = new Event('icecandidate'); a.candidate = { sdpMid: t, sdpMLineIndex: n }; var s = e.candidate; var c = !s || Object.keys(s).length === 0; if (c)o.state !== 'new' && o.state !== 'gathering' || (o.state = 'completed'); else { o.state === 'new' && (o.state = 'gathering'), s.component = 1, s.ufrag = o.getLocalParameters().usernameFragment; var u = r.writeCandidate(s); a.candidate = Object.assign(a.candidate, r.parseCandidate(u)), a.candidate.candidate = u, a.candidate.toJSON = function () { return { candidate: a.candidate.candidate, sdpMid: a.candidate.sdpMid, sdpMLineIndex: a.candidate.sdpMLineIndex, usernameFragment: a.candidate.usernameFragment } } } var d = r.getMediaSections(i._localDescription.sdp); d[a.candidate.sdpMLineIndex] += c ? 'a=end-of-candidates\r\n' : 'a=' + a.candidate.candidate + '\r\n', i._localDescription.sdp = r.getDescription(i._localDescription.sdp) + d.join(''); var p = i.transceivers.every(function (e) { return e.iceGatherer && e.iceGatherer.state === 'completed' }); i.iceGatheringState !== 'gathering' && (i.iceGatheringState = 'gathering', i._emitGatheringStateChange()), c || i._dispatchEvent('icecandidate', a), p && (i._dispatchEvent('icecandidate', new Event('icecandidate')), i.iceGatheringState = 'complete', i._emitGatheringStateChange()) } }, e.setTimeout(function () { a.forEach(function (e) { o.onlocalcandidate(e) }) }, 0) } }, l.prototype._createIceAndDtlsTransports = function () { var t = this; var n = new e.RTCIceTransport(null); n.onicestatechange = function () { t._updateIceConnectionState(), t._updateConnectionState() }; var r = new e.RTCDtlsTransport(n); return r.ondtlsstatechange = function () { t._updateConnectionState() }, r.onerror = function () { Object.defineProperty(r, 'state', { value: 'failed', writable: !0 }), t._updateConnectionState() }, { iceTransport: n, dtlsTransport: r } }, l.prototype._disposeIceAndDtlsTransports = function (e) { var t = this.transceivers[e].iceGatherer; t && (delete t.onlocalcandidate, delete this.transceivers[e].iceGatherer); var n = this.transceivers[e].iceTransport; n && (delete n.onicestatechange, delete this.transceivers[e].iceTransport); var r = this.transceivers[e].dtlsTransport; r && (delete r.ondtlsstatechange, delete r.onerror, delete this.transceivers[e].dtlsTransport) }, l.prototype._transceive = function (e, n, i) { var o = s(e.localCapabilities, e.remoteCapabilities); n && e.rtpSender && (o.encodings = e.sendEncodingParameters, o.rtcp = { cname: r.localCName, compound: e.rtcpParameters.compound }, e.recvEncodingParameters.length && (o.rtcp.ssrc = e.recvEncodingParameters[0].ssrc), e.rtpSender.send(o)), i && e.rtpReceiver && o.codecs.length > 0 && (e.kind === 'video' && e.recvEncodingParameters && t < 15019 && e.recvEncodingParameters.forEach(function (e) { delete e.rtx }), e.recvEncodingParameters.length ? o.encodings = e.recvEncodingParameters : o.encodings = [{}], o.rtcp = { compound: e.rtcpParameters.compound }, e.rtcpParameters.cname && (o.rtcp.cname = e.rtcpParameters.cname), e.sendEncodingParameters.length && (o.rtcp.ssrc = e.sendEncodingParameters[0].ssrc), e.rtpReceiver.receive(o)) }, l.prototype.setLocalDescription = function (e) { var t; var n; var i = this; if (['offer', 'answer'].indexOf(e.type) === -1) return Promise.reject(d('TypeError', 'Unsupported type "' + e.type + '"')); if (!c('setLocalDescription', e.type, i.signalingState) || i._isClosed) return Promise.reject(d('InvalidStateError', 'Can not set local ' + e.type + ' in state ' + i.signalingState)); if (e.type === 'offer')t = r.splitSections(e.sdp), n = t.shift(), t.forEach(function (e, t) { var n = r.parseRtpParameters(e); i.transceivers[t].localCapabilities = n }), i.transceivers.forEach(function (e, t) { i._gather(e.mid, t) }); else if (e.type === 'answer') { t = r.splitSections(i._remoteDescription.sdp), n = t.shift(); var o = r.matchPrefix(n, 'a=ice-lite').length > 0; t.forEach(function (e, t) { var a = i.transceivers[t]; var c = a.iceGatherer; var u = a.iceTransport; var d = a.dtlsTransport; var p = a.localCapabilities; var l = a.remoteCapabilities; if ((!r.isRejected(e) || r.matchPrefix(e, 'a=bundle-only').length !== 0) && !a.rejected) { var f = r.getIceParameters(e, n); var h = r.getDtlsParameters(e, n); o && (h.role = 'server'), i.usingBundle && t !== 0 || (i._gather(a.mid, t), u.state === 'new' && u.start(c, f, o ? 'controlling' : 'controlled'), d.state === 'new' && d.start(h)); var v = s(p, l); i._transceive(a, v.codecs.length > 0, !1) } }) } return i._localDescription = { type: e.type, sdp: e.sdp }, e.type === 'offer' ? i._updateSignalingState('have-local-offer') : i._updateSignalingState('stable'), Promise.resolve() }, l.prototype.setRemoteDescription = function (i) { var o = this; if (['offer', 'answer'].indexOf(i.type) === -1) return Promise.reject(d('TypeError', 'Unsupported type "' + i.type + '"')); if (!c('setRemoteDescription', i.type, o.signalingState) || o._isClosed) return Promise.reject(d('InvalidStateError', 'Can not set remote ' + i.type + ' in state ' + o.signalingState)); var a = {}; o.remoteStreams.forEach(function (e) { a[e.id] = e }); var l = []; var f = r.splitSections(i.sdp); var h = f.shift(); var v = r.matchPrefix(h, 'a=ice-lite').length > 0; var m = r.matchPrefix(h, 'a=group:BUNDLE ').length > 0; o.usingBundle = m; var y = r.matchPrefix(h, 'a=ice-options:')[0]; return o.canTrickleIceCandidates = !!y && y.substr(14).split(' ').indexOf('trickle') >= 0, f.forEach(function (c, d) { var p = r.splitLines(c); var f = r.getKind(c); var y = r.isRejected(c) && r.matchPrefix(c, 'a=bundle-only').length === 0; var g = p[0].substr(2).split(' ')[2]; var b = r.getDirection(c, h); var _ = r.parseMsid(c); var C = r.getMid(c) || r.generateIdentifier(); if (y || f === 'application' && (g === 'DTLS/SCTP' || g === 'UDP/DTLS/SCTP'))o.transceivers[d] = { mid: C, kind: f, protocol: g, rejected: !0 }; else { var S, T, w, P, k, E, R, O, x; !y && o.transceivers[d] && o.transceivers[d].rejected && (o.transceivers[d] = o._createTransceiver(f, !0)); var D; var j; var M = r.parseRtpParameters(c); y || (D = r.getIceParameters(c, h), (j = r.getDtlsParameters(c, h)).role = 'client'), R = r.parseRtpEncodingParameters(c); var I = r.parseRtcpParameters(c); var A = r.matchPrefix(c, 'a=end-of-candidates', h).length > 0; var B = r.matchPrefix(c, 'a=candidate:').map(function (e) { return r.parseCandidate(e) }).filter(function (e) { return e.component === 1 }); if ((i.type === 'offer' || i.type === 'answer') && !y && m && d > 0 && o.transceivers[d] && (o._disposeIceAndDtlsTransports(d), o.transceivers[d].iceGatherer = o.transceivers[0].iceGatherer, o.transceivers[d].iceTransport = o.transceivers[0].iceTransport, o.transceivers[d].dtlsTransport = o.transceivers[0].dtlsTransport, o.transceivers[d].rtpSender && o.transceivers[d].rtpSender.setTransport(o.transceivers[0].dtlsTransport), o.transceivers[d].rtpReceiver && o.transceivers[d].rtpReceiver.setTransport(o.transceivers[0].dtlsTransport)), i.type !== 'offer' || y)i.type !== 'answer' || y || (T = (S = o.transceivers[d]).iceGatherer, w = S.iceTransport, P = S.dtlsTransport, k = S.rtpReceiver, E = S.sendEncodingParameters, O = S.localCapabilities, o.transceivers[d].recvEncodingParameters = R, o.transceivers[d].remoteCapabilities = M, o.transceivers[d].rtcpParameters = I, B.length && w.state === 'new' && (!v && !A || m && d !== 0 ? B.forEach(function (e) { u(S.iceTransport, e) }) : w.setRemoteCandidates(B)), m && d !== 0 || (w.state === 'new' && w.start(T, D, 'controlling'), P.state === 'new' && P.start(j)), !s(S.localCapabilities, S.remoteCapabilities).codecs.filter(function (e) { return e.name.toLowerCase() === 'rtx' }).length && S.sendEncodingParameters[0].rtx && delete S.sendEncodingParameters[0].rtx, o._transceive(S, b === 'sendrecv' || b === 'recvonly', b === 'sendrecv' || b === 'sendonly'), !k || b !== 'sendrecv' && b !== 'sendonly' ? delete S.rtpReceiver : (x = k.track, _ ? (a[_.stream] || (a[_.stream] = new e.MediaStream()), n(x, a[_.stream]), l.push([x, k, a[_.stream]])) : (a.default || (a.default = new e.MediaStream()), n(x, a.default), l.push([x, k, a.default])))); else { (S = o.transceivers[d] || o._createTransceiver(f)).mid = C, S.iceGatherer || (S.iceGatherer = o._createIceGatherer(d, m)), B.length && S.iceTransport.state === 'new' && (!A || m && d !== 0 ? B.forEach(function (e) { u(S.iceTransport, e) }) : S.iceTransport.setRemoteCandidates(B)), O = e.RTCRtpReceiver.getCapabilities(f), t < 15019 && (O.codecs = O.codecs.filter(function (e) { return e.name !== 'rtx' })), E = S.sendEncodingParameters || [{ ssrc: 1001 * (2 * d + 2) }]; var L; var N = !1; b === 'sendrecv' || b === 'sendonly' ? (N = !S.rtpReceiver, k = S.rtpReceiver || new e.RTCRtpReceiver(S.dtlsTransport, f), N && (x = k.track, _ && _.stream === '-' || (_ ? (a[_.stream] || (a[_.stream] = new e.MediaStream(), Object.defineProperty(a[_.stream], 'id', { get: function () { return _.stream } })), Object.defineProperty(x, 'id', { get: function () { return _.track } }), L = a[_.stream]) : (a.default || (a.default = new e.MediaStream()), L = a.default)), L && (n(x, L), S.associatedRemoteMediaStreams.push(L)), l.push([x, k, L]))) : S.rtpReceiver && S.rtpReceiver.track && (S.associatedRemoteMediaStreams.forEach(function (t) { var n; var r; var i = t.getTracks().find(function (e) { return e.id === S.rtpReceiver.track.id }); i && (n = i, (r = t).removeTrack(n), r.dispatchEvent(new e.MediaStreamTrackEvent('removetrack', { track: n }))) }), S.associatedRemoteMediaStreams = []), S.localCapabilities = O, S.remoteCapabilities = M, S.rtpReceiver = k, S.rtcpParameters = I, S.sendEncodingParameters = E, S.recvEncodingParameters = R, o._transceive(o.transceivers[d], !1, N) } } }), void 0 === o._dtlsRole && (o._dtlsRole = i.type === 'offer' ? 'active' : 'passive'), o._remoteDescription = { type: i.type, sdp: i.sdp }, i.type === 'offer' ? o._updateSignalingState('have-remote-offer') : o._updateSignalingState('stable'), Object.keys(a).forEach(function (t) { var n = a[t]; if (n.getTracks().length) { if (o.remoteStreams.indexOf(n) === -1) { o.remoteStreams.push(n); var r = new Event('addstream'); r.stream = n, e.setTimeout(function () { o._dispatchEvent('addstream', r) }) }l.forEach(function (e) { var t = e[0]; var r = e[1]; n.id === e[2].id && p(o, t, r, [n]) }) } }), l.forEach(function (e) { e[2] || p(o, e[0], e[1], []) }), e.setTimeout(function () { o && o.transceivers && o.transceivers.forEach(function (e) { e.iceTransport && e.iceTransport.state === 'new' && e.iceTransport.getRemoteCandidates().length > 0 && (console.warn('Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification'), e.iceTransport.addRemoteCandidate({})) }) }, 4e3), Promise.resolve() }, l.prototype.close = function () { this.transceivers.forEach(function (e) { e.iceTransport && e.iceTransport.stop(), e.dtlsTransport && e.dtlsTransport.stop(), e.rtpSender && e.rtpSender.stop(), e.rtpReceiver && e.rtpReceiver.stop() }), this._isClosed = !0, this._updateSignalingState('closed') }, l.prototype._updateSignalingState = function (e) { this.signalingState = e; var t = new Event('signalingstatechange'); this._dispatchEvent('signalingstatechange', t) }, l.prototype._maybeFireNegotiationNeeded = function () { var t = this; this.signalingState === 'stable' && !0 !== this.needNegotiation && (this.needNegotiation = !0, e.setTimeout(function () { if (t.needNegotiation) { t.needNegotiation = !1; var e = new Event('negotiationneeded'); t._dispatchEvent('negotiationneeded', e) } }, 0)) }, l.prototype._updateIceConnectionState = function () { var e; var t = { new: 0, closed: 0, checking: 0, connected: 0, completed: 0, disconnected: 0, failed: 0 }; if (this.transceivers.forEach(function (e) { e.iceTransport && !e.rejected && t[e.iceTransport.state]++ }), e = 'new', t.failed > 0 ? e = 'failed' : t.checking > 0 ? e = 'checking' : t.disconnected > 0 ? e = 'disconnected' : t.new > 0 ? e = 'new' : t.connected > 0 ? e = 'connected' : t.completed > 0 && (e = 'completed'), e !== this.iceConnectionState) { this.iceConnectionState = e; var n = new Event('iceconnectionstatechange'); this._dispatchEvent('iceconnectionstatechange', n) } }, l.prototype._updateConnectionState = function () { var e; var t = { new: 0, closed: 0, connecting: 0, connected: 0, completed: 0, disconnected: 0, failed: 0 }; if (this.transceivers.forEach(function (e) { e.iceTransport && e.dtlsTransport && !e.rejected && (t[e.iceTransport.state]++, t[e.dtlsTransport.state]++) }), t.connected += t.completed, e = 'new', t.failed > 0 ? e = 'failed' : t.connecting > 0 ? e = 'connecting' : t.disconnected > 0 ? e = 'disconnected' : t.new > 0 ? e = 'new' : t.connected > 0 && (e = 'connected'), e !== this.connectionState) { this.connectionState = e; var n = new Event('connectionstatechange'); this._dispatchEvent('connectionstatechange', n) } }, l.prototype.createOffer = function () { var n = this; if (n._isClosed) return Promise.reject(d('InvalidStateError', 'Can not call createOffer after close')); var i = n.transceivers.filter(function (e) { return e.kind === 'audio' }).length; var a = n.transceivers.filter(function (e) { return e.kind === 'video' }).length; var s = arguments[0]; if (s) { if (s.mandatory || s.optional) throw new TypeError('Legacy mandatory/optional constraints not supported.'); void 0 !== s.offerToReceiveAudio && (i = !0 === s.offerToReceiveAudio ? 1 : !1 === s.offerToReceiveAudio ? 0 : s.offerToReceiveAudio), void 0 !== s.offerToReceiveVideo && (a = !0 === s.offerToReceiveVideo ? 1 : !1 === s.offerToReceiveVideo ? 0 : s.offerToReceiveVideo) } for (n.transceivers.forEach(function (e) { e.kind === 'audio' ? --i < 0 && (e.wantReceive = !1) : e.kind === 'video' && --a < 0 && (e.wantReceive = !1) }); i > 0 || a > 0;)i > 0 && (n._createTransceiver('audio'), i--), a > 0 && (n._createTransceiver('video'), a--); var c = r.writeSessionBoilerplate(n._sdpSessionId, n._sdpSessionVersion++); n.transceivers.forEach(function (i, o) { var a = i.track; var s = i.kind; var c = i.mid || r.generateIdentifier(); i.mid = c, i.iceGatherer || (i.iceGatherer = n._createIceGatherer(o, n.usingBundle)); var u = e.RTCRtpSender.getCapabilities(s); t < 15019 && (u.codecs = u.codecs.filter(function (e) { return e.name !== 'rtx' })), u.codecs.forEach(function (e) { e.name === 'H264' && void 0 === e.parameters['level-asymmetry-allowed'] && (e.parameters['level-asymmetry-allowed'] = '1'), i.remoteCapabilities && i.remoteCapabilities.codecs && i.remoteCapabilities.codecs.forEach(function (t) { e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate && (e.preferredPayloadType = t.payloadType) }) }), u.headerExtensions.forEach(function (e) { (i.remoteCapabilities && i.remoteCapabilities.headerExtensions || []).forEach(function (t) { e.uri === t.uri && (e.id = t.id) }) }); var d = i.sendEncodingParameters || [{ ssrc: 1001 * (2 * o + 1) }]; a && t >= 15019 && s === 'video' && !d[0].rtx && (d[0].rtx = { ssrc: d[0].ssrc + 1 }), i.wantReceive && (i.rtpReceiver = new e.RTCRtpReceiver(i.dtlsTransport, s)), i.localCapabilities = u, i.sendEncodingParameters = d }), n._config.bundlePolicy !== 'max-compat' && (c += 'a=group:BUNDLE ' + n.transceivers.map(function (e) { return e.mid }).join(' ') + '\r\n'), c += 'a=ice-options:trickle\r\n', n.transceivers.forEach(function (e, t) { c += o(e, e.localCapabilities, 'offer', e.stream, n._dtlsRole), c += 'a=rtcp-rsize\r\n', !e.iceGatherer || n.iceGatheringState === 'new' || t !== 0 && n.usingBundle || (e.iceGatherer.getLocalCandidates().forEach(function (e) { e.component = 1, c += 'a=' + r.writeCandidate(e) + '\r\n' }), e.iceGatherer.state === 'completed' && (c += 'a=end-of-candidates\r\n')) }); var u = new e.RTCSessionDescription({ type: 'offer', sdp: c }); return Promise.resolve(u) }, l.prototype.createAnswer = function () { var n = this; if (n._isClosed) return Promise.reject(d('InvalidStateError', 'Can not call createAnswer after close')); if (n.signalingState !== 'have-remote-offer' && n.signalingState !== 'have-local-pranswer') return Promise.reject(d('InvalidStateError', 'Can not call createAnswer in signalingState ' + n.signalingState)); var i = r.writeSessionBoilerplate(n._sdpSessionId, n._sdpSessionVersion++); n.usingBundle && (i += 'a=group:BUNDLE ' + n.transceivers.map(function (e) { return e.mid }).join(' ') + '\r\n'), i += 'a=ice-options:trickle\r\n'; var a = r.getMediaSections(n._remoteDescription.sdp).length; n.transceivers.forEach(function (e, r) { if (!(r + 1 > a)) { if (e.rejected) return e.kind === 'application' ? e.protocol === 'DTLS/SCTP' ? i += 'm=application 0 DTLS/SCTP 5000\r\n' : i += 'm=application 0 ' + e.protocol + ' webrtc-datachannel\r\n' : e.kind === 'audio' ? i += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n' : e.kind === 'video' && (i += 'm=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n'), void (i += 'c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:' + e.mid + '\r\n'); var c; e.stream && (e.kind === 'audio' ? c = e.stream.getAudioTracks()[0] : e.kind === 'video' && (c = e.stream.getVideoTracks()[0]), c && t >= 15019 && e.kind === 'video' && !e.sendEncodingParameters[0].rtx && (e.sendEncodingParameters[0].rtx = { ssrc: e.sendEncodingParameters[0].ssrc + 1 })); var u = s(e.localCapabilities, e.remoteCapabilities); !u.codecs.filter(function (e) { return e.name.toLowerCase() === 'rtx' }).length && e.sendEncodingParameters[0].rtx && delete e.sendEncodingParameters[0].rtx, i += o(e, u, 'answer', e.stream, n._dtlsRole), e.rtcpParameters && e.rtcpParameters.reducedSize && (i += 'a=rtcp-rsize\r\n') } }); var c = new e.RTCSessionDescription({ type: 'answer', sdp: i }); return Promise.resolve(c) }, l.prototype.addIceCandidate = function (e) { var t; var n = this; return e && void 0 === e.sdpMLineIndex && !e.sdpMid ? Promise.reject(new TypeError('sdpMLineIndex or sdpMid required')) : new Promise(function (i, o) { if (!n._remoteDescription) return o(d('InvalidStateError', 'Can not add ICE candidate without a remote description')); if (e && e.candidate !== '') { var a = e.sdpMLineIndex; if (e.sdpMid) for (var s = 0; s < n.transceivers.length; s++) if (n.transceivers[s].mid === e.sdpMid) { a = s; break } var c = n.transceivers[a]; if (!c) return o(d('OperationError', 'Can not add ICE candidate')); if (c.rejected) return i(); var p = Object.keys(e.candidate).length > 0 ? r.parseCandidate(e.candidate) : {}; if (p.protocol === 'tcp' && (p.port === 0 || p.port === 9)) return i(); if (p.component && p.component !== 1) return i(); if ((a === 0 || a > 0 && c.iceTransport !== n.transceivers[0].iceTransport) && !u(c.iceTransport, p)) return o(d('OperationError', 'Can not add ICE candidate')); var l = e.candidate.trim(); l.indexOf('a=') === 0 && (l = l.substr(2)), (t = r.getMediaSections(n._remoteDescription.sdp))[a] += 'a=' + (p.type ? l : 'end-of-candidates') + '\r\n', n._remoteDescription.sdp = r.getDescription(n._remoteDescription.sdp) + t.join('') } else for (var f = 0; f < n.transceivers.length && (n.transceivers[f].rejected || (n.transceivers[f].iceTransport.addRemoteCandidate({}), (t = r.getMediaSections(n._remoteDescription.sdp))[f] += 'a=end-of-candidates\r\n', n._remoteDescription.sdp = r.getDescription(n._remoteDescription.sdp) + t.join(''), !n.usingBundle)); f++);i() }) }, l.prototype.getStats = function (t) { if (t && t instanceof e.MediaStreamTrack) { var n = null; if (this.transceivers.forEach(function (e) { e.rtpSender && e.rtpSender.track === t ? n = e.rtpSender : e.rtpReceiver && e.rtpReceiver.track === t && (n = e.rtpReceiver) }), !n) throw d('InvalidAccessError', 'Invalid selector.'); return n.getStats() } var r = []; return this.transceivers.forEach(function (e) { ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (t) { e[t] && r.push(e[t].getStats()) }) }), Promise.all(r).then(function (e) { var t = new Map(); return e.forEach(function (e) { e.forEach(function (e) { t.set(e.id, e) }) }), t }) }, ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer', 'RTCIceTransport', 'RTCDtlsTransport'].forEach(function (t) { var n = e[t]; if (n && n.prototype && n.prototype.getStats) { var r = n.prototype.getStats; n.prototype.getStats = function () { return r.apply(this).then(function (e) { var t = new Map(); return Object.keys(e).forEach(function (n) { e[n].type = i(e[n]), t.set(n, e[n]) }), t }) } } }); var f = ['createOffer', 'createAnswer']; return f.forEach(function (e) { var t = l.prototype[e]; l.prototype[e] = function () { var e = arguments; return typeof e[0] === 'function' || typeof e[1] === 'function' ? t.apply(this, [arguments[2]]).then(function (t) { typeof e[0] === 'function' && e[0].apply(null, [t]) }, function (t) { typeof e[1] === 'function' && e[1].apply(null, [t]) }) : t.apply(this, arguments) } }), (f = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']).forEach(function (e) { var t = l.prototype[e]; l.prototype[e] = function () { var e = arguments; return typeof e[1] === 'function' || typeof e[2] === 'function' ? t.apply(this, arguments).then(function () { typeof e[1] === 'function' && e[1].apply(null) }, function (t) { typeof e[2] === 'function' && e[2].apply(null, [t]) }) : t.apply(this, arguments) } }), ['getStats'].forEach(function (e) { var t = l.prototype[e]; l.prototype[e] = function () { var e = arguments; return typeof e[1] === 'function' ? t.apply(this, arguments).then(function () { typeof e[1] === 'function' && e[1].apply(null) }) : t.apply(this, arguments) } }), l } }, { sdp: 'YHvh' }], YdKx: [function (e, t, n) { 'use strict'; function r (e) { var t = e && e.navigator; var n = t.mediaDevices.getUserMedia.bind(t.mediaDevices); t.mediaDevices.getUserMedia = function (e) { return n(e).catch(function (e) { return Promise.reject(function (e) { return { name: { PermissionDeniedError: 'NotAllowedError' }[e.name] || e.name, message: e.message, constraint: e.constraint, toString: function () { return this.name } } }(e)) }) } }Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetUserMedia = r }, {}], P3bV: [function (e, t, n) { 'use strict'; function r (e) { 'getDisplayMedia' in e.navigator && e.navigator.mediaDevices && (e.navigator.mediaDevices && 'getDisplayMedia' in e.navigator.mediaDevices || (e.navigator.mediaDevices.getDisplayMedia = e.navigator.getDisplayMedia.bind(e.navigator))) }Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetDisplayMedia = r }, {}], XRic: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimPeerConnection = p, n.shimReplaceTrack = l, Object.defineProperty(n, 'shimGetUserMedia', { enumerable: !0, get: function () { return a.shimGetUserMedia } }), Object.defineProperty(n, 'shimGetDisplayMedia', { enumerable: !0, get: function () { return s.shimGetDisplayMedia } }); var r = d(e('../utils')); var i = e('./filtericeservers'); var o = c(e('rtcpeerconnection-shim')); var a = e('./getusermedia'); var s = e('./getdisplaymedia'); function c (e) { return e && e.__esModule ? e : { default: e } } function u () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return u = function () { return e }, e } function d (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = u(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var i in e) if (Object.prototype.hasOwnProperty.call(e, i)) { var o = r ? Object.getOwnPropertyDescriptor(e, i) : null; o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i] } return n.default = e, t && t.set(e, n), n } function p (e) { var t = r.detectBrowser(e); if (e.RTCIceGatherer && (e.RTCIceCandidate || (e.RTCIceCandidate = function (e) { return e }), e.RTCSessionDescription || (e.RTCSessionDescription = function (e) { return e }), t.version < 15025)) { var n = Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype, 'enabled'); Object.defineProperty(e.MediaStreamTrack.prototype, 'enabled', { set: function (e) { n.set.call(this, e); var t = new Event('enabled'); t.enabled = e, this.dispatchEvent(t) } }) }!e.RTCRtpSender || 'dtmf' in e.RTCRtpSender.prototype || Object.defineProperty(e.RTCRtpSender.prototype, 'dtmf', { get: function () { return void 0 === this._dtmf && (this.track.kind === 'audio' ? this._dtmf = new e.RTCDtmfSender(this) : this.track.kind === 'video' && (this._dtmf = null)), this._dtmf } }), e.RTCDtmfSender && !e.RTCDTMFSender && (e.RTCDTMFSender = e.RTCDtmfSender); var a = (0, o.default)(e, t.version); e.RTCPeerConnection = function (e) { return e && e.iceServers && (e.iceServers = (0, i.filterIceServers)(e.iceServers, t.version), r.log('ICE servers after filtering:', e.iceServers)), new a(e) }, e.RTCPeerConnection.prototype = a.prototype } function l (e) { !e.RTCRtpSender || 'replaceTrack' in e.RTCRtpSender.prototype || (e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack) } }, { '../utils': 'iSxC', './filtericeservers': 'NZ1C', 'rtcpeerconnection-shim': 'NJ2u', './getusermedia': 'YdKx', './getdisplaymedia': 'P3bV' }], GzSv: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetUserMedia = s; var r = o(e('../utils')); function i () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return i = function () { return e }, e } function o (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = i(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var o in e) if (Object.prototype.hasOwnProperty.call(e, o)) { var a = r ? Object.getOwnPropertyDescriptor(e, o) : null; a && (a.get || a.set) ? Object.defineProperty(n, o, a) : n[o] = e[o] } return n.default = e, t && t.set(e, n), n } function a (e) { return (a = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function s (e) { var t = r.detectBrowser(e); var n = e && e.navigator; var i = e && e.MediaStreamTrack; if (n.getUserMedia = function (e, t, i) { r.deprecated('navigator.getUserMedia', 'navigator.mediaDevices.getUserMedia'), n.mediaDevices.getUserMedia(e).then(t, i) }, !(t.version > 55 && 'autoGainControl' in n.mediaDevices.getSupportedConstraints())) { var o = function (e, t, n) { t in e && !(n in e) && (e[n] = e[t], delete e[t]) }; var s = n.mediaDevices.getUserMedia.bind(n.mediaDevices); if (n.mediaDevices.getUserMedia = function (e) { return a(e) === 'object' && a(e.audio) === 'object' && (e = JSON.parse(JSON.stringify(e)), o(e.audio, 'autoGainControl', 'mozAutoGainControl'), o(e.audio, 'noiseSuppression', 'mozNoiseSuppression')), s(e) }, i && i.prototype.getSettings) { var c = i.prototype.getSettings; i.prototype.getSettings = function () { var e = c.apply(this, arguments); return o(e, 'mozAutoGainControl', 'autoGainControl'), o(e, 'mozNoiseSuppression', 'noiseSuppression'), e } } if (i && i.prototype.applyConstraints) { var u = i.prototype.applyConstraints; i.prototype.applyConstraints = function (e) { return this.kind === 'audio' && a(e) === 'object' && (e = JSON.parse(JSON.stringify(e)), o(e, 'autoGainControl', 'mozAutoGainControl'), o(e, 'noiseSuppression', 'mozNoiseSuppression')), u.apply(this, [e]) } } } } }, { '../utils': 'iSxC' }], UuGU: [function (e, t, n) { 'use strict'; function r (e, t) { e.navigator.mediaDevices && 'getDisplayMedia' in e.navigator.mediaDevices || e.navigator.mediaDevices && (e.navigator.mediaDevices.getDisplayMedia = function (n) { if (!n || !n.video) { var r = new DOMException('getDisplayMedia without video constraints is undefined'); return r.name = 'NotFoundError', r.code = 8, Promise.reject(r) } return !0 === n.video ? n.video = { mediaSource: t } : n.video.mediaSource = t, e.navigator.mediaDevices.getUserMedia(n) }) }Object.defineProperty(n, '__esModule', { value: !0 }), n.shimGetDisplayMedia = r }, {}], Fzdr: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimOnTrack = d, n.shimPeerConnection = p, n.shimSenderGetStats = l, n.shimReceiverGetStats = f, n.shimRemoveStream = h, n.shimRTCDataChannel = v, n.shimAddTransceiver = m, n.shimCreateOffer = y, n.shimCreateAnswer = g, Object.defineProperty(n, 'shimGetUserMedia', { enumerable: !0, get: function () { return i.shimGetUserMedia } }), Object.defineProperty(n, 'shimGetDisplayMedia', { enumerable: !0, get: function () { return o.shimGetDisplayMedia } }); var r = s(e('../utils')); var i = e('./getusermedia'); var o = e('./getdisplaymedia'); function a () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return a = function () { return e }, e } function s (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = a(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var i in e) if (Object.prototype.hasOwnProperty.call(e, i)) { var o = r ? Object.getOwnPropertyDescriptor(e, i) : null; o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i] } return n.default = e, t && t.set(e, n), n } function c (e, t, n) { return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e } function u (e) { return (u = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function d (e) { u(e) === 'object' && e.RTCTrackEvent && 'receiver' in e.RTCTrackEvent.prototype && !('transceiver' in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, 'transceiver', { get: function () { return { receiver: this.receiver } } }) } function p (e) { var t = r.detectBrowser(e); if (u(e) === 'object' && (e.RTCPeerConnection || e.mozRTCPeerConnection)) { if (!e.RTCPeerConnection && e.mozRTCPeerConnection && (e.RTCPeerConnection = e.mozRTCPeerConnection), t.version < 53 && ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (t) { var n = e.RTCPeerConnection.prototype[t]; var r = c({}, t, function () { return arguments[0] = new (t === 'addIceCandidate' ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]), n.apply(this, arguments) }); e.RTCPeerConnection.prototype[t] = r[t] }), t.version < 68) { var n = e.RTCPeerConnection.prototype.addIceCandidate; e.RTCPeerConnection.prototype.addIceCandidate = function () { return arguments[0] ? arguments[0] && arguments[0].candidate === '' ? Promise.resolve() : n.apply(this, arguments) : (arguments[1] && arguments[1].apply(null), Promise.resolve()) } } var i = { inboundrtp: 'inbound-rtp', outboundrtp: 'outbound-rtp', candidatepair: 'candidate-pair', localcandidate: 'local-candidate', remotecandidate: 'remote-candidate' }; var o = e.RTCPeerConnection.prototype.getStats; e.RTCPeerConnection.prototype.getStats = function () { var [e, n, r] = arguments; return o.apply(this, [e || null]).then(function (e) { if (t.version < 53 && !n) try { e.forEach(function (e) { e.type = i[e.type] || e.type }) } catch (r) { if (r.name !== 'TypeError') throw r; e.forEach(function (t, n) { e.set(n, Object.assign({}, t, { type: i[t.type] || t.type })) }) } return e }).then(n, r) } } } function l (e) { if (u(e) === 'object' && e.RTCPeerConnection && e.RTCRtpSender && (!e.RTCRtpSender || !('getStats' in e.RTCRtpSender.prototype))) { var t = e.RTCPeerConnection.prototype.getSenders; t && (e.RTCPeerConnection.prototype.getSenders = function () { var e = this; var n = t.apply(this, []); return n.forEach(function (t) { return t._pc = e }), n }); var n = e.RTCPeerConnection.prototype.addTrack; n && (e.RTCPeerConnection.prototype.addTrack = function () { var e = n.apply(this, arguments); return e._pc = this, e }), e.RTCRtpSender.prototype.getStats = function () { return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map()) } } } function f (e) { if (u(e) === 'object' && e.RTCPeerConnection && e.RTCRtpSender && (!e.RTCRtpSender || !('getStats' in e.RTCRtpReceiver.prototype))) { var t = e.RTCPeerConnection.prototype.getReceivers; t && (e.RTCPeerConnection.prototype.getReceivers = function () { var e = this; var n = t.apply(this, []); return n.forEach(function (t) { return t._pc = e }), n }), r.wrapPeerConnectionEvent(e, 'track', function (e) { return e.receiver._pc = e.srcElement, e }), e.RTCRtpReceiver.prototype.getStats = function () { return this._pc.getStats(this.track) } } } function h (e) { !e.RTCPeerConnection || 'removeStream' in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) { var t = this; r.deprecated('removeStream', 'removeTrack'), this.getSenders().forEach(function (n) { n.track && e.getTracks().includes(n.track) && t.removeTrack(n) }) }) } function v (e) { e.DataChannel && !e.RTCDataChannel && (e.RTCDataChannel = e.DataChannel) } function m (e) { if (u(e) === 'object' && e.RTCPeerConnection) { var t = e.RTCPeerConnection.prototype.addTransceiver; t && (e.RTCPeerConnection.prototype.addTransceiver = function () { this.setParametersPromises = []; var e = arguments[1]; var n = e && 'sendEncodings' in e; n && e.sendEncodings.forEach(function (e) { if ('rid' in e && !/^[a-z0-9]{0,16}$/i.test(e.rid)) throw new TypeError('Invalid RID value provided.'); if ('scaleResolutionDownBy' in e && !(parseFloat(e.scaleResolutionDownBy) >= 1)) throw new RangeError('scale_resolution_down_by must be >= 1.0'); if ('maxFramerate' in e && !(parseFloat(e.maxFramerate) >= 0)) throw new RangeError('max_framerate must be >= 0.0') }); var r = t.apply(this, arguments); if (n) { var { sender: i } = r; var o = i.getParameters(); 'encodings' in o || (o.encodings = e.sendEncodings, this.setParametersPromises.push(i.setParameters(o).catch(function () {}))) } return r }) } } function y (e) { if (u(e) === 'object' && e.RTCPeerConnection) { var t = e.RTCPeerConnection.prototype.createOffer; e.RTCPeerConnection.prototype.createOffer = function () { var e = arguments; var n = this; return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () { return t.apply(n, e) }).finally(function () { n.setParametersPromises = [] }) : t.apply(this, arguments) } } } function g (e) { if (u(e) === 'object' && e.RTCPeerConnection) { var t = e.RTCPeerConnection.prototype.createAnswer; e.RTCPeerConnection.prototype.createAnswer = function () { var e = arguments; var n = this; return this.setParametersPromises && this.setParametersPromises.length ? Promise.all(this.setParametersPromises).then(function () { return t.apply(n, e) }).finally(function () { n.setParametersPromises = [] }) : t.apply(this, arguments) } } } }, { '../utils': 'iSxC', './getusermedia': 'GzSv', './getdisplaymedia': 'UuGU' }], t1lL: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimLocalStreamsAPI = s, n.shimRemoteStreamsAPI = c, n.shimCallbacksAPI = u, n.shimGetUserMedia = d, n.shimConstraints = p, n.shimRTCIceServerUrls = l, n.shimTrackEventTransceiver = f, n.shimCreateOfferLegacy = h; var r = o(e('../utils')); function i () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return i = function () { return e }, e } function o (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = i(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var o in e) if (Object.prototype.hasOwnProperty.call(e, o)) { var a = r ? Object.getOwnPropertyDescriptor(e, o) : null; a && (a.get || a.set) ? Object.defineProperty(n, o, a) : n[o] = e[o] } return n.default = e, t && t.set(e, n), n } function a (e) { return (a = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function s (e) { if (a(e) === 'object' && e.RTCPeerConnection) { if ('getLocalStreams' in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getLocalStreams = function () { return this._localStreams || (this._localStreams = []), this._localStreams }), !('addStream' in e.RTCPeerConnection.prototype)) { var t = e.RTCPeerConnection.prototype.addTrack; e.RTCPeerConnection.prototype.addStream = function (e) { var n = this; this._localStreams || (this._localStreams = []), this._localStreams.includes(e) || this._localStreams.push(e), e.getAudioTracks().forEach(function (r) { return t.call(n, r, e) }), e.getVideoTracks().forEach(function (r) { return t.call(n, r, e) }) }, e.RTCPeerConnection.prototype.addTrack = function (e) { var n = arguments[1]; return n && (this._localStreams ? this._localStreams.includes(n) || this._localStreams.push(n) : this._localStreams = [n]), t.apply(this, arguments) } }'removeStream' in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.removeStream = function (e) { var t = this; this._localStreams || (this._localStreams = []); var n = this._localStreams.indexOf(e); if (n !== -1) { this._localStreams.splice(n, 1); var r = e.getTracks(); this.getSenders().forEach(function (e) { r.includes(e.track) && t.removeTrack(e) }) } }) } } function c (e) { if (a(e) === 'object' && e.RTCPeerConnection && ('getRemoteStreams' in e.RTCPeerConnection.prototype || (e.RTCPeerConnection.prototype.getRemoteStreams = function () { return this._remoteStreams ? this._remoteStreams : [] }), !('onaddstream' in e.RTCPeerConnection.prototype))) { Object.defineProperty(e.RTCPeerConnection.prototype, 'onaddstream', { get: function () { return this._onaddstream }, set: function (e) { var t = this; this._onaddstream && (this.removeEventListener('addstream', this._onaddstream), this.removeEventListener('track', this._onaddstreampoly)), this.addEventListener('addstream', this._onaddstream = e), this.addEventListener('track', this._onaddstreampoly = function (e) { e.streams.forEach(function (e) { if (t._remoteStreams || (t._remoteStreams = []), !t._remoteStreams.includes(e)) { t._remoteStreams.push(e); var n = new Event('addstream'); n.stream = e, t.dispatchEvent(n) } }) }) } }); var t = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { var e = this; return this._onaddstreampoly || this.addEventListener('track', this._onaddstreampoly = function (t) { t.streams.forEach(function (t) { if (e._remoteStreams || (e._remoteStreams = []), !(e._remoteStreams.indexOf(t) >= 0)) { e._remoteStreams.push(t); var n = new Event('addstream'); n.stream = t, e.dispatchEvent(n) } }) }), t.apply(e, arguments) } } } function u (e) { if (a(e) === 'object' && e.RTCPeerConnection) { var t = e.RTCPeerConnection.prototype; var n = t.createOffer; var r = t.createAnswer; var i = t.setLocalDescription; var o = t.setRemoteDescription; var s = t.addIceCandidate; t.createOffer = function (e, t) { var r = arguments.length >= 2 ? arguments[2] : arguments[0]; var i = n.apply(this, [r]); return t ? (i.then(e, t), Promise.resolve()) : i }, t.createAnswer = function (e, t) { var n = arguments.length >= 2 ? arguments[2] : arguments[0]; var i = r.apply(this, [n]); return t ? (i.then(e, t), Promise.resolve()) : i }; var c = function (e, t, n) { var r = i.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }; t.setLocalDescription = c, c = function (e, t, n) { var r = o.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }, t.setRemoteDescription = c, c = function (e, t, n) { var r = s.apply(this, [e]); return n ? (r.then(t, n), Promise.resolve()) : r }, t.addIceCandidate = c } } function d (e) { var t = e && e.navigator; if (t.mediaDevices && t.mediaDevices.getUserMedia) { var n = t.mediaDevices; var r = n.getUserMedia.bind(n); t.mediaDevices.getUserMedia = function (e) { return r(p(e)) } }!t.getUserMedia && t.mediaDevices && t.mediaDevices.getUserMedia && (t.getUserMedia = function (e, n, r) { t.mediaDevices.getUserMedia(e).then(n, r) }) } function p (e) { return e && void 0 !== e.video ? Object.assign({}, e, { video: r.compactObject(e.video) }) : e } function l (e) { var t = e.RTCPeerConnection; e.RTCPeerConnection = function (e, n) { if (e && e.iceServers) { for (var i = [], o = 0; o < e.iceServers.length; o++) { var a = e.iceServers[o]; !a.hasOwnProperty('urls') && a.hasOwnProperty('url') ? (r.deprecated('RTCIceServer.url', 'RTCIceServer.urls'), (a = JSON.parse(JSON.stringify(a))).urls = a.url, delete a.url, i.push(a)) : i.push(e.iceServers[o]) }e.iceServers = i } return new t(e, n) }, e.RTCPeerConnection.prototype = t.prototype, 'generateCertificate' in e.RTCPeerConnection && Object.defineProperty(e.RTCPeerConnection, 'generateCertificate', { get: function () { return t.generateCertificate } }) } function f (e) { a(e) === 'object' && e.RTCTrackEvent && 'receiver' in e.RTCTrackEvent.prototype && !('transceiver' in e.RTCTrackEvent.prototype) && Object.defineProperty(e.RTCTrackEvent.prototype, 'transceiver', { get: function () { return { receiver: this.receiver } } }) } function h (e) { var t = e.RTCPeerConnection.prototype.createOffer; e.RTCPeerConnection.prototype.createOffer = function (e) { if (e) { void 0 !== e.offerToReceiveAudio && (e.offerToReceiveAudio = !!e.offerToReceiveAudio); var n = this.getTransceivers().find(function (e) { return e.receiver.track.kind === 'audio' }); !1 === e.offerToReceiveAudio && n ? n.direction === 'sendrecv' ? n.setDirection ? n.setDirection('sendonly') : n.direction = 'sendonly' : n.direction === 'recvonly' && (n.setDirection ? n.setDirection('inactive') : n.direction = 'inactive') : !0 !== e.offerToReceiveAudio || n || this.addTransceiver('audio'), void 0 !== e.offerToReceiveVideo && (e.offerToReceiveVideo = !!e.offerToReceiveVideo); var r = this.getTransceivers().find(function (e) { return e.receiver.track.kind === 'video' }); !1 === e.offerToReceiveVideo && r ? r.direction === 'sendrecv' ? r.setDirection ? r.setDirection('sendonly') : r.direction = 'sendonly' : r.direction === 'recvonly' && (r.setDirection ? r.setDirection('inactive') : r.direction = 'inactive') : !0 !== e.offerToReceiveVideo || r || this.addTransceiver('video') } return t.apply(this, arguments) } } }, { '../utils': 'iSxC' }], GOQK: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.shimRTCIceCandidate = u, n.shimMaxMessageSize = d, n.shimSendThrowTypeError = p, n.shimConnectionState = l, n.removeAllowExtmapMixed = f; var r = s(e('sdp')); var i = a(e('./utils')); function o () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return o = function () { return e }, e } function a (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = o(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var i in e) if (Object.prototype.hasOwnProperty.call(e, i)) { var a = r ? Object.getOwnPropertyDescriptor(e, i) : null; a && (a.get || a.set) ? Object.defineProperty(n, i, a) : n[i] = e[i] } return n.default = e, t && t.set(e, n), n } function s (e) { return e && e.__esModule ? e : { default: e } } function c (e) { return (c = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function u (e) { if (e.RTCIceCandidate && (!e.RTCIceCandidate || !('foundation' in e.RTCIceCandidate.prototype))) { var t = e.RTCIceCandidate; e.RTCIceCandidate = function (e) { if (c(e) === 'object' && e.candidate && e.candidate.indexOf('a=') === 0 && ((e = JSON.parse(JSON.stringify(e))).candidate = e.candidate.substr(2)), e.candidate && e.candidate.length) { var n = new t(e); var i = r.default.parseCandidate(e.candidate); var o = Object.assign(n, i); return o.toJSON = function () { return { candidate: o.candidate, sdpMid: o.sdpMid, sdpMLineIndex: o.sdpMLineIndex, usernameFragment: o.usernameFragment } }, o } return new t(e) }, e.RTCIceCandidate.prototype = t.prototype, i.wrapPeerConnectionEvent(e, 'icecandidate', function (t) { return t.candidate && Object.defineProperty(t, 'candidate', { value: new e.RTCIceCandidate(t.candidate), writable: 'false' }), t }) } } function d (e) { if (e.RTCPeerConnection) { var t = i.detectBrowser(e); 'sctp' in e.RTCPeerConnection.prototype || Object.defineProperty(e.RTCPeerConnection.prototype, 'sctp', { get: function () { return void 0 === this._sctp ? null : this._sctp } }); var n = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function () { if (this._sctp = null, t.browser === 'chrome' && t.version >= 76) { var { sdpSemantics: e } = this.getConfiguration(); e === 'plan-b' && Object.defineProperty(this, 'sctp', { get: function () { return void 0 === this._sctp ? null : this._sctp }, enumerable: !0, configurable: !0 }) } if (function (e) { if (!e || !e.sdp) return !1; var t = r.default.splitSections(e.sdp); return t.shift(), t.some(function (e) { var t = r.default.parseMLine(e); return t && t.kind === 'application' && t.protocol.indexOf('SCTP') !== -1 }) }(arguments[0])) { var i; var o = (function (e) { var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/); if (t === null || t.length < 2) return -1; var n = parseInt(t[1], 10); return n != n ? -1 : n }(arguments[0])); var a = (u = o, d = 65536, t.browser === 'firefox' && (d = t.version < 57 ? u === -1 ? 16384 : 2147483637 : t.version < 60 ? t.version === 57 ? 65535 : 65536 : 2147483637), d); var s = (function (e, n) { var i = 65536; t.browser === 'firefox' && t.version === 57 && (i = 65535); var o = r.default.matchPrefix(e.sdp, 'a=max-message-size:'); return o.length > 0 ? i = parseInt(o[0].substr(19), 10) : t.browser === 'firefox' && n !== -1 && (i = 2147483637), i }(arguments[0], o)); i = a === 0 && s === 0 ? Number.POSITIVE_INFINITY : a === 0 || s === 0 ? Math.max(a, s) : Math.min(a, s); var c = {}; Object.defineProperty(c, 'maxMessageSize', { get: function () { return i } }), this._sctp = c } var u, d; return n.apply(this, arguments) } } } function p (e) { if (e.RTCPeerConnection && 'createDataChannel' in e.RTCPeerConnection.prototype) { var t = e.RTCPeerConnection.prototype.createDataChannel; e.RTCPeerConnection.prototype.createDataChannel = function () { var e = t.apply(this, arguments); return n(e, this), e }, i.wrapPeerConnectionEvent(e, 'datachannel', function (e) { return n(e.channel, e.target), e }) } function n (e, t) { var n = e.send; e.send = function () { var r = arguments[0]; var i = r.length || r.size || r.byteLength; if (e.readyState === 'open' && t.sctp && i > t.sctp.maxMessageSize) throw new TypeError('Message too large (can send a maximum of ' + t.sctp.maxMessageSize + ' bytes)'); return n.apply(e, arguments) } } } function l (e) { if (e.RTCPeerConnection && !('connectionState' in e.RTCPeerConnection.prototype)) { var t = e.RTCPeerConnection.prototype; Object.defineProperty(t, 'connectionState', { get: function () { return { completed: 'connected', checking: 'connecting' }[this.iceConnectionState] || this.iceConnectionState }, enumerable: !0, configurable: !0 }), Object.defineProperty(t, 'onconnectionstatechange', { get: function () { return this._onconnectionstatechange || null }, set: function (e) { this._onconnectionstatechange && (this.removeEventListener('connectionstatechange', this._onconnectionstatechange), delete this._onconnectionstatechange), e && this.addEventListener('connectionstatechange', this._onconnectionstatechange = e) }, enumerable: !0, configurable: !0 }), ['setLocalDescription', 'setRemoteDescription'].forEach(function (e) { var n = t[e]; t[e] = function () { return this._connectionstatechangepoly || (this._connectionstatechangepoly = function (e) { var t = e.target; if (t._lastConnectionState !== t.connectionState) { t._lastConnectionState = t.connectionState; var n = new Event('connectionstatechange', e); t.dispatchEvent(n) } return e }, this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly)), n.apply(this, arguments) } }) } } function f (e) { if (e.RTCPeerConnection) { var t = i.detectBrowser(e); if (!(t.browser === 'chrome' && t.version >= 71)) { var n = e.RTCPeerConnection.prototype.setRemoteDescription; e.RTCPeerConnection.prototype.setRemoteDescription = function (e) { return e && e.sdp && e.sdp.indexOf('\na=extmap-allow-mixed') !== -1 && (e.sdp = e.sdp.split('\n').filter(function (e) { return e.trim() !== 'a=extmap-allow-mixed' }).join('\n')), n.apply(this, arguments) } } } } }, { sdp: 'YHvh', './utils': 'iSxC' }], KtlG: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.adapterFactory = p; var r = d(e('./utils')); var i = d(e('./chrome/chrome_shim')); var o = d(e('./edge/edge_shim')); var a = d(e('./firefox/firefox_shim')); var s = d(e('./safari/safari_shim')); var c = d(e('./common_shim')); function u () { if (typeof WeakMap !== 'function') return null; var e = new WeakMap(); return u = function () { return e }, e } function d (e) { if (e && e.__esModule) return e; if (e === null || typeof e !== 'object' && typeof e !== 'function') return { default: e }; var t = u(); if (t && t.has(e)) return t.get(e); var n = {}; var r = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var i in e) if (Object.prototype.hasOwnProperty.call(e, i)) { var o = r ? Object.getOwnPropertyDescriptor(e, i) : null; o && (o.get || o.set) ? Object.defineProperty(n, i, o) : n[i] = e[i] } return n.default = e, t && t.set(e, n), n } function p () { var { window: e } = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : { shimChrome: !0, shimFirefox: !0, shimEdge: !0, shimSafari: !0 }; var n = r.log; var u = r.detectBrowser(e); var d = { browserDetails: u, commonShim: c, extractVersion: r.extractVersion, disableLog: r.disableLog, disableWarnings: r.disableWarnings }; switch (u.browser) { case 'chrome':if (!i || !i.shimPeerConnection || !t.shimChrome) return n('Chrome shim is not included in this adapter release.'), d; n('adapter.js shimming chrome.'), d.browserShim = i, i.shimGetUserMedia(e), i.shimMediaStream(e), i.shimPeerConnection(e), i.shimOnTrack(e), i.shimAddTrackRemoveTrack(e), i.shimGetSendersWithDtmf(e), i.shimGetStats(e), i.shimSenderReceiverGetStats(e), i.fixNegotiationNeeded(e), c.shimRTCIceCandidate(e), c.shimConnectionState(e), c.shimMaxMessageSize(e), c.shimSendThrowTypeError(e), c.removeAllowExtmapMixed(e); break; case 'firefox':if (!a || !a.shimPeerConnection || !t.shimFirefox) return n('Firefox shim is not included in this adapter release.'), d; n('adapter.js shimming firefox.'), d.browserShim = a, a.shimGetUserMedia(e), a.shimPeerConnection(e), a.shimOnTrack(e), a.shimRemoveStream(e), a.shimSenderGetStats(e), a.shimReceiverGetStats(e), a.shimRTCDataChannel(e), a.shimAddTransceiver(e), a.shimCreateOffer(e), a.shimCreateAnswer(e), c.shimRTCIceCandidate(e), c.shimConnectionState(e), c.shimMaxMessageSize(e), c.shimSendThrowTypeError(e); break; case 'edge':if (!o || !o.shimPeerConnection || !t.shimEdge) return n('MS edge shim is not included in this adapter release.'), d; n('adapter.js shimming edge.'), d.browserShim = o, o.shimGetUserMedia(e), o.shimGetDisplayMedia(e), o.shimPeerConnection(e), o.shimReplaceTrack(e), c.shimMaxMessageSize(e), c.shimSendThrowTypeError(e); break; case 'safari':if (!s || !t.shimSafari) return n('Safari shim is not included in this adapter release.'), d; n('adapter.js shimming safari.'), d.browserShim = s, s.shimRTCIceServerUrls(e), s.shimCreateOfferLegacy(e), s.shimCallbacksAPI(e), s.shimLocalStreamsAPI(e), s.shimRemoteStreamsAPI(e), s.shimTrackEventTransceiver(e), s.shimGetUserMedia(e), c.shimRTCIceCandidate(e), c.shimMaxMessageSize(e), c.shimSendThrowTypeError(e), c.removeAllowExtmapMixed(e); break; default:n('Unsupported browser!') } return d } }, { './utils': 'iSxC', './chrome/chrome_shim': 'uI5X', './edge/edge_shim': 'XRic', './firefox/firefox_shim': 'Fzdr', './safari/safari_shim': 't1lL', './common_shim': 'GOQK' }], tI1X: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), n.default = void 0; var r = e('./adapter_factory.js'); var i = (0, r.adapterFactory)({ window: window }); var o = i; n.default = o }, { './adapter_factory.js': 'KtlG' }], sXtV: [function (e, t, n) { 'use strict'; var r = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var i = r(e('webrtc-adapter')); n.webRTCAdapter = i.default }, { 'webrtc-adapter': 'tI1X' }], I31f: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }); var r = e('./adapter'); n.Supports = new (function () { function e () { this.isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform), this.supportedBrowsers = ['firefox', 'chrome', 'safari'], this.minFirefoxVersion = 59, this.minChromeVersion = 72, this.minSafariVersion = 605 } return e.prototype.isWebRTCSupported = function () { return typeof RTCPeerConnection !== 'undefined' }, e.prototype.isBrowserSupported = function () { var e = this.getBrowser(); var t = this.getVersion(); return !!this.supportedBrowsers.includes(e) && (e === 'chrome' ? t >= this.minChromeVersion : e === 'firefox' ? t >= this.minFirefoxVersion : e === 'safari' && !this.isIOS && t >= this.minSafariVersion) }, e.prototype.getBrowser = function () { return r.webRTCAdapter.browserDetails.browser }, e.prototype.getVersion = function () { return r.webRTCAdapter.browserDetails.version || 0 }, e.prototype.isUnifiedPlanSupported = function () { var e; var t = this.getBrowser(); var n = r.webRTCAdapter.browserDetails.version || 0; if (t === 'chrome' && n < 72) return !1; if (t === 'firefox' && n >= 59) return !0; if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return !1; var i = !1; try { (e = new RTCPeerConnection()).addTransceiver('audio'), i = !0 } catch (o) {} finally { e && e.close() } return i }, e.prototype.toString = function () { return 'Supports: \n    browser:' + this.getBrowser() + ' \n    version:' + this.getVersion() + ' \n    isIOS:' + this.isIOS + ' \n    isWebRTCSupported:' + this.isWebRTCSupported() + ' \n    isBrowserSupported:' + this.isBrowserSupported() + ' \n    isUnifiedPlanSupported:' + this.isUnifiedPlanSupported() }, e }())() }, { './adapter': 'sXtV' }], BHXf: [function (e, t, n) { 'use strict'; var r = this && this.__importStar || function (e) { if (e && e.__esModule) return e; var t = {}; if (e != null) for (var n in e)Object.hasOwnProperty.call(e, n) && (t[n] = e[n]); return t.default = e, t }; Object.defineProperty(n, '__esModule', { value: !0 }); var i = r(e('peerjs-js-binarypack')); var o = e('./supports'); var a = { iceServers: [{ urls: 'stun:stun.l.google.com:19302' }, { urls: 'turn:0.peerjs.com:3478', username: 'peerjs', credential: 'peerjsp' }], sdpSemantics: 'unified-plan' }; n.util = new (function () { function e () { this.CLOUD_HOST = '0.peerjs.com', this.CLOUD_PORT = 443, this.chunkedBrowsers = { Chrome: 1, chrome: 1 }, this.chunkedMTU = 16300, this.defaultConfig = a, this.browser = o.Supports.getBrowser(), this.browserVersion = o.Supports.getVersion(), this.supports = (function () { var e; var t = { browser: o.Supports.isBrowserSupported(), webRTC: o.Supports.isWebRTCSupported(), audioVideo: !1, data: !1, binaryBlob: !1, reliable: !1 }; if (!t.webRTC) return t; try { e = new RTCPeerConnection(a), t.audioVideo = !0; var n = void 0; try { n = e.createDataChannel('_PEERJSTEST', { ordered: !0 }), t.data = !0, t.reliable = !!n.ordered; try { n.binaryType = 'blob', t.binaryBlob = !o.Supports.isIOS } catch (r) {} } catch (r) {} finally { n && n.close() } } catch (r) {} finally { e && e.close() } return t }()), this.pack = i.pack, this.unpack = i.unpack, this._dataCount = 1 } return e.prototype.noop = function () {}, e.prototype.validateId = function (e) { return !e || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(e) }, e.prototype.chunk = function (e) { for (var t = [], r = e.size, i = Math.ceil(r / n.util.chunkedMTU), o = 0, a = 0; a < r;) { var s = Math.min(r, a + n.util.chunkedMTU); var c = e.slice(a, s); var u = { __peerData: this._dataCount, n: o, data: c, total: i }; t.push(u), a = s, o++ } return this._dataCount++, t }, e.prototype.blobToArrayBuffer = function (e, t) { var n = new FileReader(); return n.onload = function (e) { e.target && t(e.target.result) }, n.readAsArrayBuffer(e), n }, e.prototype.binaryStringToArrayBuffer = function (e) { for (var t = new Uint8Array(e.length), n = 0; n < e.length; n++)t[n] = 255 & e.charCodeAt(n); return t.buffer }, e.prototype.randomToken = function () { return Math.random().toString(36).substr(2) }, e.prototype.isSecure = function () { return location.protocol === 'https:' }, e }())() }, { 'peerjs-js-binarypack': 'kdPp', './supports': 'I31f' }], JJlS: [function (e, t, n) { 'use strict'; var r = Object.prototype.hasOwnProperty; var i = '~'; function o () {} function a (e, t, n) { this.fn = e, this.context = t, this.once = n || !1 } function s (e, t, n, r, o) { if (typeof n !== 'function') throw new TypeError('The listener must be a function'); var s = new a(n, r || e, o); var c = i ? i + t : t; return e._events[c] ? e._events[c].fn ? e._events[c] = [e._events[c], s] : e._events[c].push(s) : (e._events[c] = s, e._eventsCount++), e } function c (e, t) { --e._eventsCount == 0 ? e._events = new o() : delete e._events[t] } function u () { this._events = new o(), this._eventsCount = 0 }Object.create && (o.prototype = Object.create(null), (new o()).__proto__ || (i = !1)), u.prototype.eventNames = function () { var e; var t; var n = []; if (this._eventsCount === 0) return n; for (t in e = this._events)r.call(e, t) && n.push(i ? t.slice(1) : t); return Object.getOwnPropertySymbols ? n.concat(Object.getOwnPropertySymbols(e)) : n }, u.prototype.listeners = function (e) { var t = i ? i + e : e; var n = this._events[t]; if (!n) return []; if (n.fn) return [n.fn]; for (var r = 0, o = n.length, a = new Array(o); r < o; r++)a[r] = n[r].fn; return a }, u.prototype.listenerCount = function (e) { var t = i ? i + e : e; var n = this._events[t]; return n ? n.fn ? 1 : n.length : 0 }, u.prototype.emit = function (e, t, n, r, o, a) { var s = i ? i + e : e; if (!this._events[s]) return !1; var c; var u; var d = this._events[s]; var p = arguments.length; if (d.fn) { switch (d.once && this.removeListener(e, d.fn, void 0, !0), p) { case 1:return d.fn.call(d.context), !0; case 2:return d.fn.call(d.context, t), !0; case 3:return d.fn.call(d.context, t, n), !0; case 4:return d.fn.call(d.context, t, n, r), !0; case 5:return d.fn.call(d.context, t, n, r, o), !0; case 6:return d.fn.call(d.context, t, n, r, o, a), !0 } for (u = 1, c = new Array(p - 1); u < p; u++)c[u - 1] = arguments[u]; d.fn.apply(d.context, c) } else { var l; var f = d.length; for (u = 0; u < f; u++) switch (d[u].once && this.removeListener(e, d[u].fn, void 0, !0), p) { case 1:d[u].fn.call(d[u].context); break; case 2:d[u].fn.call(d[u].context, t); break; case 3:d[u].fn.call(d[u].context, t, n); break; case 4:d[u].fn.call(d[u].context, t, n, r); break; default:if (!c) for (l = 1, c = new Array(p - 1); l < p; l++)c[l - 1] = arguments[l]; d[u].fn.apply(d[u].context, c) } } return !0 }, u.prototype.on = function (e, t, n) { return s(this, e, t, n, !1) }, u.prototype.once = function (e, t, n) { return s(this, e, t, n, !0) }, u.prototype.removeListener = function (e, t, n, r) { var o = i ? i + e : e; if (!this._events[o]) return this; if (!t) return c(this, o), this; var a = this._events[o]; if (a.fn)a.fn !== t || r && !a.once || n && a.context !== n || c(this, o); else { for (var s = 0, u = [], d = a.length; s < d; s++)(a[s].fn !== t || r && !a[s].once || n && a[s].context !== n) && u.push(a[s]); u.length ? this._events[o] = u.length === 1 ? u[0] : u : c(this, o) } return this }, u.prototype.removeAllListeners = function (e) { var t; return e ? (t = i ? i + e : e, this._events[t] && c(this, t)) : (this._events = new o(), this._eventsCount = 0), this }, u.prototype.off = u.prototype.removeListener, u.prototype.addListener = u.prototype.on, u.prefixed = i, u.EventEmitter = u, typeof t !== 'undefined' && (t.exports = u) }, {}], WOs9: [function (e, t, n) { 'use strict'; var r = this && this.__read || function (e, t) { var n = typeof Symbol === 'function' && e[Symbol.iterator]; if (!n) return e; var r; var i; var o = n.call(e); var a = []; try { for (;(void 0 === t || t-- > 0) && !(r = o.next()).done;)a.push(r.value) } catch (s) { i = { error: s } } finally { try { r && !r.done && (n = o.return) && n.call(o) } finally { if (i) throw i.error } } return a }; var i = this && this.__spread || function () { for (var e = [], t = 0; t < arguments.length; t++)e = e.concat(r(arguments[t])); return e }; Object.defineProperty(n, '__esModule', { value: !0 }); var o; var a = 'PeerJS: '; !(function (e) { e[e.Disabled = 0] = 'Disabled', e[e.Errors = 1] = 'Errors', e[e.Warnings = 2] = 'Warnings', e[e.All = 3] = 'All' }(o = n.LogLevel || (n.LogLevel = {}))); var s = (function () { function e () { this._logLevel = o.Disabled } return Object.defineProperty(e.prototype, 'logLevel', { get: function () { return this._logLevel }, set: function (e) { this._logLevel = e }, enumerable: !0, configurable: !0 }), e.prototype.log = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; this._logLevel >= o.All && this._print.apply(this, i([o.All], e)) }, e.prototype.warn = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; this._logLevel >= o.Warnings && this._print.apply(this, i([o.Warnings], e)) }, e.prototype.error = function () { for (var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t]; this._logLevel >= o.Errors && this._print.apply(this, i([o.Errors], e)) }, e.prototype.setLogFunction = function (e) { this._print = e }, e.prototype._print = function (e) { for (var t = [], n = 1; n < arguments.length; n++)t[n - 1] = arguments[n]; var r = i([a], t); for (var s in r)r[s] instanceof Error && (r[s] = '(' + r[s].name + ') ' + r[s].message); e >= o.All ? console.log.apply(console, i(r)) : e >= o.Warnings ? console.warn.apply(console, i(['WARNING'], r)) : e >= o.Errors && console.error.apply(console, i(['ERROR'], r)) }, e }()); n.default = new s() }, {}], ZRYf: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }), (function (e) { e.Open = 'open', e.Stream = 'stream', e.Data = 'data', e.Close = 'close', e.Error = 'error', e.IceStateChanged = 'iceStateChanged' }(n.ConnectionEventType || (n.ConnectionEventType = {}))), (function (e) { e.Data = 'data', e.Media = 'media' }(n.ConnectionType || (n.ConnectionType = {}))), (function (e) { e.Open = 'open', e.Close = 'close', e.Connection = 'connection', e.Call = 'call', e.Disconnected = 'disconnected', e.Error = 'error' }(n.PeerEventType || (n.PeerEventType = {}))), (function (e) { e.BrowserIncompatible = 'browser-incompatible', e.Disconnected = 'disconnected', e.InvalidID = 'invalid-id', e.InvalidKey = 'invalid-key', e.Network = 'network', e.PeerUnavailable = 'peer-unavailable', e.SslUnavailable = 'ssl-unavailable', e.ServerError = 'server-error', e.SocketError = 'socket-error', e.SocketClosed = 'socket-closed', e.UnavailableID = 'unavailable-id', e.WebRTC = 'webrtc' }(n.PeerErrorType || (n.PeerErrorType = {}))), (function (e) { e.Binary = 'binary', e.BinaryUTF8 = 'binary-utf8', e.JSON = 'json' }(n.SerializationType || (n.SerializationType = {}))), (function (e) { e.Message = 'message', e.Disconnected = 'disconnected', e.Error = 'error', e.Close = 'close' }(n.SocketEventType || (n.SocketEventType = {}))), (function (e) { e.Heartbeat = 'HEARTBEAT', e.Candidate = 'CANDIDATE', e.Offer = 'OFFER', e.Answer = 'ANSWER', e.Open = 'OPEN', e.Error = 'ERROR', e.IdTaken = 'ID-TAKEN', e.InvalidKey = 'INVALID-KEY', e.Leave = 'LEAVE', e.Expire = 'EXPIRE' }(n.ServerMessageType || (n.ServerMessageType = {}))) }, {}], wJlv: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); var i = this && this.__read || function (e, t) { var n = typeof Symbol === 'function' && e[Symbol.iterator]; if (!n) return e; var r; var i; var o = n.call(e); var a = []; try { for (;(void 0 === t || t-- > 0) && !(r = o.next()).done;)a.push(r.value) } catch (d) { i = { error: d } } finally { try { r && !r.done && (n = o.return) && n.call(o) } finally { if (i) throw i.error } } return a }; var o = this && this.__spread || function () { for (var e = [], t = 0; t < arguments.length; t++)e = e.concat(i(arguments[t])); return e }; var a = this && this.__values || function (e) { var t = typeof Symbol === 'function' && Symbol.iterator; var n = t && e[t]; var r = 0; if (n) return n.call(e); if (e && typeof e.length === 'number') return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.') }; var s = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var c = e('eventemitter3'); var u = s(e('./logger')); var d = e('./enums'); var p = (function (e) { function t (t, n, r, i, o, a) { void 0 === a && (a = 5e3); var s = e.call(this) || this; s.pingInterval = a, s._disconnected = !0, s._messagesQueue = []; var c = t ? 'wss://' : 'ws://'; return s._baseUrl = c + n + ':' + r + i + 'peerjs?key=' + o, s } return r(t, e), t.prototype.start = function (e, t) { var n = this; this._id = e; var r = this._baseUrl + '&id=' + e + '&token=' + t; !this._socket && this._disconnected && (this._socket = new WebSocket(r), this._disconnected = !1, this._socket.onmessage = function (e) { var t; try { t = JSON.parse(e.data), u.default.log('Server message received:', t) } catch (r) { return void u.default.log('Invalid server message', e.data) }n.emit(d.SocketEventType.Message, t) }, this._socket.onclose = function (e) { n._disconnected || (u.default.log('Socket closed.', e), n._cleanup(), n._disconnected = !0, n.emit(d.SocketEventType.Disconnected)) }, this._socket.onopen = function () { n._disconnected || (n._sendQueuedMessages(), u.default.log('Socket open'), n._scheduleHeartbeat()) }) }, t.prototype._scheduleHeartbeat = function () { var e = this; this._wsPingTimer = setTimeout(function () { e._sendHeartbeat() }, this.pingInterval) }, t.prototype._sendHeartbeat = function () { if (this._wsOpen()) { var e = JSON.stringify({ type: d.ServerMessageType.Heartbeat }); this._socket.send(e), this._scheduleHeartbeat() } else u.default.log('Cannot send heartbeat, because socket closed') }, t.prototype._wsOpen = function () { return !!this._socket && this._socket.readyState === 1 }, t.prototype._sendQueuedMessages = function () { var e; var t; var n = o(this._messagesQueue); this._messagesQueue = []; try { for (var r = a(n), i = r.next(); !i.done; i = r.next()) { var s = i.value; this.send(s) } } catch (p) { e = { error: p } } finally { try { i && !i.done && (t = r.return) && t.call(r) } finally { if (e) throw e.error } } }, t.prototype.send = function (e) { if (!this._disconnected) if (this._id) if (e.type) { if (this._wsOpen()) { var t = JSON.stringify(e); this._socket.send(t) } } else this.emit(d.SocketEventType.Error, 'Invalid message'); else this._messagesQueue.push(e) }, t.prototype.close = function () { this._disconnected || (this._cleanup(), this._disconnected = !0) }, t.prototype._cleanup = function () { this._socket && (this._socket.onopen = this._socket.onmessage = this._socket.onclose = null, this._socket.close(), this._socket = void 0), clearTimeout(this._wsPingTimer) }, t }(c.EventEmitter)); n.Socket = p }, { eventemitter3: 'JJlS', './logger': 'WOs9', './enums': 'ZRYf' }], HCdX: [function (e, t, n) { 'use strict'; var r = this && this.__assign || function () { return (r = Object.assign || function (e) { for (var t, n = 1, r = arguments.length; n < r; n++) for (var i in t = arguments[n])Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); return e }).apply(this, arguments) }; var i = this && this.__awaiter || function (e, t, n, r) { return new (n || (n = Promise))(function (i, o) { function a (e) { try { c(r.next(e)) } catch (t) { o(t) } } function s (e) { try { c(r.throw(e)) } catch (t) { o(t) } } function c (e) { var t; e.done ? i(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) { e(t) })).then(a, s) }c((r = r.apply(e, t || [])).next()) }) }; var o = this && this.__generator || function (e, t) { var n; var r; var i; var o; var a = { label: 0, sent: function () { if (1 & i[0]) throw i[1]; return i[1] }, trys: [], ops: [] }; return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol === 'function' && (o[Symbol.iterator] = function () { return this }), o; function s (o) { return function (s) { return (function (o) { if (n) throw new TypeError('Generator is already executing.'); for (;a;) try { if (n = 1, r && (i = 2 & o[0] ? r.return : o[0] ? r.throw || ((i = r.return) && i.call(r), 0) : r.next) && !(i = i.call(r, o[1])).done) return i; switch (r = 0, i && (o = [2 & o[0], i.value]), o[0]) { case 0:case 1:i = o; break; case 4:return a.label++, { value: o[1], done: !1 }; case 5:a.label++, r = o[1], o = [0]; continue; case 7:o = a.ops.pop(), a.trys.pop(); continue; default:if (!(i = (i = a.trys).length > 0 && i[i.length - 1]) && (o[0] === 6 || o[0] === 2)) { a = 0; continue } if (o[0] === 3 && (!i || o[1] > i[0] && o[1] < i[3])) { a.label = o[1]; break } if (o[0] === 6 && a.label < i[1]) { a.label = i[1], i = o; break } if (i && a.label < i[2]) { a.label = i[2], a.ops.push(o); break }i[2] && a.ops.pop(), a.trys.pop(); continue }o = t.call(e, a) } catch (s) { o = [6, s], r = 0 } finally { n = i = 0 } if (5 & o[0]) throw o[1]; return { value: o[0] ? o[1] : void 0, done: !0 } }([o, s])) } } }; var a = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var s = e('./util'); var c = a(e('./logger')); var u = e('./enums'); var d = (function () { function e (e) { this.connection = e } return e.prototype.startConnection = function (e) { var t = this._startPeerConnection(); if (this.connection.peerConnection = t, this.connection.type === u.ConnectionType.Media && e._stream && this._addTracksToConnection(e._stream, t), e.originator) { if (this.connection.type === u.ConnectionType.Data) { var n = this.connection; var r = { ordered: !!e.reliable }; var i = t.createDataChannel(n.label, r); n.initialize(i) } this._makeOffer() } else this.handleSDP('OFFER', e.sdp) }, e.prototype._startPeerConnection = function () { c.default.log('Creating RTCPeerConnection.'); var e = new RTCPeerConnection(this.connection.provider.options.config); return this._setupListeners(e), e }, e.prototype._setupListeners = function (e) { var t = this; var n = this.connection.peer; var r = this.connection.connectionId; var i = this.connection.type; var o = this.connection.provider; c.default.log('Listening for ICE candidates.'), e.onicecandidate = function (e) { e.candidate && e.candidate.candidate && (c.default.log('Received ICE candidates for ' + n + ':', e.candidate), o.socket.send({ type: u.ServerMessageType.Candidate, payload: { candidate: e.candidate, type: i, connectionId: r }, dst: n })) }, e.oniceconnectionstatechange = function () { switch (e.iceConnectionState) { case 'failed':c.default.log('iceConnectionState is failed, closing connections to ' + n), t.connection.emit(u.ConnectionEventType.Error, new Error('Negotiation of connection to ' + n + ' failed.')), t.connection.close(); break; case 'closed':c.default.log('iceConnectionState is closed, closing connections to ' + n), t.connection.emit(u.ConnectionEventType.Error, new Error('Connection to ' + n + ' closed.')), t.connection.close(); break; case 'disconnected':c.default.log('iceConnectionState changed to disconnected on the connection with ' + n); break; case 'completed':e.onicecandidate = s.util.noop }t.connection.emit(u.ConnectionEventType.IceStateChanged, e.iceConnectionState) }, c.default.log('Listening for data channel'), e.ondatachannel = function (e) { c.default.log('Received data channel'); var t = e.channel; o.getConnection(n, r).initialize(t) }, c.default.log('Listening for remote stream'), e.ontrack = function (e) { c.default.log('Received remote stream'); var i = e.streams[0]; var a = o.getConnection(n, r); if (a.type === u.ConnectionType.Media) { var s = a; t._addStreamToMediaConnection(i, s) } } }, e.prototype.cleanup = function () { c.default.log('Cleaning up PeerConnection to ' + this.connection.peer); var e = this.connection.peerConnection; if (e) { this.connection.peerConnection = null, e.onicecandidate = e.oniceconnectionstatechange = e.ondatachannel = e.ontrack = function () {}; var t = e.signalingState !== 'closed'; var n = !1; if (this.connection.type === u.ConnectionType.Data) { var r = this.connection.dataChannel; r && (n = !!r.readyState && r.readyState !== 'closed') }(t || n) && e.close() } }, e.prototype._makeOffer = function () { return i(this, void 0, Promise, function () { var e, t, n, i, a, d, p; return o(this, function (o) { switch (o.label) { case 0:e = this.connection.peerConnection, t = this.connection.provider, o.label = 1; case 1:return o.trys.push([1, 7,, 8]), [4, e.createOffer(this.connection.options.constraints)]; case 2:n = o.sent(), c.default.log('Created offer.'), this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function' && (n.sdp = this.connection.options.sdpTransform(n.sdp) || n.sdp), o.label = 3; case 3:return o.trys.push([3, 5,, 6]), [4, e.setLocalDescription(n)]; case 4:return o.sent(), c.default.log('Set localDescription:', n, 'for:' + this.connection.peer), i = { sdp: n, type: this.connection.type, connectionId: this.connection.connectionId, metadata: this.connection.metadata, browser: s.util.browser }, this.connection.type === u.ConnectionType.Data && (a = this.connection, i = r(r({}, i), { label: a.label, reliable: a.reliable, serialization: a.serialization })), t.socket.send({ type: u.ServerMessageType.Offer, payload: i, dst: this.connection.peer }), [3, 6]; case 5:return (d = o.sent()) != 'OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer' && (t.emitError(u.PeerErrorType.WebRTC, d), c.default.log('Failed to setLocalDescription, ', d)), [3, 6]; case 6:return [3, 8]; case 7:return p = o.sent(), t.emitError(u.PeerErrorType.WebRTC, p), c.default.log('Failed to createOffer, ', p), [3, 8]; case 8:return [2] } }) }) }, e.prototype._makeAnswer = function () { return i(this, void 0, Promise, function () { var e, t, n, r, i; return o(this, function (o) { switch (o.label) { case 0:e = this.connection.peerConnection, t = this.connection.provider, o.label = 1; case 1:return o.trys.push([1, 7,, 8]), [4, e.createAnswer()]; case 2:n = o.sent(), c.default.log('Created answer.'), this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function' && (n.sdp = this.connection.options.sdpTransform(n.sdp) || n.sdp), o.label = 3; case 3:return o.trys.push([3, 5,, 6]), [4, e.setLocalDescription(n)]; case 4:return o.sent(), c.default.log('Set localDescription:', n, 'for:' + this.connection.peer), t.socket.send({ type: u.ServerMessageType.Answer, payload: { sdp: n, type: this.connection.type, connectionId: this.connection.connectionId, browser: s.util.browser }, dst: this.connection.peer }), [3, 6]; case 5:return r = o.sent(), t.emitError(u.PeerErrorType.WebRTC, r), c.default.log('Failed to setLocalDescription, ', r), [3, 6]; case 6:return [3, 8]; case 7:return i = o.sent(), t.emitError(u.PeerErrorType.WebRTC, i), c.default.log('Failed to create answer, ', i), [3, 8]; case 8:return [2] } }) }) }, e.prototype.handleSDP = function (e, t) { return i(this, void 0, Promise, function () { var n, r, i, a; return o(this, function (o) { switch (o.label) { case 0:t = new RTCSessionDescription(t), n = this.connection.peerConnection, r = this.connection.provider, c.default.log('Setting remote description', t), i = this, o.label = 1; case 1:return o.trys.push([1, 5,, 6]), [4, n.setRemoteDescription(t)]; case 2:return o.sent(), c.default.log('Set remoteDescription:' + e + ' for:' + this.connection.peer), e !== 'OFFER' ? [3, 4] : [4, i._makeAnswer()]; case 3:o.sent(), o.label = 4; case 4:return [3, 6]; case 5:return a = o.sent(), r.emitError(u.PeerErrorType.WebRTC, a), c.default.log('Failed to setRemoteDescription, ', a), [3, 6]; case 6:return [2] } }) }) }, e.prototype.handleCandidate = function (e) { return i(this, void 0, Promise, function () { var t, n, r, i, a, s; return o(this, function (o) { switch (o.label) { case 0:c.default.log('handleCandidate:', e), t = e.candidate, n = e.sdpMLineIndex, r = e.sdpMid, i = this.connection.peerConnection, a = this.connection.provider, o.label = 1; case 1:return o.trys.push([1, 3,, 4]), [4, i.addIceCandidate(new RTCIceCandidate({ sdpMid: r, sdpMLineIndex: n, candidate: t }))]; case 2:return o.sent(), c.default.log('Added ICE candidate for:' + this.connection.peer), [3, 4]; case 3:return s = o.sent(), a.emitError(u.PeerErrorType.WebRTC, s), c.default.log('Failed to handleCandidate, ', s), [3, 4]; case 4:return [2] } }) }) }, e.prototype._addTracksToConnection = function (e, t) { if (c.default.log('add tracks from stream ' + e.id + ' to peer connection'), !t.addTrack) return c.default.error("Your browser does't support RTCPeerConnection#addTrack. Ignored."); e.getTracks().forEach(function (n) { t.addTrack(n, e) }) }, e.prototype._addStreamToMediaConnection = function (e, t) { c.default.log('add stream ' + e.id + ' to media connection ' + t.connectionId), t.addStream(e) }, e }()); n.Negotiator = d }, { './util': 'BHXf', './logger': 'WOs9', './enums': 'ZRYf' }], tQFK: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); Object.defineProperty(n, '__esModule', { value: !0 }); var i = e('eventemitter3'); var o = (function (e) { function t (t, n, r) { var i = e.call(this) || this; return i.peer = t, i.provider = n, i.options = r, i._open = !1, i.metadata = r.metadata, i } return r(t, e), Object.defineProperty(t.prototype, 'open', { get: function () { return this._open }, enumerable: !0, configurable: !0 }), t }(i.EventEmitter)); n.BaseConnection = o }, { eventemitter3: 'JJlS' }], dbHP: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); var i = this && this.__assign || function () { return (i = Object.assign || function (e) { for (var t, n = 1, r = arguments.length; n < r; n++) for (var i in t = arguments[n])Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); return e }).apply(this, arguments) }; var o = this && this.__values || function (e) { var t = typeof Symbol === 'function' && Symbol.iterator; var n = t && e[t]; var r = 0; if (n) return n.call(e); if (e && typeof e.length === 'number') return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.') }; var a = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var s = e('./util'); var c = a(e('./logger')); var u = e('./negotiator'); var d = e('./enums'); var p = e('./baseconnection'); var l = (function (e) { function t (n, r, i) { var o = e.call(this, n, r, i) || this; return o._localStream = o.options._stream, o.connectionId = o.options.connectionId || t.ID_PREFIX + s.util.randomToken(), o._negotiator = new u.Negotiator(o), o._localStream && o._negotiator.startConnection({ _stream: o._localStream, originator: !0 }), o } return r(t, e), Object.defineProperty(t.prototype, 'type', { get: function () { return d.ConnectionType.Media }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'localStream', { get: function () { return this._localStream }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'remoteStream', { get: function () { return this._remoteStream }, enumerable: !0, configurable: !0 }), t.prototype.addStream = function (t) { c.default.log('Receiving stream', t), this._remoteStream = t, e.prototype.emit.call(this, d.ConnectionEventType.Stream, t) }, t.prototype.handleMessage = function (e) { var t = e.type; var n = e.payload; switch (e.type) { case d.ServerMessageType.Answer:this._negotiator.handleSDP(t, n.sdp), this._open = !0; break; case d.ServerMessageType.Candidate:this._negotiator.handleCandidate(n.candidate); break; default:c.default.warn('Unrecognized message type:' + t + ' from peer:' + this.peer) } }, t.prototype.answer = function (e, t) { var n, r; if (void 0 === t && (t = {}), this._localStream)c.default.warn('Local stream already exists on this MediaConnection. Are you answering a call twice?'); else { this._localStream = e, t && t.sdpTransform && (this.options.sdpTransform = t.sdpTransform), this._negotiator.startConnection(i(i({}, this.options._payload), { _stream: e })); var a = this.provider._getMessages(this.connectionId); try { for (var s = o(a), u = s.next(); !u.done; u = s.next()) { var d = u.value; this.handleMessage(d) } } catch (p) { n = { error: p } } finally { try { u && !u.done && (r = s.return) && r.call(s) } finally { if (n) throw n.error } } this._open = !0 } }, t.prototype.close = function () { this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this._localStream = null, this._remoteStream = null, this.provider && (this.provider._removeConnection(this), this.provider = null), this.options && this.options._stream && (this.options._stream = null), this.open && (this._open = !1, e.prototype.emit.call(this, d.ConnectionEventType.Close)) }, t.ID_PREFIX = 'mc_', t }(p.BaseConnection)); n.MediaConnection = l }, { './util': 'BHXf', './logger': 'WOs9', './negotiator': 'HCdX', './enums': 'ZRYf', './baseconnection': 'tQFK' }], GGp6: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); var i = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var o = e('eventemitter3'); var a = i(e('./logger')); var s = (function (e) { function t () { var t = e.call(this) || this; return t.fileReader = new FileReader(), t._queue = [], t._processing = !1, t.fileReader.onload = function (e) { t._processing = !1, e.target && t.emit('done', e.target.result), t.doNextTask() }, t.fileReader.onerror = function (e) { a.default.error('EncodingQueue error:', e), t._processing = !1, t.destroy(), t.emit('error', e) }, t } return r(t, e), Object.defineProperty(t.prototype, 'queue', { get: function () { return this._queue }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'size', { get: function () { return this.queue.length }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'processing', { get: function () { return this._processing }, enumerable: !0, configurable: !0 }), t.prototype.enque = function (e) { this.queue.push(e), this.processing || this.doNextTask() }, t.prototype.destroy = function () { this.fileReader.abort(), this._queue = [] }, t.prototype.doNextTask = function () { this.size !== 0 && (this.processing || (this._processing = !0, this.fileReader.readAsArrayBuffer(this.queue.shift()))) }, t }(o.EventEmitter)); n.EncodingQueue = s }, { eventemitter3: 'JJlS', './logger': 'WOs9' }], GBTQ: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); var i = this && this.__values || function (e) { var t = typeof Symbol === 'function' && Symbol.iterator; var n = t && e[t]; var r = 0; if (n) return n.call(e); if (e && typeof e.length === 'number') return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.') }; var o = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var a = e('./util'); var s = o(e('./logger')); var c = e('./negotiator'); var u = e('./enums'); var d = e('./baseconnection'); var p = e('./encodingQueue'); var l = (function (e) { function t (n, r, i) { var o = e.call(this, n, r, i) || this; return o.stringify = JSON.stringify, o.parse = JSON.parse, o._buffer = [], o._bufferSize = 0, o._buffering = !1, o._chunkedData = {}, o._encodingQueue = new p.EncodingQueue(), o.connectionId = o.options.connectionId || t.ID_PREFIX + a.util.randomToken(), o.label = o.options.label || o.connectionId, o.serialization = o.options.serialization || u.SerializationType.Binary, o.reliable = !!o.options.reliable, o._encodingQueue.on('done', function (e) { o._bufferedSend(e) }), o._encodingQueue.on('error', function () { s.default.error('DC#' + o.connectionId + ': Error occured in encoding from blob to arraybuffer, close DC'), o.close() }), o._negotiator = new c.Negotiator(o), o._negotiator.startConnection(o.options._payload || { originator: !0 }), o } return r(t, e), Object.defineProperty(t.prototype, 'type', { get: function () { return u.ConnectionType.Data }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'dataChannel', { get: function () { return this._dc }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'bufferSize', { get: function () { return this._bufferSize }, enumerable: !0, configurable: !0 }), t.prototype.initialize = function (e) { this._dc = e, this._configureDataChannel() }, t.prototype._configureDataChannel = function () { var e = this; a.util.supports.binaryBlob && !a.util.supports.reliable || (this.dataChannel.binaryType = 'arraybuffer'), this.dataChannel.onopen = function () { s.default.log('DC#' + e.connectionId + ' dc connection success'), e._open = !0, e.emit(u.ConnectionEventType.Open) }, this.dataChannel.onmessage = function (t) { s.default.log('DC#' + e.connectionId + ' dc onmessage:', t.data), e._handleDataMessage(t) }, this.dataChannel.onclose = function () { s.default.log('DC#' + e.connectionId + ' dc closed for:', e.peer), e.close() } }, t.prototype._handleDataMessage = function (t) { var n = this; var r = t.data; var i = r.constructor; var o = r; if (this.serialization === u.SerializationType.Binary || this.serialization === u.SerializationType.BinaryUTF8) { if (i === Blob) return void a.util.blobToArrayBuffer(r, function (e) { var t = a.util.unpack(e); n.emit(u.ConnectionEventType.Data, t) }); if (i === ArrayBuffer)o = a.util.unpack(r); else if (i === String) { var s = a.util.binaryStringToArrayBuffer(r); o = a.util.unpack(s) } } else this.serialization === u.SerializationType.JSON && (o = this.parse(r)); o.__peerData ? this._handleChunk(o) : e.prototype.emit.call(this, u.ConnectionEventType.Data, o) }, t.prototype._handleChunk = function (e) { var t = e.__peerData; var n = this._chunkedData[t] || { data: [], count: 0, total: e.total }; if (n.data[e.n] = e.data, n.count++, this._chunkedData[t] = n, n.total === n.count) { delete this._chunkedData[t]; var r = new Blob(n.data); this._handleDataMessage({ data: r }) } }, t.prototype.close = function () { this._buffer = [], this._bufferSize = 0, this._chunkedData = {}, this._negotiator && (this._negotiator.cleanup(), this._negotiator = null), this.provider && (this.provider._removeConnection(this), this.provider = null), this.dataChannel && (this.dataChannel.onopen = null, this.dataChannel.onmessage = null, this.dataChannel.onclose = null, this._dc = null), this._encodingQueue && (this._encodingQueue.destroy(), this._encodingQueue.removeAllListeners(), this._encodingQueue = null), this.open && (this._open = !1, e.prototype.emit.call(this, u.ConnectionEventType.Close)) }, t.prototype.send = function (t, n) { if (this.open) if (this.serialization === u.SerializationType.JSON) this._bufferedSend(this.stringify(t)); else if (this.serialization === u.SerializationType.Binary || this.serialization === u.SerializationType.BinaryUTF8) { var r = a.util.pack(t); if (!n && r.size > a.util.chunkedMTU) return void this._sendChunks(r); a.util.supports.binaryBlob ? this._bufferedSend(r) : this._encodingQueue.enque(r) } else this._bufferedSend(t); else e.prototype.emit.call(this, u.ConnectionEventType.Error, new Error('Connection is not open. You should listen for the `open` event before sending messages.')) }, t.prototype._bufferedSend = function (e) { !this._buffering && this._trySend(e) || (this._buffer.push(e), this._bufferSize = this._buffer.length) }, t.prototype._trySend = function (n) { var r = this; if (!this.open) return !1; if (this.dataChannel.bufferedAmount > t.MAX_BUFFERED_AMOUNT) return this._buffering = !0, setTimeout(function () { r._buffering = !1, r._tryBuffer() }, 50), !1; try { this.dataChannel.send(n) } catch (e) { return s.default.error('DC#:' + this.connectionId + ' Error when sending:', e), this._buffering = !0, this.close(), !1 } return !0 }, t.prototype._tryBuffer = function () { if (this.open && this._buffer.length !== 0) { var e = this._buffer[0]; this._trySend(e) && (this._buffer.shift(), this._bufferSize = this._buffer.length, this._tryBuffer()) } }, t.prototype._sendChunks = function (e) { var t; var n; var r = a.util.chunk(e); s.default.log('DC#' + this.connectionId + ' Try to send ' + r.length + ' chunks...'); try { for (var o = i(r), c = o.next(); !c.done; c = o.next()) { var u = c.value; this.send(u, !0) } } catch (d) { t = { error: d } } finally { try { c && !c.done && (n = o.return) && n.call(o) } finally { if (t) throw t.error } } }, t.prototype.handleMessage = function (e) { var t = e.payload; switch (e.type) { case u.ServerMessageType.Answer:this._negotiator.handleSDP(e.type, t.sdp); break; case u.ServerMessageType.Candidate:this._negotiator.handleCandidate(t.candidate); break; default:s.default.warn('Unrecognized message type:', e.type, 'from peer:', this.peer) } }, t.ID_PREFIX = 'dc_', t.MAX_BUFFERED_AMOUNT = 8388608, t }(d.BaseConnection)); n.DataConnection = l }, { './util': 'BHXf', './logger': 'WOs9', './negotiator': 'HCdX', './enums': 'ZRYf', './baseconnection': 'tQFK', './encodingQueue': 'GGp6' }], in7L: [function (e, t, n) { 'use strict'; var r = this && this.__awaiter || function (e, t, n, r) { return new (n || (n = Promise))(function (i, o) { function a (e) { try { c(r.next(e)) } catch (t) { o(t) } } function s (e) { try { c(r.throw(e)) } catch (t) { o(t) } } function c (e) { var t; e.done ? i(e.value) : (t = e.value, t instanceof n ? t : new n(function (e) { e(t) })).then(a, s) }c((r = r.apply(e, t || [])).next()) }) }; var i = this && this.__generator || function (e, t) { var n; var r; var i; var o; var a = { label: 0, sent: function () { if (1 & i[0]) throw i[1]; return i[1] }, trys: [], ops: [] }; return o = { next: s(0), throw: s(1), return: s(2) }, typeof Symbol === 'function' && (o[Symbol.iterator] = function () { return this }), o; function s (o) { return function (s) { return (function (o) { if (n) throw new TypeError('Generator is already executing.'); for (;a;) try { if (n = 1, r && (i = 2 & o[0] ? r.return : o[0] ? r.throw || ((i = r.return) && i.call(r), 0) : r.next) && !(i = i.call(r, o[1])).done) return i; switch (r = 0, i && (o = [2 & o[0], i.value]), o[0]) { case 0:case 1:i = o; break; case 4:return a.label++, { value: o[1], done: !1 }; case 5:a.label++, r = o[1], o = [0]; continue; case 7:o = a.ops.pop(), a.trys.pop(); continue; default:if (!(i = (i = a.trys).length > 0 && i[i.length - 1]) && (o[0] === 6 || o[0] === 2)) { a = 0; continue } if (o[0] === 3 && (!i || o[1] > i[0] && o[1] < i[3])) { a.label = o[1]; break } if (o[0] === 6 && a.label < i[1]) { a.label = i[1], i = o; break } if (i && a.label < i[2]) { a.label = i[2], a.ops.push(o); break }i[2] && a.ops.pop(), a.trys.pop(); continue }o = t.call(e, a) } catch (s) { o = [6, s], r = 0 } finally { n = i = 0 } if (5 & o[0]) throw o[1]; return { value: o[0] ? o[1] : void 0, done: !0 } }([o, s])) } } }; var o = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var a = e('./util'); var s = o(e('./logger')); var c = (function () { function e (e) { this._options = e } return e.prototype._buildUrl = function (e) { var t = (this._options.secure ? 'https://' : 'http://') + this._options.host + ':' + this._options.port + this._options.path + this._options.key + '/' + e; return t + '?ts=' + (new Date()).getTime() + Math.random() }, e.prototype.retrieveId = function () { return r(this, void 0, Promise, function () { var e, t, n, r; return i(this, function (i) { switch (i.label) { case 0:e = this._buildUrl('id'), i.label = 1; case 1:return i.trys.push([1, 3,, 4]), [4, fetch(e)]; case 2:if ((t = i.sent()).status !== 200) throw new Error('Error. Status:' + t.status); return [2, t.text()]; case 3:throw n = i.sent(), s.default.error('Error retrieving ID', n), r = '', this._options.path === '/' && this._options.host !== a.util.CLOUD_HOST && (r = " If you passed in a `path` to your self-hosted PeerServer, you'll also need to pass in that same path when creating a new Peer."), new Error('Could not get an ID from the server.' + r); case 4:return [2] } }) }) }, e.prototype.listAllPeers = function () { return r(this, void 0, Promise, function () { var e, t, n, r; return i(this, function (i) { switch (i.label) { case 0:e = this._buildUrl('peers'), i.label = 1; case 1:return i.trys.push([1, 3,, 4]), [4, fetch(e)]; case 2:if ((t = i.sent()).status !== 200) { if (t.status === 401) throw n = '', n = this._options.host === a.util.CLOUD_HOST ? "It looks like you're using the cloud server. You can email team@peerjs.com to enable peer listing for your API key." : 'You need to enable `allow_discovery` on your self-hosted PeerServer to use this feature.', new Error("It doesn't look like you have permission to list peers IDs. " + n); throw new Error('Error. Status:' + t.status) } return [2, t.json()]; case 3:throw r = i.sent(), s.default.error('Error retrieving list peers', r), new Error('Could not get list peers from the server.' + r); case 4:return [2] } }) }) }, e }()); n.API = c }, { './util': 'BHXf', './logger': 'WOs9' }], Hxpd: [function (e, t, n) { 'use strict'; var r = this && this.__extends || (function () { var e = function (t, n) { return (e = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function (e, t) { e.__proto__ = t } || function (e, t) { for (var n in t)t.hasOwnProperty(n) && (e[n] = t[n]) })(t, n) }; return function (t, n) { function r () { this.constructor = t }e(t, n), t.prototype = n === null ? Object.create(n) : (r.prototype = n.prototype, new r()) } }()); var i = this && this.__assign || function () { return (i = Object.assign || function (e) { for (var t, n = 1, r = arguments.length; n < r; n++) for (var i in t = arguments[n])Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]); return e }).apply(this, arguments) }; var o = this && this.__values || function (e) { var t = typeof Symbol === 'function' && Symbol.iterator; var n = t && e[t]; var r = 0; if (n) return n.call(e); if (e && typeof e.length === 'number') return { next: function () { return e && r >= e.length && (e = void 0), { value: e && e[r++], done: !e } } }; throw new TypeError(t ? 'Object is not iterable.' : 'Symbol.iterator is not defined.') }; var a = this && this.__read || function (e, t) { var n = typeof Symbol === 'function' && e[Symbol.iterator]; if (!n) return e; var r; var i; var o = n.call(e); var a = []; try { for (;(void 0 === t || t-- > 0) && !(r = o.next()).done;)a.push(r.value) } catch (d) { i = { error: d } } finally { try { r && !r.done && (n = o.return) && n.call(o) } finally { if (i) throw i.error } } return a }; var s = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(n, '__esModule', { value: !0 }); var c = e('eventemitter3'); var u = e('./util'); var d = s(e('./logger')); var p = e('./socket'); var l = e('./mediaconnection'); var f = e('./dataconnection'); var h = e('./enums'); var v = e('./api'); var m = ((function () {}()), (function (e) { function t (n, r) { var o; var a = e.call(this) || this; return a._id = null, a._lastServerId = null, a._destroyed = !1, a._disconnected = !1, a._open = !1, a._connections = new Map(), a._lostMessages = new Map(), n && n.constructor == Object ? r = n : n && (o = n.toString()), r = i({ debug: 0, host: u.util.CLOUD_HOST, port: u.util.CLOUD_PORT, path: '/', key: t.DEFAULT_KEY, token: u.util.randomToken(), config: u.util.defaultConfig }, r), a._options = r, a._options.host === '/' && (a._options.host = window.location.hostname), a._options.path && (a._options.path[0] !== '/' && (a._options.path = '/' + a._options.path), a._options.path[a._options.path.length - 1] !== '/' && (a._options.path += '/')), void 0 === a._options.secure && a._options.host !== u.util.CLOUD_HOST ? a._options.secure = u.util.isSecure() : a._options.host == u.util.CLOUD_HOST && (a._options.secure = !0), a._options.logFunction && d.default.setLogFunction(a._options.logFunction), d.default.logLevel = a._options.debug || 0, a._api = new v.API(r), a._socket = a._createServerConnection(), u.util.supports.audioVideo || u.util.supports.data ? o && !u.util.validateId(o) ? (a._delayedAbort(h.PeerErrorType.InvalidID, 'ID "' + o + '" is invalid'), a) : (o ? a._initialize(o) : a._api.retrieveId().then(function (e) { return a._initialize(e) }).catch(function (e) { return a._abort(h.PeerErrorType.ServerError, e) }), a) : (a._delayedAbort(h.PeerErrorType.BrowserIncompatible, 'The current browser does not support WebRTC'), a) } return r(t, e), Object.defineProperty(t.prototype, 'id', { get: function () { return this._id }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'options', { get: function () { return this._options }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'open', { get: function () { return this._open }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'socket', { get: function () { return this._socket }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'connections', { get: function () { var e; var t; var n = Object.create(null); try { for (var r = o(this._connections), i = r.next(); !i.done; i = r.next()) { var s = a(i.value, 2); var c = s[0]; var u = s[1]; n[c] = u } } catch (f) { e = { error: f } } finally { try { i && !i.done && (t = r.return) && t.call(r) } finally { if (e) throw e.error } } return n }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'destroyed', { get: function () { return this._destroyed }, enumerable: !0, configurable: !0 }), Object.defineProperty(t.prototype, 'disconnected', { get: function () { return this._disconnected }, enumerable: !0, configurable: !0 }), t.prototype._createServerConnection = function () { var e = this; var t = new p.Socket(this._options.secure, this._options.host, this._options.port, this._options.path, this._options.key, this._options.pingInterval); return t.on(h.SocketEventType.Message, function (t) { e._handleMessage(t) }), t.on(h.SocketEventType.Error, function (t) { e._abort(h.PeerErrorType.SocketError, t) }), t.on(h.SocketEventType.Disconnected, function () { e.disconnected || (e.emitError(h.PeerErrorType.Network, 'Lost connection to server.'), e.disconnect()) }), t.on(h.SocketEventType.Close, function () { e.disconnected || e._abort(h.PeerErrorType.SocketClosed, 'Underlying socket is already closed.') }), t }, t.prototype._initialize = function (e) { this._id = e, this.socket.start(e, this._options.token) }, t.prototype._handleMessage = function (e) { var t; var n; var r = e.type; var i = e.payload; var a = e.src; switch (r) { case h.ServerMessageType.Open:this._lastServerId = this.id, this._open = !0, this.emit(h.PeerEventType.Open, this.id); break; case h.ServerMessageType.Error:this._abort(h.PeerErrorType.ServerError, i.msg); break; case h.ServerMessageType.IdTaken:this._abort(h.PeerErrorType.UnavailableID, 'ID "' + this.id + '" is taken'); break; case h.ServerMessageType.InvalidKey:this._abort(h.PeerErrorType.InvalidKey, 'API KEY "' + this._options.key + '" is invalid'); break; case h.ServerMessageType.Leave:d.default.log('Received leave message from ' + a), this._cleanupPeer(a), this._connections.delete(a); break; case h.ServerMessageType.Expire:this.emitError(h.PeerErrorType.PeerUnavailable, 'Could not connect to peer ' + a); break; case h.ServerMessageType.Offer:var s = i.connectionId; if ((m = this.getConnection(a, s)) && (m.close(), d.default.warn('Offer received for existing Connection ID:' + s)), i.type === h.ConnectionType.Media)m = new l.MediaConnection(a, this, { connectionId: s, _payload: i, metadata: i.metadata }), this._addConnection(a, m), this.emit(h.PeerEventType.Call, m); else { if (i.type !== h.ConnectionType.Data) return void d.default.warn('Received malformed connection type:' + i.type); m = new f.DataConnection(a, this, { connectionId: s, _payload: i, metadata: i.metadata, label: i.label, serialization: i.serialization, reliable: i.reliable }), this._addConnection(a, m), this.emit(h.PeerEventType.Connection, m) } var c = this._getMessages(s); try { for (var u = o(c), p = u.next(); !p.done; p = u.next()) { var v = p.value; m.handleMessage(v) } } catch (y) { t = { error: y } } finally { try { p && !p.done && (n = u.return) && n.call(u) } finally { if (t) throw t.error } } break; default:if (!i) return void d.default.warn('You received a malformed message from ' + a + ' of type ' + r); var m; s = i.connectionId, (m = this.getConnection(a, s)) && m.peerConnection ? m.handleMessage(e) : s ? this._storeMessage(s, e) : d.default.warn('You received an unrecognized message:', e) } }, t.prototype._storeMessage = function (e, t) { this._lostMessages.has(e) || this._lostMessages.set(e, []), this._lostMessages.get(e).push(t) }, t.prototype._getMessages = function (e) { var t = this._lostMessages.get(e); return t ? (this._lostMessages.delete(e), t) : [] }, t.prototype.connect = function (e, t) { if (void 0 === t && (t = {}), this.disconnected) return d.default.warn('You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect, or call reconnect on this peer if you believe its ID to still be available.'), void this.emitError(h.PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.'); var n = new f.DataConnection(e, this, t); return this._addConnection(e, n), n }, t.prototype.call = function (e, t, n) { if (void 0 === n && (n = {}), this.disconnected) return d.default.warn('You cannot connect to a new Peer because you called .disconnect() on this Peer and ended your connection with the server. You can create a new Peer to reconnect.'), void this.emitError(h.PeerErrorType.Disconnected, 'Cannot connect to new Peer after disconnecting from server.'); if (t) { n._stream = t; var r = new l.MediaConnection(e, this, n); return this._addConnection(e, r), r }d.default.error("To call a peer, you must provide a stream from your browser's `getUserMedia`.") }, t.prototype._addConnection = function (e, t) { d.default.log('add connection ' + t.type + ':' + t.connectionId + ' to peerId:' + e), this._connections.has(e) || this._connections.set(e, []), this._connections.get(e).push(t) }, t.prototype._removeConnection = function (e) { var t = this._connections.get(e.peer); if (t) { var n = t.indexOf(e); n !== -1 && t.splice(n, 1) } this._lostMessages.delete(e.connectionId) }, t.prototype.getConnection = function (e, t) { var n; var r; var i = this._connections.get(e); if (!i) return null; try { for (var a = o(i), s = a.next(); !s.done; s = a.next()) { var c = s.value; if (c.connectionId === t) return c } } catch (l) { n = { error: l } } finally { try { s && !s.done && (r = a.return) && r.call(a) } finally { if (n) throw n.error } } return null }, t.prototype._delayedAbort = function (e, t) { var n = this; setTimeout(function () { n._abort(e, t) }, 0) }, t.prototype._abort = function (e, t) { d.default.error('Aborting!'), this.emitError(e, t), this._lastServerId ? this.disconnect() : this.destroy() }, t.prototype.emitError = function (e, t) { var n; d.default.error('Error:', t), (n = typeof t === 'string' ? new Error(t) : t).type = e, this.emit(h.PeerEventType.Error, n) }, t.prototype.destroy = function () { this.destroyed || (d.default.log('Destroy peer with ID:' + this.id), this.disconnect(), this._cleanup(), this._destroyed = !0, this.emit(h.PeerEventType.Close)) }, t.prototype._cleanup = function () { var e, t; try { for (var n = o(this._connections.keys()), r = n.next(); !r.done; r = n.next()) { var i = r.value; this._cleanupPeer(i), this._connections.delete(i) } } catch (u) { e = { error: u } } finally { try { r && !r.done && (t = n.return) && t.call(n) } finally { if (e) throw e.error } } this.socket.removeAllListeners() }, t.prototype._cleanupPeer = function (e) { var t; var n; var r = this._connections.get(e); if (r) try { for (var i = o(r), a = i.next(); !a.done; a = i.next())a.value.close() } catch (d) { t = { error: d } } finally { try { a && !a.done && (n = i.return) && n.call(i) } finally { if (t) throw t.error } } }, t.prototype.disconnect = function () { if (!this.disconnected) { var e = this.id; d.default.log('Disconnect peer with ID:' + e), this._disconnected = !0, this._open = !1, this.socket.close(), this._lastServerId = e, this._id = null, this.emit(h.PeerEventType.Disconnected, e) } }, t.prototype.reconnect = function () { if (this.disconnected && !this.destroyed)d.default.log('Attempting reconnection to server with ID ' + this._lastServerId), this._disconnected = !1, this._initialize(this._lastServerId); else { if (this.destroyed) throw new Error('This peer cannot reconnect to the server. It has already been destroyed.'); if (this.disconnected || this.open) throw new Error('Peer ' + this.id + ' cannot reconnect because it is not disconnected from the server!'); d.default.error("In a hurry? We're still trying to make the initial connection!") } }, t.prototype.listAllPeers = function (e) { var t = this; void 0 === e && (e = function (e) {}), this._api.listAllPeers().then(function (t) { return e(t) }).catch(function (e) { return t._abort(h.PeerErrorType.ServerError, e) }) }, t.DEFAULT_KEY = 'peerjs', t }(c.EventEmitter))); n.Peer = m }, { eventemitter3: 'JJlS', './util': 'BHXf', './logger': 'WOs9', './socket': 'wJlv', './mediaconnection': 'dbHP', './dataconnection': 'GBTQ', './enums': 'ZRYf', './api': 'in7L' }], iTK6: [function (e, t, n) { 'use strict'; Object.defineProperty(n, '__esModule', { value: !0 }); var r = e('./util'); var i = e('./peer'); n.peerjs = { Peer: i.Peer, util: r.util }, n.default = i.Peer, window.peerjs = n.peerjs, window.Peer = i.Peer }, { './util': 'BHXf', './peer': 'Hxpd' }] }, {}, ['iTK6'])) }, aa20: function (e, t, n) { e.exports = { inner: 'peer121_inner_2sKj7', status: 'peer121_status_paPxi', myId: 'peer121_myId_PkKh8', local: 'peer121_local_1kIZz', callBtn: 'peer121_callBtn_1MBFt' } }, b0af: function (e, t, n) { 'use strict'; n('0481'), n('4069'), n('a9e3'); var r = n('5530'); var i = (n('615b'), n('10d2')); var o = n('297c'); var a = n('1c87'); var s = n('58df'); t.a = Object(s.a)(o.a, a.a, i.a).extend({ name: 'v-card', props: { flat: Boolean, hover: Boolean, img: String, link: Boolean, loaderHeight: { type: [Number, String], default: 4 }, raised: Boolean }, computed: { classes: function () { return Object(r.a)(Object(r.a)({ 'v-card': !0 }, a.a.options.computed.classes.call(this)), {}, { 'v-card--flat': this.flat, 'v-card--hover': this.hover, 'v-card--link': this.isClickable, 'v-card--loading': this.loading, 'v-card--disabled': this.disabled, 'v-card--raised': this.raised }, i.a.options.computed.classes.call(this)) }, styles: function () { var e = Object(r.a)({}, i.a.options.computed.styles.call(this)); return this.img && (e.background = 'url("'.concat(this.img, '") center center / cover no-repeat')), e } }, methods: { genProgress: function () { var e = o.a.options.methods.genProgress.call(this); return e ? this.$createElement('div', { staticClass: 'v-card__progress', key: 'progress' }, [e]) : null } }, render: function (e) { var t = this.generateRouteLink(); var n = t.tag; var r = t.data; return r.style = this.styles, this.isClickable && (r.attrs = r.attrs || {}, r.attrs.tabindex = 0), e(n, this.setBackgroundColor(this.color, r), [this.genProgress(), this.$slots.default]) } }) }, d840: function (e, t, n) { 'use strict'; n.r(t); var r; var i; var o = function () { var e = this; var t = e.$createElement; var n = e._self._c || t; return n('v-app', { class: e.$style.inner }, [n('video', { ref: 'remoteVideo', attrs: { id: 'remote' }, on: { contextmenu: function (e) { e.preventDefault() } } }), n('video', { ref: 'localVideo', class: e.$style.local, attrs: { id: 'local' }, on: { contextmenu: function (e) { e.preventDefault() } } }), n('div', { class: e.$style.status }, [e._v(e._s(e.connectionStatus))]), e.myId && !e.visible ? n('div', { class: e.$style.myId }, [e._v('我的ID：' + e._s(e.myId))]) : e._e(), n('v-btn', { class: e.$style.callBtn, attrs: { disabled: e.canUse }, on: { click: function (t) { e.connectionStatus === '通话中' ? e.handleDisconnect() : e.handleCall() } } }, [e._v(e._s(e.connectionStatus === '通话中' ? '挂断' : '呼叫'))]), n('v-dialog', { attrs: { persistent: '', 'data-app': '', 'max-width': '100%', width: '300px' }, model: { value: e.visible, callback: function (t) { e.visible = t }, expression: 'visible' } }, [n('v-card', [n('v-card-title', [e._v('输入你的ID及对方ID')]), n('v-card-text', [n('v-form', { ref: 'form', attrs: { 'lazy-validation': '' } }, [n('v-text-field', { attrs: { label: '你的ID', counter: 10, rules: e.myIdRules }, model: { value: e.myId, callback: function (t) { e.myId = t }, expression: 'myId' } }), n('v-text-field', { attrs: { label: '对方ID', counter: 10, rules: e.inverseIdRules }, model: { value: e.inverseId, callback: function (t) { e.inverseId = t }, expression: 'inverseId' } }), n('v-btn', { attrs: { width: '100%', color: 'primary', disabled: e.connecting, loading: e.connecting }, on: { click: e.initConversation }, scopedSlots: e._u([{ key: 'loader', fn: function () { return [n('span', [e._v('连接中...')])] }, proxy: !0 }]) }, [e._v('连接')])], 1)], 1)], 1)], 1)], 1) }; var a = []; var s = n('b85c'); var c = (n('96cf'), n('1da1')); var u = n('d4ec'); var d = n('bee2'); var p = n('262e'); var l = n('2caf'); var f = n('9ab4'); var h = n('1b40'); var v = n('a0bc'); var m = n.n(v); (function (e) { e[e.invite = 0] = 'invite', e[e.Answer = 1] = 'Answer', e[e.disconnect = 2] = 'disconnect' })(r || (r = {})), (function (e) { e.calling = '呼叫中', e.connecting = '通话中', e.activeDisconnect = '主动断开', e.passiveDisconnect = '断开', e.notConnected = '未呼叫', e.error = '发生错误' }(i || (i = {}))); var y = { host: 'www.xliny.top', secure: !0, port: 9522, debug: 3, path: 'peer', config: { iceServers: [{ urls: 'turn:39.105.103.136:3475', credential: '123456', username: 'test' }] } }; var g = { 'browser-incompatible': '浏览器不支持某些或者所有WebRTC，请使用新版谷歌浏览器', disconnected: '已断开与服务器的链接，请重新链接', 'unavailable-id': 'ID不可用，因为该ID已存在', 'invalid-id': '非法ID，请输入合法ID', 'invalid-key': '非法ID，请输入合法ID', network: '无法连接到信令服务器', 'server-error': '无法访问服务器', 'ssl-unavailable': 'SSL证书不可用', 'peer-unavailable': '对方不在线' }; var b = (function (e) { Object(p.a)(n, e); var t = Object(l.a)(n); function n () { var e; return Object(u.a)(this, n), e = t.apply(this, arguments), e.myId = '', e.inverseId = '', e.connecting = !1, e.canUse = !1, e.connectionStatus = i.notConnected, e.mediaConnection = null, e.visible = !0, e.myIdRules = [function (e) { return !!e || '请输入ID' }, function (e) { return e.length <= 10 || 'ID在十位数之内' }], e.inverseIdRules = [function (e) { return !e || (e.length <= 10 || 'ID在十位数之内') }], e } return Object(d.a)(n, [{ key: 'handleCall', value: (function () { var e = Object(c.a)(regeneratorRuntime.mark(function e () { var t, n, o; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return n = this.localVideo, e.next = 3, navigator.mediaDevices.getUserMedia({ video: !0, audio: !0 }); case 3:return o = this.mediaStream = e.sent, this.connectionStatus = i.calling, n.srcObject = o, n.onloadedmetadata = Object(c.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return n.muted = !0, e.next = 3, n.play(); case 3:case 'end':return e.stop() } }, e) })), e.next = 9, n.play(); case 9:this === null || void 0 === this || (t = this.dataConnection) === null || void 0 === t || t.send({ type: r.invite }); case 10:case 'end':return e.stop() } }, e, this) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'handleDisconnect', value: (function () { var e = Object(c.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, this.onDisconnect(); case 2:this === null || void 0 === this || (t = this.dataConnection) === null || void 0 === t || t.send({ type: r.disconnect }); case 3:case 'end':return e.stop() } }, e, this) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'onDisconnect', value: (function () { var e = Object(c.a)(regeneratorRuntime.mark(function e () { var t, n, r; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return n = this.remoteVideo, r = this.localVideo, this.connectionStatus = i.passiveDisconnect, e.next = 4, n.pause(); case 4:return e.next = 6, r.pause(); case 6:this.stopTrack(), this === null || void 0 === this || (t = this.mediaConnection) === null || void 0 === t || t.close(); case 8:case 'end':return e.stop() } }, e, this) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'handleAnswer', value: function (e) { var t = this; var n = this.remoteVideo; var r = this.peer; var o = this.mediaStream; var a = this.inverseId; if (e === 'receive') { var s = this.mediaConnection = r.call(a, o); s.on('stream', function (e) { t.connectionStatus = i.connecting, n.srcObject = e, n.onloadedmetadata = Object(c.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, n.play(); case 2:case 'end':return e.stop() } }, e) })) }), s.on('close', function () { console.log('远端视频流关闭') }), s.on('error', function (e) { console.log(e) }) } else e === 'reject' && (alert('对方已拒绝'), this.stopTrack()) } }, { key: 'stopTrack', value: function () { var e; var t; var n; var r = (e = (t = this.mediaStream) === null || void 0 === t ? void 0 : t.getTracks()) !== null && void 0 !== e ? e : []; var i = Object(s.a)(r); try { for (i.s(); !(n = i.n()).done;) { var o = n.value; o.stop() } } catch (a) { i.e(a) } finally { i.f() } } }, { key: 'initReceive', value: function () { var e; var t = this; var n = this.peer; var o = this.localVideo; var a = this.remoteVideo; var s = confirm('接收到视频邀请，是否接受？'); s && n.on('call', (function () { var e = Object(c.a)(regeneratorRuntime.mark(function e (r) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, navigator.mediaDevices.getUserMedia({ video: !0, audio: !0 }); case 2:t.mediaStream = e.sent, o.srcObject = t.mediaStream, o.onloadedmetadata = Object(c.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.next = 2, o.play(); case 2:case 'end':return e.stop() } }, e) })), r.answer(t.mediaStream), r.on('stream', (function () { var e = Object(c.a)(regeneratorRuntime.mark(function e (n) { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:a.srcObject = n, a.onloadedmetadata = Object(c.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return t.connectionStatus = i.connecting, e.next = 3, a.play(); case 3:case "end":return e.stop() } }, e) })); case 2:case 'end':return e.stop() } }, e) })); return function (t) { return e.apply(this, arguments) } }())), r.on('close', function () { t.connectionStatus = i.notConnected, t.onDisconnect() }), r.on('error', function () { t.connectionStatus = i.error }), n.on('disconnected', Object(c.a)(regeneratorRuntime.mark(function e () { return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:console.log('disconnected'); case 1:case 'end':return e.stop() } }, e) }))), n.on('close', function () { console.log('close') }); case 11:case 'end':return e.stop() } }, e) })); return function (t) { return e.apply(this, arguments) } }())), this === null || void 0 === this || (e = this.dataConnection) === null || void 0 === e || e.send({ type: r.Answer, data: s ? 'receive' : 'reject' }) } }, { key: 'initConversation', value: function () { var e = this; if (this.form.validate()) { this.connecting = !0; var t = this.myId; var n = this.inverseId; var i = this.peer; console.log(i), i || (i = this.peer = new m.a(t, y)), i.on('open', Object(c.a)(regeneratorRuntime.mark(function t () { var o, a; return regeneratorRuntime.wrap(function (t) { while (1) switch (t.prev = t.next) { case 0:o = function (t) { t.type === r.Answer ? e.handleAnswer(t.data) : t.type === r.invite ? e.initReceive() : t.type === r.disconnect && e.onDisconnect() }, i.on('connection', function (t) { e.dataConnection = t, e.inverseId = t.peer, t.on('data', o) }), n ? (a = e.dataConnection = i.connect(n), a.on('open', function () { e.connecting = !1, e.visible = !1, a.on('data', o) })) : (e.connecting = !1, e.visible = !1); case 3:case 'end':return t.stop() } }, t) }))), i.on('error', function (t) { var n = t.type; console.log(t.type), n === '' ? i.reconnect() : (alert(g[n]), e.peer = null), e.connecting = !1 }) } } }]), n }(h.d)); Object(f.a)([Object(h.c)('localVideo')], b.prototype, 'localVideo', void 0), Object(f.a)([Object(h.c)('remoteVideo')], b.prototype, 'remoteVideo', void 0), Object(f.a)([Object(h.c)('form')], b.prototype, 'form', void 0), b = Object(f.a)([h.a], b); var _ = b; var C = _; var S = n('1b87'); var T = n('2877'); var w = n('6544'); var P = n.n(w); var k = n('7496'); var E = n('8336'); var R = n('b0af'); var O = n('99d9'); var x = (n('7db0'), n('caad'), n('45fc'), n('a9e3'), n('2532'), n('498a'), n('5530')); var D = n('2909'); var j = n('ade3'); var M = (n('368e'), n('7560')); var I = M.a.extend({ name: 'v-theme-provider', props: { root: Boolean }, computed: { isDark: function () { return this.root ? this.rootIsDark : M.a.options.computed.isDark.call(this) } }, render: function () { return this.$slots.default && this.$slots.default.find(function (e) { return !e.isComment && e.text !== ' ' }) } }); var A = (n('b0c0'), n('b64b'), n('53ca')); var B = n('2b0e'); var L = B.a.extend().extend({ name: 'delayable', props: { openDelay: { type: [Number, String], default: 0 }, closeDelay: { type: [Number, String], default: 0 } }, data: function () { return { openTimeout: void 0, closeTimeout: void 0 } }, methods: { clearDelay: function () { clearTimeout(this.openTimeout), clearTimeout(this.closeTimeout) }, runDelay: function (e, t) { var n = this; this.clearDelay(); var r = parseInt(this[''.concat(e, 'Delay')], 10); this[''.concat(e, 'Timeout')] = setTimeout(t || function () { n.isActive = { open: !0, close: !1 }[e] }, r) } } }); var N = n('f2e7'); var F = n('58df'); var U = n('80d2'); var G = n('d9bd'); var z = Object(F.a)(L, N.a); var $ = z.extend({ name: 'activatable', props: { activator: { default: null, validator: function (e) { return ['string', 'object'].includes(Object(A.a)(e)) } }, disabled: Boolean, internalActivator: Boolean, openOnHover: Boolean, openOnFocus: Boolean }, data: function () { return { activatorElement: null, activatorNode: [], events: ['click', 'mouseenter', 'mouseleave', 'focus'], listeners: {} } }, watch: { activator: 'resetActivator', openOnFocus: 'resetActivator', openOnHover: 'resetActivator' }, mounted: function () { var e = Object(U.m)(this, 'activator', !0); e && ['v-slot', 'normal'].includes(e) && Object(G.b)('The activator slot must be bound, try \'<template v-slot:activator="{ on }"><v-btn v-on="on">\'', this), this.addActivatorEvents() }, beforeDestroy: function () { this.removeActivatorEvents() }, methods: { addActivatorEvents: function () { if (this.activator && !this.disabled && this.getActivator()) { this.listeners = this.genActivatorListeners(); for (var e = Object.keys(this.listeners), t = 0, n = e; t < n.length; t++) { var r = n[t]; this.getActivator().addEventListener(r, this.listeners[r]) } } }, genActivator: function () { var e = Object(U.l)(this, 'activator', Object.assign(this.getValueProxy(), { on: this.genActivatorListeners(), attrs: this.genActivatorAttributes() })) || []; return this.activatorNode = e, e }, genActivatorAttributes: function () { return { role: 'button', 'aria-haspopup': !0, 'aria-expanded': String(this.isActive) } }, genActivatorListeners: function () { var e = this; if (this.disabled) return {}; var t = {}; return this.openOnHover ? (t.mouseenter = function (t) { e.getActivator(t), e.runDelay('open') }, t.mouseleave = function (t) { e.getActivator(t), e.runDelay('close') }) : t.click = function (t) { var n = e.getActivator(t); n && n.focus(), t.stopPropagation(), e.isActive = !e.isActive }, this.openOnFocus && (t.focus = function (t) { e.getActivator(t), t.stopPropagation(), e.isActive = !e.isActive }), t }, getActivator: function (e) { if (this.activatorElement) return this.activatorElement; var t = null; if (this.activator) { var n = this.internalActivator ? this.$el : document; t = typeof this.activator === 'string' ? n.querySelector(this.activator) : this.activator.$el ? this.activator.$el : this.activator } else if (this.activatorNode.length === 1 || this.activatorNode.length && !e) { var r = this.activatorNode[0].componentInstance; t = r && r.$options.mixins && r.$options.mixins.some(function (e) { return e.options && ['activatable', 'menuable'].includes(e.options.name) }) ? r.getActivator() : this.activatorNode[0].elm } else e && (t = e.currentTarget || e.target); return this.activatorElement = t, this.activatorElement }, getContentSlot: function () { return Object(U.l)(this, 'default', this.getValueProxy(), !0) }, getValueProxy: function () { var e = this; return { get value () { return e.isActive }, set value (t) { e.isActive = t } } }, removeActivatorEvents: function () { if (this.activator && this.activatorElement) { for (var e = Object.keys(this.listeners), t = 0, n = e; t < n.length; t++) { var r = n[t]; this.activatorElement.removeEventListener(r, this.listeners[r]) } this.listeners = {} } }, resetActivator: function () { this.removeActivatorEvents(), this.activatorElement = null, this.getActivator(), this.addActivatorEvents() } } }); function V (e) { for (var t = [], n = 0; n < e.length; n++) { var r = e[n]; r.isActive && r.isDependent ? t.push(r) : t.push.apply(t, Object(D.a)(V(r.$children))) } return t } var W = Object(F.a)().extend({ name: 'dependent', data: function () { return { closeDependents: !0, isActive: !1, isDependent: !0 } }, watch: { isActive: function (e) { if (!e) for (var t = this.getOpenDependents(), n = 0; n < t.length; n++)t[n].isActive = !1 } }, methods: { getOpenDependents: function () { return this.closeDependents ? V(this.$children) : [] }, getOpenDependentElements: function () { for (var e = [], t = this.getOpenDependents(), n = 0; n < t.length; n++)e.push.apply(e, Object(D.a)(t[n].getClickableDependentElements())); return e }, getClickableDependentElements: function () { var e = [this.$el]; return this.$refs.content && e.push(this.$refs.content), this.overlay && e.push(this.overlay.$el), e.push.apply(e, Object(D.a)(this.getOpenDependentElements())), e } } }); var J = (n('4160'), n('159b'), B.a.extend().extend({ name: 'bootable', props: { eager: Boolean }, data: function () { return { isBooted: !1 } }, computed: { hasContent: function () { return this.isBooted || this.eager || this.isActive } }, watch: { isActive: function () { this.isBooted = !0 } }, created: function () { 'lazy' in this.$attrs && Object(G.d)('lazy', this) }, methods: { showLazyContent: function (e) { return this.hasContent && e ? e() : [this.$createElement()] } } })); function H (e) { var t = Object(A.a)(e); return t === 'boolean' || t === 'string' || e.nodeType === Node.ELEMENT_NODE } var q = Object(F.a)(J).extend({ name: 'detachable', props: { attach: { default: !1, validator: H }, contentClass: { type: String, default: '' } }, data: function () { return { activatorNode: null, hasDetached: !1 } }, watch: { attach: function () { this.hasDetached = !1, this.initDetach() }, hasContent: function () { this.$nextTick(this.initDetach) } }, beforeMount: function () { var e = this; this.$nextTick(function () { if (e.activatorNode) { var t = Array.isArray(e.activatorNode) ? e.activatorNode : [e.activatorNode]; t.forEach(function (t) { if (t.elm && e.$el.parentNode) { var n = e.$el === e.$el.parentNode.firstChild ? e.$el : e.$el.nextSibling; e.$el.parentNode.insertBefore(t.elm, n) } }) } }) }, mounted: function () { this.hasContent && this.initDetach() }, deactivated: function () { this.isActive = !1 }, beforeDestroy: function () { try { if (this.$refs.content && this.$refs.content.parentNode && this.$refs.content.parentNode.removeChild(this.$refs.content), this.activatorNode) { var e = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]; e.forEach(function (e) { e.elm && e.elm.parentNode && e.elm.parentNode.removeChild(e.elm) }) } } catch (t) { console.log(t) } }, methods: { getScopeIdAttrs: function () { var e = Object(U.k)(this.$vnode, 'context.$options._scopeId'); return e && Object(j.a)({}, e, '') }, initDetach: function () { var e; this._isDestroyed || !this.$refs.content || this.hasDetached || this.attach === '' || !0 === this.attach || this.attach === 'attach' || (e = !1 === this.attach ? document.querySelector('[data-app]') : typeof this.attach === 'string' ? document.querySelector(this.attach) : this.attach, e ? (e.appendChild(this.$refs.content), this.hasDetached = !0) : Object(G.c)('Unable to locate target '.concat(this.attach || '[data-app]'), this)) } } }); var Y = (n('3c93'), n('a9ad')); var K = Object(F.a)(Y.a, M.a, N.a).extend({ name: 'v-overlay', props: { absolute: Boolean, color: { type: String, default: '#212121' }, dark: { type: Boolean, default: !0 }, opacity: { type: [Number, String], default: 0.46 }, value: { default: !0 }, zIndex: { type: [Number, String], default: 5 } }, computed: { __scrim: function () { var e = this.setBackgroundColor(this.color, { staticClass: 'v-overlay__scrim', style: { opacity: this.computedOpacity } }); return this.$createElement('div', e) }, classes: function () { return Object(x.a)({ 'v-overlay--absolute': this.absolute, 'v-overlay--active': this.isActive }, this.themeClasses) }, computedOpacity: function () { return Number(this.isActive ? this.opacity : 0) }, styles: function () { return { zIndex: this.zIndex } } }, methods: { genContent: function () { return this.$createElement('div', { staticClass: 'v-overlay__content' }, this.$slots.default) } }, render: function (e) { var t = [this.__scrim]; return this.isActive && t.push(this.genContent()), e('div', { staticClass: 'v-overlay', class: this.classes, style: this.styles }, t) } }); var X = K; var Q = B.a.extend().extend({ name: 'overlayable', props: { hideOverlay: Boolean, overlayColor: String, overlayOpacity: [Number, String] }, data: function () { return { animationFrame: 0, overlay: null } }, watch: { hideOverlay: function (e) { this.isActive && (e ? this.removeOverlay() : this.genOverlay()) } }, beforeDestroy: function () { this.removeOverlay() }, methods: { createOverlay: function () { var e = new X({ propsData: { absolute: this.absolute, value: !1, color: this.overlayColor, opacity: this.overlayOpacity } }); e.$mount(); var t = this.absolute ? this.$el.parentNode : document.querySelector('[data-app]'); t && t.insertBefore(e.$el, t.firstChild), this.overlay = e }, genOverlay: function () { var e = this; if (this.hideScroll(), !this.hideOverlay) return this.overlay || this.createOverlay(), this.animationFrame = requestAnimationFrame(function () { e.overlay && (void 0 !== e.activeZIndex ? e.overlay.zIndex = String(e.activeZIndex - 1) : e.$el && (e.overlay.zIndex = Object(U.n)(e.$el)), e.overlay.value = !0) }), !0 }, removeOverlay: function () { var e = this; var t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; this.overlay && (Object(U.a)(this.overlay.$el, 'transitionend', function () { e.overlay && e.overlay.$el && e.overlay.$el.parentNode && !e.overlay.value && (e.overlay.$el.parentNode.removeChild(e.overlay.$el), e.overlay.$destroy(), e.overlay = null) }), cancelAnimationFrame(this.animationFrame), this.overlay.value = !1), t && this.showScroll() }, scrollListener: function (e) { if (e.type === 'keydown') { if (['INPUT', 'TEXTAREA', 'SELECT'].includes(e.target.tagName) || e.target.isContentEditable) return; var t = [U.q.up, U.q.pageup]; var n = [U.q.down, U.q.pagedown]; if (t.includes(e.keyCode))e.deltaY = -1; else { if (!n.includes(e.keyCode)) return; e.deltaY = 1 } }(e.target === this.overlay || e.type !== 'keydown' && e.target === document.body || this.checkPath(e)) && e.preventDefault() }, hasScrollbar: function (e) { if (!e || e.nodeType !== Node.ELEMENT_NODE) return !1; var t = window.getComputedStyle(e); return ['auto', 'scroll'].includes(t.overflowY) && e.scrollHeight > e.clientHeight }, shouldScroll: function (e, t) { return e.scrollTop === 0 && t < 0 || e.scrollTop + e.clientHeight === e.scrollHeight && t > 0 }, isInside: function (e, t) { return e === t || e !== null && e !== document.body && this.isInside(e.parentNode, t) }, checkPath: function (e) { var t = e.path || this.composedPath(e); var n = e.deltaY; if (e.type === 'keydown' && t[0] === document.body) { var r = this.$refs.dialog; var i = window.getSelection().anchorNode; return !(r && this.hasScrollbar(r) && this.isInside(i, r)) || this.shouldScroll(r, n) } for (var o = 0; o < t.length; o++) { var a = t[o]; if (a === document) return !0; if (a === document.documentElement) return !0; if (a === this.$refs.content) return !0; if (this.hasScrollbar(a)) return this.shouldScroll(a, n) } return !0 }, composedPath: function (e) { if (e.composedPath) return e.composedPath(); var t = []; var n = e.target; while (n) { if (t.push(n), n.tagName === 'HTML') return t.push(document), t.push(window), t; n = n.parentElement } return t }, hideScroll: function () { this.$vuetify.breakpoint.smAndDown ? document.documentElement.classList.add('overflow-y-hidden') : (Object(U.b)(window, 'wheel', this.scrollListener, { passive: !1 }), window.addEventListener('keydown', this.scrollListener)) }, showScroll: function () { document.documentElement.classList.remove('overflow-y-hidden'), window.removeEventListener('wheel', this.scrollListener), window.removeEventListener('keydown', this.scrollListener) } } }); var Z = B.a.extend({ name: 'returnable', props: { returnValue: null }, data: function () { return { isActive: !1, originalValue: null } }, watch: { isActive: function (e) { e ? this.originalValue = this.returnValue : this.$emit('update:return-value', this.originalValue) } }, methods: { save: function (e) { var t = this; this.originalValue = e, setTimeout(function () { t.isActive = !1 }) } } }); var ee = (n('99af'), B.a.extend().extend({ name: 'stackable', data: function () { return { stackElement: null, stackExclude: null, stackMinZIndex: 0, isActive: !1 } }, computed: { activeZIndex: function () { if (typeof window === 'undefined') return 0; var e = this.stackElement || this.$refs.content; var t = this.isActive ? this.getMaxZIndex(this.stackExclude || [e]) + 2 : Object(U.n)(e); return t == null ? t : parseInt(t) } }, methods: { getMaxZIndex: function () { for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = this.$el, n = [this.stackMinZIndex, Object(U.n)(t)], r = [].concat(Object(D.a)(document.getElementsByClassName('v-menu__content--active')), Object(D.a)(document.getElementsByClassName('v-dialog__content--active'))), i = 0; i < r.length; i++)e.includes(r[i]) || n.push(Object(U.n)(r[i])); return Math.max.apply(Math, n) } } })); function te () { return !0 } function ne (e, t, n) { var r = typeof n.value === 'function' ? n.value : n.value.handler; var i = Object(A.a)(n.value) === 'object' && n.value.closeConditional || te; if (e && !1 !== i(e)) { var o = (Object(A.a)(n.value) === 'object' && n.value.include || function () { return [] })(); o.push(t), !o.some(function (t) { return t.contains(e.target) }) && setTimeout(function () { i(e) && r && r(e) }, 0) } } var re = { inserted: function (e, t) { var n = function (n) { return ne(n, e, t) }; var r = document.querySelector('[data-app]') || document.body; r.addEventListener('click', n, !0), e._clickOutside = n }, unbind: function (e) { if (e._clickOutside) { var t = document.querySelector('[data-app]') || document.body; t && t.removeEventListener('click', e._clickOutside, !0), delete e._clickOutside } } }; var ie = re; var oe = Object(F.a)($, W, q, Q, Z, ee, N.a); var ae = oe.extend({ name: 'v-dialog', directives: { ClickOutside: ie }, props: { dark: Boolean, disabled: Boolean, fullscreen: Boolean, light: Boolean, maxWidth: { type: [String, Number], default: 'none' }, noClickAnimation: Boolean, origin: { type: String, default: 'center center' }, persistent: Boolean, retainFocus: { type: Boolean, default: !0 }, scrollable: Boolean, transition: { type: [String, Boolean], default: 'dialog-transition' }, width: { type: [String, Number], default: 'auto' } }, data: function () { return { activatedBy: null, animate: !1, animateTimeout: -1, isActive: !!this.value, stackMinZIndex: 200, previousActiveElement: null } }, computed: { classes: function () { var e; return e = {}, Object(j.a)(e, 'v-dialog '.concat(this.contentClass).trim(), !0), Object(j.a)(e, 'v-dialog--active', this.isActive), Object(j.a)(e, 'v-dialog--persistent', this.persistent), Object(j.a)(e, 'v-dialog--fullscreen', this.fullscreen), Object(j.a)(e, 'v-dialog--scrollable', this.scrollable), Object(j.a)(e, 'v-dialog--animated', this.animate), e }, contentClasses: function () { return { 'v-dialog__content': !0, 'v-dialog__content--active': this.isActive } }, hasActivator: function () { return Boolean(!!this.$slots.activator || !!this.$scopedSlots.activator) } }, watch: { isActive: function (e) { var t; e ? (this.show(), this.hideScroll()) : (this.removeOverlay(), this.unbind(), (t = this.previousActiveElement) == null || t.focus()) }, fullscreen: function (e) { this.isActive && (e ? (this.hideScroll(), this.removeOverlay(!1)) : (this.showScroll(), this.genOverlay())) } }, created: function () { this.$attrs.hasOwnProperty('full-width') && Object(G.d)('full-width', this) }, beforeMount: function () { var e = this; this.$nextTick(function () { e.isBooted = e.isActive, e.isActive && e.show() }) }, beforeDestroy: function () { typeof window !== 'undefined' && this.unbind() }, methods: { animateClick: function () { var e = this; this.animate = !1, this.$nextTick(function () { e.animate = !0, window.clearTimeout(e.animateTimeout), e.animateTimeout = window.setTimeout(function () { return e.animate = !1 }, 150) }) }, closeConditional: function (e) { var t = e.target; return !(this._isDestroyed || !this.isActive || this.$refs.content.contains(t) || this.overlay && t && !this.overlay.$el.contains(t)) && this.activeZIndex >= this.getMaxZIndex() }, hideScroll: function () { this.fullscreen ? document.documentElement.classList.add('overflow-y-hidden') : Q.options.methods.hideScroll.call(this) }, show: function () { var e = this; !this.fullscreen && !this.hideOverlay && this.genOverlay(), this.$nextTick(function () { e.$nextTick(function () { e.previousActiveElement = document.activeElement, e.$refs.content.focus(), e.bind() }) }) }, bind: function () { window.addEventListener('focusin', this.onFocusin) }, unbind: function () { window.removeEventListener('focusin', this.onFocusin) }, onClickOutside: function (e) { this.$emit('click:outside', e), this.persistent ? this.noClickAnimation || this.animateClick() : this.isActive = !1 }, onKeydown: function (e) { if (e.keyCode === U.q.esc && !this.getOpenDependents().length) if (this.persistent) this.noClickAnimation || this.animateClick(); else { this.isActive = !1; var t = this.getActivator(); this.$nextTick(function () { return t && t.focus() }) } this.$emit('keydown', e) }, onFocusin: function (e) { if (e && this.retainFocus) { var t = e.target; if (t && ![document, this.$refs.content].includes(t) && !this.$refs.content.contains(t) && this.activeZIndex >= this.getMaxZIndex() && !this.getOpenDependentElements().some(function (e) { return e.contains(t) })) { var n = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])'); var r = Object(D.a)(n).find(function (e) { return !e.hasAttribute('disabled') }); r && r.focus() } } }, genContent: function () { var e = this; return this.showLazyContent(function () { return [e.$createElement(I, { props: { root: !0, light: e.light, dark: e.dark } }, [e.$createElement('div', { class: e.contentClasses, attrs: Object(x.a)({ role: 'document', tabindex: e.isActive ? 0 : void 0 }, e.getScopeIdAttrs()), on: { keydown: e.onKeydown }, style: { zIndex: e.activeZIndex }, ref: 'content' }, [e.genTransition()])])] }) }, genTransition: function () { var e = this.genInnerContent(); return this.transition ? this.$createElement('transition', { props: { name: this.transition, origin: this.origin, appear: !0 } }, [e]) : e }, genInnerContent: function () { var e = { class: this.classes, ref: 'dialog', directives: [{ name: 'click-outside', value: { handler: this.onClickOutside, closeConditional: this.closeConditional, include: this.getOpenDependentElements } }, { name: 'show', value: this.isActive }], style: { transformOrigin: this.origin } }; return this.fullscreen || (e.style = Object(x.a)(Object(x.a)({}, e.style), {}, { maxWidth: this.maxWidth === 'none' ? void 0 : Object(U.f)(this.maxWidth), width: this.width === 'auto' ? void 0 : Object(U.f)(this.width) })), this.$createElement('div', e, this.getContentSlot()) } }, render: function (e) { return e('div', { staticClass: 'v-dialog__container', class: { 'v-dialog__container--attached': this.attach === '' || !0 === this.attach || this.attach === 'attach' }, attrs: { role: 'dialog' } }, [this.genActivator(), this.genContent()]) } }); var se = (n('4de4'), n('07ac'), n('7e2b')); var ce = n('3206'); var ue = Object(F.a)(se.a, Object(ce.b)('form')).extend({ name: 'v-form', provide: function () { return { form: this } }, inheritAttrs: !1, props: { disabled: Boolean, lazyValidation: Boolean, readonly: Boolean, value: Boolean }, data: function () { return { inputs: [], watchers: [], errorBag: {} } }, watch: { errorBag: { handler: function (e) { var t = Object.values(e).includes(!0); this.$emit('input', !t) }, deep: !0, immediate: !0 } }, methods: { watchInput: function (e) { var t = this; var n = function (e) { return e.$watch('hasError', function (n) { t.$set(t.errorBag, e._uid, n) }, { immediate: !0 }) }; var r = { _uid: e._uid, valid: function () {}, shouldValidate: function () {} }; return this.lazyValidation ? r.shouldValidate = e.$watch('shouldValidate', function (i) { i && (t.errorBag.hasOwnProperty(e._uid) || (r.valid = n(e))) }) : r.valid = n(e), r }, validate: function () { return this.inputs.filter(function (e) { return !e.validate(!0) }).length === 0 }, reset: function () { this.inputs.forEach(function (e) { return e.reset() }), this.resetErrorBag() }, resetErrorBag: function () { var e = this; this.lazyValidation && setTimeout(function () { e.errorBag = {} }, 0) }, resetValidation: function () { this.inputs.forEach(function (e) { return e.resetValidation() }), this.resetErrorBag() }, register: function (e) { this.inputs.push(e), this.watchers.push(this.watchInput(e)) }, unregister: function (e) { var t = this.inputs.find(function (t) { return t._uid === e._uid }); if (t) { var n = this.watchers.find(function (e) { return e._uid === t._uid }); n && (n.valid(), n.shouldValidate()), this.watchers = this.watchers.filter(function (e) { return e._uid !== t._uid }), this.inputs = this.inputs.filter(function (e) { return e._uid !== t._uid }), this.$delete(this.errorBag, t._uid) } } }, render: function (e) { var t = this; return e('form', { staticClass: 'v-form', attrs: Object(x.a)({ novalidate: !0 }, this.attrs$), on: { submit: function (e) { return t.$emit('submit', e) } } }, this.$slots.default) } }); var de = n('8654'); function pe (e) { this.$style = S.default.locals || S.default } var le = Object(T.a)(C, o, a, !1, pe, null, null); t.default = le.exports; P()(le, { VApp: k.a, VBtn: E.a, VCard: R.a, VCardText: O.b, VCardTitle: O.c, VDialog: ae, VForm: ue, VTextField: de.a }) }, df86: function (e, t, n) {} }])
// # sourceMappingURL=peer121.319c6b71.js.map
