(window.webpackJsonp = window.webpackJsonp || []).push([['sound-record-2'], { '1a05': function (e, t, n) { 'use strict'; var r = n('53cc'); var a = n.n(r); n.d(t, 'default', function () { return a.a }) }, '53cc': function (e, t, n) { e.exports = { inner: 'sound-record-2_inner_2L0tL' } }, a8e8: function (e, t, n) { 'use strict'; n.r(t); var r = function () { var e = this; var t = e.$createElement; var n = e._self._c || t; return n('div', { class: e.$style.inner }, [n('RealVolume', { attrs: { volume: e.volume } }), n('div', [e._v(e._s(e.recordingTime) + 's')]), n('v-btn', { on: { click: function (t) { e.leftAudioData.length === 0 ? e.record() : e.stopRecord() } } }, [e._v(e._s(e.leftAudioData.length === 0 ? '录制' : '停止录制'))]), n('v-btn', { on: { click: e.playAudio } }, [e._v('播放录音')]), n('v-btn', { on: { click: e.downloadToLocal } }, [e._v('保存为本地音乐文件')])], 1) }; var a = []; var c = (n('4160'), n('fb6a'), n('c19f'), n('b0c0'), n('d3b7'), n('ac1f'), n('5319'), n('cfc3'), n('9a8c'), n('a975'), n('735e'), n('c1ac'), n('d139'), n('3a7b'), n('d5d6'), n('82f8'), n('e91f'), n('60bd0'), n('5f96'), n('3280'), n('3fcc'), n('ca91'), n('25a1'), n('cd26'), n('3c5d'), n('2954'), n('649e'), n('219c'), n('170b'), n('b39a'), n('72f7'), n('159b'), n('b85c')); var o = (n('96cf'), n('1da1')); var i = n('d4ec'); var u = n('bee2'); var s = n('262e'); var l = n('2caf'); var d = n('9ab4'); var f = n('1b40'); var h = n('c93d'); var v = n('1ee0'); var p = 0; var b = (function (e) { Object(s.a)(n, e); var t = Object(l.a)(n); function n () { var e; return Object(i.a)(this, n), e = t.apply(this, arguments), e.leftAudioData = [], e.rightAudioData = [], e.currentFile = null, e.recordingTime = 0, e.volume = 0, e } return Object(u.a)(n, [{ key: 'record', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; var n; var r; var a; var c; var o = this; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, e.next = 3, navigator.mediaDevices.getUserMedia({ audio: { sampleRate: 48e3, channelCount: 2 }, video: !1 }); case 3:t = this.mediaStream = e.sent, n = new AudioContext(), r = this.mediaNode = n.createMediaStreamSource(t), a = n.createScriptProcessor.bind(n), c = this.jsNode = a(16384, 2, 2), c.connect(n.destination), r.connect(c), c.onaudioprocess = function (e) { var t = e.inputBuffer; var n = t.getChannelData(0); var r = t.getChannelData(1); o.volume = r[r.length - 1] + 1, o.leftAudioData.push(n.slice(0)), o.rightAudioData.push(r.slice(0)) }, p = setInterval(function () { o.recordingTime++ }, 1e3), e.next = 18; break; case 14:e.prev = 14, e.t0 = e.catch(0), console.log(e.t0), e.t0.name === 'TypeError' ? alert('当前环境不支持视频通话') : e.t0.name === 'NotAllowedError' ? alert('请允许使用麦克风') : e.t0.name === 'AbortError' ? console.log('中止') : e.t0.name === 'NotFoundError' ? console.log('找不到') : e.t0.name === 'OverConstrainedError' ? console.log('设备无法满足要求') : e.t0.name === 'SecurityError' && console.log('由于安全原因，被禁止'); case 18:case 'end':return e.stop() } }, e, this, [[0, 14]]) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'stopRecord', value: function () { var e = this.mediaStream; var t = e.getTracks(); clearInterval(p), t.forEach(function (e) { e.stop() }), this.jsNode.disconnect(), this.mediaNode.disconnect(); var n = A(this.leftAudioData); var r = A(this.rightAudioData); var a = m(n, r); this.currentFile = w(a), this.leftAudioData = [], this.rightAudioData = [] } }, { key: 'downloadToLocal', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, t = this.currentFile, e.next = 4, Object(v.a)(t, '请先录制完成，再下载'); case 4:e.next = 9; break; case 6:e.prev = 6, e.t0 = e.catch(0), alert(e.t0); case 9:case 'end':return e.stop() } }, e, this, [[0, 6]]) })); function t () { return e.apply(this, arguments) } return t }()) }, { key: 'playAudio', value: (function () { var e = Object(o.a)(regeneratorRuntime.mark(function e () { var t; return regeneratorRuntime.wrap(function (e) { while (1) switch (e.prev = e.next) { case 0:return e.prev = 0, t = this.currentFile, e.next = 4, Object(v.b)(t, '请先录制完成，再播放'); case 4:e.next = 9; break; case 6:e.prev = 6, e.t0 = e.catch(0), alert(e.t0); case 9:case 'end':return e.stop() } }, e, this, [[0, 6]]) })); function t () { return e.apply(this, arguments) } return t }()) }]), n }(f.d)); b = Object(d.a)([Object(f.a)({ components: { RealVolume: h.a } })], b); var g = b; function m (e, t) { for (var n = e.length + t.length, r = new Float32Array(n), a = 0; a < e.length; a++) { var c = 2 * a; r[c] = e[a], r[c + 1] = t[a] } return r } function w (e) { var t = 2 * e.length + 44; var n = new ArrayBuffer(t); var r = new DataView(n); var a = 44; y(r, 0, 'RIFF'), r.setUint32(4, 44 + 2 * e.length, !0), y(r, 8, 'WAVE'), y(r, 12, 'fmt '), r.setUint32(16, 16, !0), r.setUint16(20, 1, !0), r.setUint16(22, 2, !0), r.setUint32(24, 44100, !0), r.setUint32(28, 88200, !0), r.setUint16(32, 4, !0), r.setUint16(34, 16, !0), y(r, 36, 'data'), r.setUint32(40, 2 * e.length, !0); var o; var i = Object(c.a)(e); try { for (i.s(); !(o = i.n()).done;) { var u = o.value; r.setInt16(a, 32767 * u, !0), a += 2 } } catch (s) { i.e(s) } finally { i.f() } return new File([n], (new Date()).toISOString().replace('T', ' '), { type: 'audio/wave' }) } function y (e, t, n) { for (var r = 0; r < n.length; r++)e.setUint8(t + r, n.charCodeAt(r)) } function A (e) { var t; var n = e.length * e[0].length; var r = new Float32Array(n); var a = 0; var o = Object(c.a)(e); try { for (o.s(); !(t = o.n()).done;) { var i = t.value; r.set(i, a), a += i.length } } catch (u) { o.e(u) } finally { o.f() } return r } var j = g; var k = n('1a05'); var O = n('2877'); var D = n('6544'); var x = n.n(D); var R = n('8336'); function U (e) { this.$style = k.default.locals || k.default } var F = Object(O.a)(j, r, a, !1, U, null, null); t.default = F.exports; x()(F, { VBtn: R.a }) } }])
// # sourceMappingURL=sound-record-2.639477e5.js.map
